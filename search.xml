<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[原码反码补码的相互转换]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fcomputer2%2F</url>
    <content type="text"><![CDATA[首先，正数 的原码，反码，补码都是 相同的。所以，这里讨论负数的原码，反码，补码的相互转化问题。 一、负数原码和反码的相互转化负数原码转化为反码：符号位不变，数值位按位取反。 原码 1100 0010反码 1011 1101 负数反码转化为原码：符号位不变，数值位按位取反。 反码 1011 1101原码 1100 0010 二、负数原码和补码的相互转化负数原码转化为补码：符号位不变，数值位按位取反，末尾加一。 原码 1100 0010反码 1011 1101 //符号位不变，数值位按位取反补码 1011 1110 //末尾加1 负数补码转化为原码：符号位不变，数值位按位取反，末尾加1。 补码 1011 11101100 0001 //符号位不变，数值位按位取反原码 1100 0010 //末尾加1 三、负数反码和补码的相互转化负数反码转化为补码：末尾加1。 反码 1011 1101补码 1011 1110 负数补码转化为反码：末尾减1（注意，此处的反码是指原码的反码）。 补码 1011 1110原码的反码 1011 1101 //减法 借位 四、总结 正数的原码、反码和补码都相同。 负数原码和反码的相互转换：符号位不变，数值位按位取反。 负数原码和补码的相互转换：符号位不变，数值位按位取反，末位再加1。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二进制十进制的互换]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fcomputer%2F</url>
    <content type="text"><![CDATA[转成二进制主要有以下几种：正整数转二进制，负整数转二进制，小数转二进制； 1、正整数转成二进制： 要点一定一定要记住哈：除二取余，然后倒序排列，高位补零。 也就是说，将正的十进制数除以二，得到的商再除以二，依次类推知道商为零或一时为止，然后在旁边标出各步的余数，最后倒着写出来，高位补零就OK咧。哎呀，还是举例说明吧，比如42转换为二进制，如图1所示操作。 42除以2得到的余数分别为010101，然后咱们倒着排一下，42所对应二进制就是101010。如图2所示更直观的表达。 计算机内部表示数的字节单位是定长的，如8位，16位，或32位。所以，位数不够时，高位补零，所说，如图3所示，42转换成二进制以后就是。00101010，也即规范的写法为（42）10=（00101010）。 2、负整数转换成二进制： 方法：先是将对应的正整数转换成二进制后，对二进制取反，然后对结果再加一。还以42为例，负整数就是-42，如图4所示为方法解释。最后即为：（-42）10=（11010110）。 3、小数转换为二进制的方法： 对小数点以后的数乘以2，有一个结果吧，取结果的整数部分（不是1就是0喽），然后再用小数部分再乘以2，再取结果的整数部分……以此类推，直到小数部分为0或者位数已经够了就OK了。然后把取的整数部分按先后次序排列就OK了，就构成了二进制小数部分的序列，举个例子吧，比如0.125，如图5所示。 如果小数的整数部分有大于0的整数时该如何转换呢？如以上整数转换成二进制，小数转换成二进制，然后加在一起就OK了，如图6所示。 4、整数二进制转换为十进制： 首先将二进制数补齐位数，首位如果是0就代表是正整数，如果首位是1则代表是负整数。 先看首位是0的正整数，补齐位数以后，将二进制中的位数分别将下边对应的值相乘，然后相加得到的就为十进制，比如1010转换为十进制，方法如图7所示。 5、若二进制补足位数后首位为1时，就需要先取反再换算： 例如，11101011，首位为1，那么就先取反吧：-00010100，然后算一下10100对应的十进制为20，所以对应的十进制为-20，方法如图8所示。 6、将有小数的二进制转换为十进制时： 例如0.1101转换为十进制的方法：将二进制中的四位数分别于下边（如图9所示）对应的值相乘后相加得到的值即为换算后的十进制。 进制之间的转换虽然繁琐，但理解后也不难，但是需要经常温习，然后才不会弄混淆。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[递归算法与汉诺塔问题]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fhanoi%2F</url>
    <content type="text"><![CDATA[一、递归理解 大师 L. Peter Deutsch 说过：To Iterate is Human, to Recurse, Divine.（人理解迭代，神理解递归。） 1、递归定义：&emsp;&emsp;在数学与计算机科学中，递归（Recursion）是指将重复将问题分解为同类的子问题而解决问题的方法，也可以说是在函数的定义中使用函数自身的方法，其核心思想是 分治策略，分而治之。实际上，递归，顾名思义，其包含了两个意思：递 和 归，这也正是递归思想的精华所在。 2、递归条件：&emsp;&emsp;① 递归函数&emsp;&emsp;② 递归出口 举个简单例子如下： 12345678910111213141516/*** 假设有个数列 1 3 5 7 9 11 ....* *递归函数：f(n) = f(n-1)+2;*递归出口: f(1) = 1;* *@param n 求n项的值*@return 返回第n项的值*/int find (int n) &#123; if (n == 1) &#123; // 递归出口 return 1; &#125; else &#123; // 递归函数 return find(n-1)+2; &#125;&#125; 再举个例子，但由于它没有结（di）束（gui）条（chu）件（kou），进入死循环状态，所以是不正确的： 1234int recursion()&#123; recursion();&#125; 3、简单理解：&emsp;&emsp;递归：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门，你继续打开它。若干次之后，你打开面前的门后，发现只有一间屋子，没有门了。然后，你开始原路返回，每走回一间屋子，你数一次，走到入口的时候，你可以回答出你到底用这你把钥匙打开了几扇门。 &emsp;&emsp;循环：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门（若前面两扇门都一样，那么这扇门和前两扇门也一样；如果第二扇门比第一扇门小，那么这扇门也比第二扇门小，你继续打开这扇门，一直这样继续下去直到打开所有的门。但是，入口处的人始终等不到你回去告诉他答案。 4、深入理解&emsp;&emsp;正如上面所描述的场景，那么递归就是有去（递去）有回（归来），归去来兮…… 如下图所示。 &emsp;&emsp;“有去” 是指：递归问题必须可以分解为若干个规模较小，与原问题形式相同的子问题，这些子问题可以用相同的解题思路来解决，就像上面例子中的钥匙可以打开后面所有门上的锁一样。 &emsp;&emsp;“有回” 是指 : 这些问题的演化过程是一个从大到小，由近及远的过程，并且会有一个明确的终点(临界点)，一旦到达了这个临界点，就不用再往更小、更远的地方走下去。最后，从这个临界点开始，原路返回到原点，原问题解决。 归去来兮 函数递归 &emsp;&emsp;此时 我们应该可以理解到 分治策略 的含义了。特别地，在函数实现时，因为解决大问题的方法和解决小问题的方法往往是同一个方法，所以就产生了函数调用它自身的情况，这也正是递归的定义所在。在此再强调一下递归所需的条件，解决问题的函数必须有明确的结束条件，否则就会导致 无限递归 的情况。 5、阶乘理解递归题：用递归的方法求 n！？ 分析：举个例子算5！：&emsp;&emsp;&emsp;那么 5！= 4！x 5， 而 4！= 3！ x 4， 而 3！= 2！x 1， 而 2！= 1！ x 1，而 1！= 1，则可用下面递归公式表示： &emsp;&emsp;&emsp;n = 1&emsp;&emsp;&emsp;&emsp;&emsp;（n = 0 || 1）&emsp;&emsp;&emsp;n x（n - 1）！&emsp;（n &gt; 1） 当然这道题可以用递推法（迭代法）解决，个人感觉递归法属于递推法的反推算法，也不知道理解的对不对！ 代码实现如下（C语言）： 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;long recursion(int n);void main()&#123; int n; long result; printf( "input a integer number: " ); scanf( "%d", &amp;n ); result = recursion(n); printf( "%d! = %ld\n", n, result );&#125;long recursion(int n)&#123; long temp_result; if( n &lt; 0 ) &#123; printf( "n &lt; 0, input error!\n" ); &#125; else if( n == 0 || n == 1 ) &#123; temp_result = 1; &#125; else &#123; temp_result = recursion(n - 1) * n; &#125; return temp_result;&#125; 阶乘递归 二、汉诺（Hanoi）塔问题汉诺塔问题 由图可知： 1、要求： 将A中的圆盘借助B圆盘完全移动到C圆盘上； 每次只能移动一个圆盘； 并且每次移动时大盘不能放在小盘上面。 2、递归函数的伪算法为如下: 123456if(n == 1) 直接将 A柱上的圆盘从 A柱 移到 C柱;else 先将 A柱上的 （n-1） 个圆盘借助 C柱 移到 B柱; 再将 A柱上的第 n 个圆盘移到 C柱; 最后将 B柱上的 （n-1） 个圆盘借助 A柱 移到 C柱; 该递归算法的时间复杂度为 O（2的n次方），当有 n 个圆盘时，需要移动圆盘（2的n次方-1）次。 汉诺塔分析 为了更好理解汉诺塔问题实现的过程，以下列出 4 种不同层次的汉诺塔实现步骤的 GIF图以更快寻求到其中的规律（想要自己玩的小伙伴 4399小游戏 了解一下）： 三层汉诺塔实现步骤（一共移动 7 次）：三层汉诺塔四层汉诺塔实现步骤（一共移动 15 次）：四层汉诺塔五层汉诺塔实现步骤（一共移动 31 次）：五层汉诺塔六层汉诺塔实现步骤（一共移动 63 次）：六层汉诺塔 代码实现如下（C语言）： 1234567891011121314151617181920212223#include&lt;stdio.h&gt;void move(int n, char A, char B, char C)&#123; if( n == 1 ) &#123; printf( "圆盘 %d ：%c -&gt; %c\n", n, A, C ); // 当n只有1个的时候直接从a移动到c &#125; else &#123; move( n-1, A, C, B ); // 把a的n-1个盘子通过c移动到b printf( "圆盘 %d ：%c -&gt; %c\n", n, A, C ); // 把a的最后1个盘(最大的盘)移动到c move( n-1, B, A, C ); // 吧b上面的n-1个盘通过a移动到c &#125; &#125;void main()&#123; int n; printf( "请输入要移动的圆盘个数：" ); scanf( "%d", &amp;n ); move( n, 'A', 'B', 'C' );&#125; 代码实现 感谢：算法设计方法：递归的内涵与经典应用 —— 书呆子Rico浅析递归算法 —— 风也醉]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[扩展运算符（...）]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F24%2Fextension-operator%2F</url>
    <content type="text"><![CDATA[一、前言拓展运算符，是 es6一个很好的特性，它们可以通过减少赋值语句的使用，或者减少通过下标访问数组或对象的方式，使代码更加简洁优雅，可读性更佳。下面我将列出拓展运算符的主要应用场景，以及相关知识。 二、应用1、在函数调用时使用拓展运算符以前如果我们想将数组元素迭代为函数参数使用，一般使用 Function.prototype.apply 的方式： 12345function myFunction(x, y, z) &#123; console.log(x+""+y+""+z);&#125; var args = [0, 1, 2]; myFunction.apply(null, args); 有了展开语法，我们可以这样写： 123456function myFunction(x, y, z) &#123; console.log(x+""+y+""+z); &#125; var args = [0, 1, 2]; myFunction(...args); 提示：...arr 返回的并不是一个数组，而是各个数组的值。只有 [...arr] 才是一个数组，所以 ...arr 可以用来对方法进行传值。 2、数组和对象的拷贝1234567var arr1 = [1,2,3];var arr2 = [...arr1];arr2.push(4);console.log(arr1 === arr2); // falseconsole.log(arr1); // [1,2,3]console.log(arr2);// [1,2,3,4] 对象也是一样，也可以使用拓展运算符： 1234567var obj1 = &#123; a:1, b:2&#125;;var obj2 = &#123;...obj1&#125;;console.log(obj2); //&#123; a:1, b:2&#125;console.log(obj1 === obj2);// false 提示：在这里你会发现，这是一个深拷贝，其实不然，实际上, 展开语法和 Object.assign() 行为一致, 执行的都是浅拷贝（只遍历一层）。 3、构造字面量数组没有展开语法的时候，只能组合使用 push splice concat 等方法，来将已有数组元素变成新数组的一部分： 1234var arr1 = [1,2,3];var arr2 = [4,5,...arr1];console.log(arr2);// [4,5,1,2,3] 代替 Array.concat 函数： 12345var arr1 = [1,2,3];var arr2 = [4,5,6];var demo = [...arr1,...arr2];console.log(demo);// [1, 2, 3, 4, 5, 6] 代替 Array.unshift 方法： 12345var arr1 = [1,2,3];var arr2 = [4,5,6];arr1 = [...arr2,...arr1];console.log(arr1);// [4, 5, 6, 1, 2, 3] 4、字符串转数组1234var demo = "hello"var str = [...demo];console.log(str);// ["h", "e", "l", "l", "o"] 剩余语法（剩余参数，rest运算符）剩余语法(Rest syntax) 看起来和展开语法完全相同，不同点在于, 剩余参数用于解构数组和对象。从某种意义上说，剩余语法与展开语法是相反的：展开语法将数组展开为其中的各个元素，而剩余语法则是将多个元素收集起来并 “凝聚” 为单个元素。 1、主要用于不定参数，所以 es6开始不再使用 arguments对象： 123456789var demo = function (...arg)&#123; for (let item of arg)&#123; console.log(item); &#125;&#125;demo(1,2,3);// 1// 2// 3 1234567var demo = function (a,...arg)&#123; console.log(a); console.log(arg);&#125;demo(1,2,3,4);// 1// [2, 3, 4] 2、配合解构一起使用： 12345var [a,...rest] = [1,2,3,4];console.log(a);console.log(rest);// 1// [2,3,4] 12345678910var obj = &#123; a:1, b:2, c:3&#125;var &#123;a,...demo&#125; = obj;console.log(a);console.log(demo);// 1// &#123;b:2,c:3&#125; 12345678function f(...[a, b, c]) &#123; console.log(a); return a + b + c;&#125;console.log(f(1)) //1, NaN console.log(f(1, 2, 3)) // 1, 6console.log(f(1, 2, 3, 4)) //1, 6 三、小结等号表达式是典型的赋值形式，函数传参和 for循环的变量都是特殊形式的赋值。解构的原理是赋值的两边具有相同的结构，就可以正确取出数组或对象里面的元素或属性值，省略了使用下标逐个赋值的麻烦。对于三个点号，三点放在形参或者等号左边为 rest运算符; 放在实参或者等号右边为 spread运算符，或者说，放在被赋值一方为 rest运算符，放在赋值一方为扩展运算符。 转自原文：Js es6中扩展运算符（…） —— fly63前端网]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[call、apply、bind 了解一下？]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F23%2Fcall%2F</url>
    <content type="text"><![CDATA[一、作用：call apply bind ：用来改变函数调用的 this 指向。 二、实例：1234567891011121314151617181920212223242526272829303132333435// 有只猫叫小黑，小黑会吃鱼const cat = &#123; name: '小黑', eatFish(...args) &#123; console.log('this指向=&gt;', this); console.log('...args', args); console.log(this.name + '吃鱼'); &#125;,&#125;// 有只狗叫大毛，大毛会吃骨头const dog = &#123; name: '大毛', eatBone(...args) &#123; console.log('this指向=&gt;', this); console.log('...args', args); console.log(this.name + '吃骨头'); &#125;,&#125;console.log('=================== call =========================');// 有一天大毛想吃鱼了，可是它不知道怎么吃。怎么办？小黑说我吃的时候喂你吃cat.eatFish.call(dog, '汪汪汪', 'call')// 大毛为了表示感谢，决定下次吃骨头的时候也喂小黑吃dog.eatBone.call(cat, '喵喵喵', 'call')console.log('=================== apply =========================');cat.eatFish.apply(dog, ['汪汪汪', 'apply'])dog.eatBone.apply(cat, ['喵喵喵', 'apply'])console.log('=================== bind =========================');// 有一天他们觉得每次吃的时候再喂太麻烦了。干脆直接教对方怎么吃const test1 = cat.eatFish.bind(dog, '汪汪汪', 'bind')const test2 = dog.eatBone.bind(cat, '喵喵喵', 'bind')test1()test2() 控制台结果 ★ 上述例子可看出：（1）call 跟 apply 的用法几乎一样，唯一的不同就是传递的参数不同，call 只能一个参数一个参数的传入。（2）apply 则只支持传入一个数组，哪怕是一个参数也要是数组形式。最终调用函数时候这个数组会拆成一个个参数分别传入。（3）至于 bind 方法，他是直接改变这个函数的 this 指向并且返回一个新的函数，之后再次调用这个函数的时候 this 都是指向 bind 绑定的第一个参数。bind 传餐方式跟 call方法一致。 由于 apply 函数传参的特殊性，我们又衍生出了一个黑魔法。 1234567// 如果一个数组我们已知里面全都是数字，想要知道最大的那个数，由于Array没有max方法，Math对象上有// 我们可以根据apply传递参数的特性将这个数组当成参数传入// 最终Math.max函数调用的时候会将apply的数组里面的参数一个一个传入，恰好符合Math.max的参数传递方式// 这样变相的实现了数组的max方法。min方法也同理const arr = [1,2,3,4,5,6]const max = Math.max.apply(null, arr)console.log(max) // 6 这里 bind 函数也有一个小技巧： 12345// 如果你想将某个函数绑定新的`this`指向并且固定先传入几个变量可以在绑定的时候就传入，之后调用新函数传入的参数都会排在之后const obj = &#123;&#125;function test(...args) &#123;console.log(args)&#125;const newFn = test.bind(obj, '静态参数1', '静态参数2')newFn('动态参数3', '动态参数4') 控制台结果 三、MDN 文档介绍1、call 语法 fun.call(thisArg, arg1, arg2, ...) thisArg：在 fun 函数运行时指定的 this 值。需要注意的是，指定的 this 值并不一定是该函数执行时真正的 this 值，如果这个函数处于非严格模式下，则指定为 null 和 undefined 的 this 值会自动指向全局对象(浏览器中就是 window 对象)，同时值为原始值(数字，字符串，布尔值)的 this 会指向该原始值的自动包装对象。 arg1, arg2, ... 指定的参数列表 2、apply 语法 fun.apply(thisArg, [argsArray]) thisArg 在 fun 函数运行时指定的 this 值。需要注意的是，指定的 this 值并不一定是该函数执行时真正的 this 值，如果这个函数处于非严格模式下，则指定为 null 或 undefined 时会自动指向全局对象（浏览器中就是 window 对象），同时值为原始值（数字，字符串，布尔值）的 this 会指向该原始值的自动包装对象。 argsArray 一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 fun 函数。如果该参数的值为null 或 undefined，则表示不需要传入任何参数。从ECMAScript 5 开始可以使用类数组对象。 3、bind 语法 fun.bind(thisArg[, arg1[, arg2[, ...]]]) thisArg 当绑定函数被调用时，该参数会作为原函数运行时的 this 指向。当使用new 操作符调用绑定函数时，该参数无效。 arg1, arg2, ... 当绑定函数被调用时，这些参数将置于实参之前传递给被绑定的方法。 四、总结1、当我们使用一个函数需要改变 this 指向的时候才会用到 call apply bind 2、如果你要传递的参数不多，则可以使用 fn.call(thisObj, arg1, arg2 ...) 3、如果你要传递的参数很多，则可以用数组将参数整理好调用 fn.apply(thisObj, [arg1, arg2 ...]) 4、如果你想生成一个新的函数长期绑定某个函数给某个对象使用，则可以使用 const newFn = fn.bind(thisObj); newFn(arg1, arg2...) 转自原文：聊一聊call、apply、bind的区别 —— Frank_Lin]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[箭头函数]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F22%2FarrowFunc%2F</url>
    <content type="text"><![CDATA[一、码上看懂 =&gt;1、对比一下，看看省了啥、多了啥：es5 函数 12345var f = function () &#123; console.log("function"); return 'value';&#125;f(); es6 箭头函数 12345var arrow_f = () =&gt; &#123; console.log("arrow function"); return 'value';&#125;arrow_f(); 2、只有一个参数时可以省略 () ：es5 函数（带参数） 1234var f = function (v) &#123; console.log(v);&#125;f("function"); es6 箭头函数（带参数） 1234var arrow_f = v =&gt; &#123; console.log(v);&#125;arrow_f("arrow function"); 3、只有一条语句的时候可以省略 {}、return ：es5 函数返回参数 123var f = function (v) &#123; return v;&#125; es6 箭头函数返参 1var arrow_f = v =&gt; v; 4、返回一个对象的时候用 () 包起对象：es5 函数 123456var f = function () &#123; return &#123; name: '韩梅梅', age: 18 &#125;&#125; es6 箭头函数 1234var arrow_f = () =&gt; (&#123; name: '韩梅梅', age: 18&#125;) 注意：参数和箭头之间不能换行。 二、demo 操作：1、重复命名函数：12345678910&lt;body&gt; &lt;script&gt; function fun1(a, a) &#123; console.log(arguments, a); &#125; var arrow = (a, a) =&gt; &#123; console.log(a); &#125; &lt;/script&gt;&lt;/body&gt; 2、this指向：1234567891011121314151617&lt;body&gt; &lt;script&gt; const lilei = &#123; msg: '李雷' &#125; var lileiFunc = function () &#123; var arrow_lileiFunc = () =&gt; &#123; console.log(this.msg); &#125; arrow_lileiFunc(); &#125; lileiFunc.call(lilei); var arrow_func_prototype = () =&gt; &#123; consolo.log("1111"); &#125; &lt;/script&gt;&lt;/body&gt; 3、构造函数：123456789101112131415&lt;body&gt; &lt;script&gt; function Person() &#123; if (!new.target) &#123; console.log('只能使用new调用该构造函数'); &#125; console.log(new.target); &#125; function Person1() &#123; console.log(new.target); &#125; Person(); Person1(); &lt;/script&gt;&lt;/body&gt; 4、arguments：123456789&lt;body&gt; &lt;script&gt; (function () &#123; (() =&gt; &#123; console.log(arguments); &#125;)(); &#125;)(1, 2, 3); &lt;/script&gt;&lt;/body&gt; 三、总结 =&gt; es6 箭头函数 和 es5 函数的区别1、箭头函数不支持重复命名形参，普通函数可以； 2、箭头函数不能使用 call、apply 等方法改变 this； 3、箭头函数的 this 指向定义时所处的上下文的 this； 4、箭头函数没有原型对象 .prototype； 5、箭头函数不能做构造函数； 6、箭头函数没有 arguments。 说明：1、所有函数（除了箭头函数）都能用的变量 [arg1,arg2,arg3]2、es6 引进的返回 new 作用的那个构造函数（构造函数中之中）]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dailyBook]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F14%2FdailyBook%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>日记本</category>
      </categories>
      <tags>
        <tag>日记本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[圣杯布局 & 双飞翼布局]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F07%2Flayout%2F</url>
    <content type="text"><![CDATA[一、背景介绍&emsp;&emsp;2006 年 Matthew Levine 在 《A LIST APART》 上发表了一篇名为 《In Search of the Holy Grail》 的文章，提出了 圣杯布局 的思路。利用 负外边距 来实现我们需要的效果，充分体现了 CSS的艺术 与 负外边距 的强大。比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达 “渴求之物” 的意思。 &emsp;&emsp;之后 淘宝的UED 为了实现同样的效果提出了 双飞翼布局 的思路，据说是玉伯大大提出的，思路是：middle 是鸟的身体，left 和 right 是鸟的翅膀，先把主要的东西 middle 放好，再将翅膀移到合适的位置。双飞翼布局同样也使用了 负外边距 来移动侧栏从而达到目的。 &emsp;&emsp;圣杯布局 与 双飞翼布局的实现，目的都在于：固定左右两栏宽度，中间内容自适应 来实现 三栏式布局。圣杯布局和双飞翼布局有着相似的思路，但是在某些细节上有着不同之处。 二、相同点：1、两侧宽度固定，中间宽度自适应；2、中间部分在 DOM结构上优先，以便先行渲染；3、允许三列中的任意一列成为最高列；4、只需要使用一个额外的 &lt;div&gt; 标签； 三、圣杯布局优点：不需要添加 DOM节点；缺点：中间部分的宽小于左侧部分时就会发生布局混乱，即某一列内容若过多，文字会溢出（middle&lt;left即会变形）。解决方法：等高布局；最小宽度问题：min-width:600px。 1、DOM 结构123456789&lt;body&gt; &lt;header&gt;header&lt;/header&gt; &lt;div class="main"&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt; &lt;/div&gt; &lt;footer&gt;footer&lt;/footer&gt;&lt;/body&gt; 首先设置出整个布局的 DOM结构，主体部分是由 main 包裹的 content、left、right 三个盒子容器，其中 content 优先在最前面。 2、CSS 修饰123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;style&gt; * &#123; margin: 0; padding: 0; &#125; header&#123; width: 100%; height: 20px; background: #999; text-align: center; &#125; footer&#123; width: 100%; height: 20px; background: #555; text-align: center; &#125; .main &#123; width: 500px; height: 300px; background: #ddd; margin: 0 auto; padding-left: 200px; padding-right: 300px; &#125; .middle &#123; width: 100%; height: 100%; background: green; float: left; &#125; .left &#123; width: 200px; height: 100%; background: red; float: left; /* 浮动自身，向上移动一行 */ margin-left: -100%; /* 自身定位 */ position: relative; top: 0; left: -200px; &#125; .right &#123; width: 300px; height: 100%; background: blue; float: left; /* 属性为自身的宽度，上一行的行尾 */ margin-left: -300px; /* 自身定位 */ position: relative; top: 0; right: -300px; &#125;&lt;/style&gt; 圣杯布局 圣杯布局：借助的是其他非主要元素覆盖了其父元素的 padding 值所占据的宽度，同一个杯子，非主要元素其只是占据了全部容器的 padding 值部分。 四、双飞翼布局优点：不会像圣杯布局那样变形；缺点：多加了一层 DOM节点。 1、DOM 结构1234567891011&lt;body&gt; &lt;header&gt;header&lt;/header&gt; &lt;div class="main"&gt; &lt;div class="content"&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;/div&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt; &lt;/div&gt; &lt;footer&gt;footer&lt;/footer&gt;&lt;/body&gt; 这里的 DOM结构与圣杯布局有稍许出入，在 middle 外添加了了一个 content 盒子容器包裹。 2、CSS 修饰1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;style&gt; * &#123; margin: 0; padding: 0; &#125; header&#123; width: 100%; height: 20px; background: #999; text-align: center; &#125; footer&#123; width: 100%; height: 20px; background: #555; text-align: center; &#125; .main &#123; width: 1200px; height: 300px; background: #ddd; margin: 0 auto; &#125; .middle &#123; height: 100%; margin-left: 200px; margin-right: 300px; background: pink; &#125; .content &#123; width: 100%; height: 100%; background: green; float: left; &#125; .left &#123; width: 200px; height: 100%; background: red; float: left; margin-left: -100%; &#125; .right &#123; width: 300px; height: 100%; background: blue; float: left; margin-left: -300px; &#125;&lt;/style&gt; 双飞翼布局 双飞翼布局：给 middle 添加一个外层元素 content，left、right 元素所占据的空间是 middle 的 margin空间，像鸟的两个翅膀，与内容部分 content 脱离。 五、总结这里有几点需要留意：1、先写 middle，然后是 left 和 right，因为需要先渲染 middle；2、left、right 需设置 position:relative 以及相应的 left、right 值；3、理解 负边距 的作用，left 的 margin-left:-100% 使它上移一行，同时 right 向左移占据 left 原先位置；同理，right 的 margin-left:-300px 使它上移并靠右。 布局 优点 缺点 圣杯 结构简单，无多余 DOM元素 中间部分的宽度小于左侧时发生布局混乱 双飞翼 支持各种宽高变化，通用性强 DOM结构增多，增加渲染树生成的计算量 感谢：1、圣杯布局和双飞翼布局（前端面试必看） —— 森西悠然2、圣杯布局和双飞翼布局的作用和区别 —— 暖风3、超经典面试题：用多种方法实现圣杯布局和双飞翼布局 —— mytac4、圣杯布局，双飞翼布局及其优缺点 —— DOM曼珠沙华]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的浮动和清除浮动]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F06%2FclearFloat%2F</url>
    <content type="text"><![CDATA[一、浮动…？1、定义：(1) W3C 定义：CSS float 属性定义元素在哪个方向浮动，浮动元素会生成一个块级框，直到该块级框的外边缘碰到包含框或者其他的浮动框为止。(2) MDN 定义：float CSS 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动(文档流)中移除，尽管仍然保持部分的流动性（与绝对定位相反）。(3) 浮动的核心总结为一句话：浮动元素会脱离文档流并向左/向右浮动，直到碰到父元素或者另一个浮动元素！ 2、浮动的特征：(1) 浮动会脱离文档流；(2) 浮动可以内联排列；(3) 浮动会导致父元素高度坍塌。 3、示例：设一个 宽700px 的黑色边框父级元素盒子，里面设置三个 大、中、小 子级元素盒子： 123456789101112131415161718192021222324&lt;style&gt; .container &#123; width: 700px; border: 2px solid #000; &#125; .small &#123; height: 100px; width: 100px; background: red; /* float:left; */ &#125; .middle &#123; height: 100px; width: 200px; background: blue; /* float:left; */ &#125; .large &#123; height: 100px; width: 300px; background: green; /* float:left; */ &#125; &lt;/style&gt; 1234567&lt;body&gt; &lt;div class="container"&gt; &lt;div class="small"&gt;small&lt;/div&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;div class="large"&gt;large&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 子元素未浮动时，它们会默认撑开父元素的高度： 子盒子未浮动时 子元素添加浮动后，子元素脱离文档流，无法撑起父元素，导致父元素高度塌陷： 子盒子浮动时 那么接下来就是重点了，造成这种情况，我们就得去解决这种不正常的情况 —— 清除浮动！ 二、清除浮动…？1、清除浮动的原因：清除浮动主要是为了解决 子元素浮动 导致 父元素内部高度为 0 （即高度塌陷）的问题。 2、清除浮动的方法：(1) 给浮动元素的容器添加浮动（推荐指数：★）给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，不推荐使用。 (2) 添加新标签（推荐指数：★★）在最后一个浮动标签后新加一个标签，给其设置 clear：both;核心要点：clear 属性不允许被清除浮动的元素的左边/右边挨着浮动元素，底层原理是在被清除浮动的元素上边或者下边添加足够的清除空间。（注意：我们是通过在别的元素上清除浮动来实现撑开高度的， 而不是在浮动元素上。） 123456&lt;div class="container"&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;/div&gt; ✦ 优点：简单方便，通俗易懂，浏览器兼容性好。✦ 缺点：需要添加大量无语义标签，后期不易维护。 (3) 创建 BFC（推荐指数：★★★）A、给父元素 设置宽高【不推荐】：副作用：父元素宽高写死了，不能根据子元素自动调节。 B、给父元素也 添加浮动【不推荐】：副作用：父元素脱离文档流，父元素的宽度会丢失，且会导致下边的元素上移，不能解决问题。 C、给父元素添加 display:inline-block【不推荐】：副作用：可以解决问题，但会导致宽度丢失。 D、☆ 设置 overflow 属性【常见，副作用最小】：overflow 设置为 非visible 的值。推荐使用 hidden 兼容IE（副作用最小 - 局限在元素阴影或下拉菜单会被截断）。a) auto （溢出显示滚动条）；b) scroll （默认就显示滚动条）；c) hidden （溢出隐藏）[常用]。 ✦ 优点：代码简洁。✦ 缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素。 注：这种方式不兼容 IE6。在 IE6 中有类似 BFC 的隐含属性 hasLayout，开启方式很多，推荐使用 zoom:1。 (4) :after 伪元素清除浮动（推荐指数：★★★★★）结合 :after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。给浮动元素的容器添加一个 clearfix 的class，然后给这个class 添加一个 :after 伪元素实现元素末尾添加一个看不见的 块元素（Block element）清理浮动。 1234567891011121314151617181920212223242526272829303132// 现代浏览器clearfix方案，不支持IE6/7.clearfix:after &#123; display: table; content: " "; clear: both;&#125;// 全浏览器通用的clearfix方案// 引入了zoom以支持IE6/7.clearfix:after &#123; display: table; content: " "; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125;// 全浏览器通用的clearfix方案【强力推荐】// 引入了zoom以支持IE6/7// 同时加入:before以解决现代浏览器上边距折叠的问题.clearfix:before,.clearfix:after &#123; display: table; content: " ";&#125;.clearfix:after &#123; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125; 通过 CSS伪元素在容器的内部元素最后添加了一个看不见的 空格 &quot;020&quot; 或 点 &quot;.&quot;，并且赋予 clear 属性来清除浮动。需要注意的是为了 IE6 和 IE7 浏览器，要给 clearfix 这个 class 添加一条 zoom:1; 触发 haslayout。 ✦ 优点：符合闭合浮动思想，结构语义化正确。✦ 缺点：IE6-7 不支持伪元素 :after，使用 zoom:1 触发 hasLayout。 (5) :before 和 :after 双伪元素清除浮动（推荐指数：★★★★★） 12345678910.clearfix:after,.clearfix:before&#123; content: ""; display: table;&#125;.clearfix:after&#123; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125; 1234&lt;div class="fahter clearfix"&gt; &lt;div class="big"&gt;big&lt;/div&gt; &lt;div class="small"&gt;small&lt;/div&gt;&lt;/div&gt; ✦ 优点：代码更简洁。✦ 缺点：用 zoom:1 触发 hasLayout。 三、浮动的适用场景1、文字环绕效果：文字环绕效果 2、页面布局：浮动可以实现常规的多列布局，但个人推荐使用 inline-block。浮动更适合实现自适应多列布局，比如左侧固定宽度，右侧根据父元素宽度自适应。 页面布局 3、多个元素内联排列：如前文提到的，浮动可以实现类似 inline-block 的排列，比如菜单多个元素内联排列。但个人推荐使用 inline-block。 多个元素内联排列 四、总结 学习浮动的定义及其特征。 掌握 5种清除浮动的方法。 了解浮动的适用场景。 感谢：1、CSS中的浮动和清除浮动，梳理一下！ —— 齐修_qixiuss2、CSS清除浮动方法总结 —— Damonare3、清除浮动的最常用的四种方法，以及优缺点 —— h_qingyi]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的伪类和伪元素]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F05%2FfakeClass%2F</url>
    <content type="text"><![CDATA[一、介绍：1、为什么用 伪类 和 伪元素是为了格式化文档树以外的信息，也就是说，伪类 和 伪元素 是用来修饰不在文档树中的部分。比如一句话中的第一个字母，或者是列表中的第一个元素。 2、伪类CSS 伪类（Pseudo-classes）是一个选择器，用于 已有元素 处于某种状态时为其添加对应的样式，这个状态是 根据用户行为而动态变化的。由此可以看出，其功能和 class 有些类似，但它是基于文档之外的抽象，只有处于 DOM树无法描述的状态下才能为元素添加样式，所以叫伪类。例如，:hover 可被用于在用户将鼠标悬停在按钮上时改变按钮的颜色。 3、伪元素CSS 伪元素 是用来添加一些选择器的特殊效果，其控制的内容和 元素是没有差别的，但是它本身只是基于元素的抽象。它就像是在标记中添加了一个 不存在于 DOM文档中 的全新的HTML元素，所以称为伪元素。例如，我们可以通过 :before 来在一个元素之前添加一些文本，并为这些文本添加样式。 二、伪类和伪元素的区别1、相同之处：伪类 和 伪元素 都不存在于源文件和文档树中。 2、不同之处：伪类：是基于普通 DOM元素而产生的不同状态，他是 DOM元素的某一特征。伪元素：能够创建在 DOM树中不存在的抽象对象，而且这些抽象对象是能够访问到的。也就是说，伪元素 产生新对象，在 DOM中看不到但可以操作；伪类 不产生新对象，仅是 DOM中一个元素的不同状态。 (1) 伪类 示例说明： 1234&lt;ul&gt; &lt;li&gt;第一列&lt;/li&gt; &lt;li&gt;第二列&lt;/li&gt;&lt;/ul&gt; 如果我们想要给第一列添加样式，可以有以下方法： 方法A、给第一列添加一个类，并在该类中定义样式： 123456&lt;ul&gt; &lt;li class="first-item"&gt;第一列&lt;/li&gt; &lt;li&gt;第二列&lt;/li&gt;&lt;/ul&gt;.first-item&#123;color:orange;&#125; 方法B、给第一个 &lt;li&gt; 设置 :first-child 伪类 来为其添加样式： 123456&lt;ul&gt; &lt;li&gt;第一个&lt;/li&gt; &lt;li&gt;第二个&lt;/li&gt;&lt;/ul&gt;li:first-child&#123;color:orage;&#125; 此时被修饰的 &lt;li&gt; 依然存在于DOM树中。 (2) 伪元素 示例说明： 123&lt;p&gt; Hello World&lt;/p&gt; 想要给该段落第一个字母添加样式，可以有以下方法： 方法A、給第一个字母包裹 &lt;span&gt; 元素并设置样式： 12345&lt;p&gt; &lt;span class="first"&gt;H&lt;/span&gt;ello World&lt;/p&gt;.first&#123;color:red;&#125; 方法B、给 &lt;p&gt;元素设置 P:first-letter 伪元素 为其添加样式： 12345&lt;p&gt; Hello World&lt;/p&gt;p:first-letter&#123;color:red;&#125; 这时看起来像创建了一个虚拟的 span元素 并为其添加样式，但实际上在 DOM树中并不存在这个 span元素。 从上述例子中我们可以看出：伪类的操作对象是文档树中已有的元素，而伪元素则创建了一个文档树外的元素。因此，伪类与伪元素的区别在于：有没有创建一个文档树之外的元素。 3、伪元素使用单冒号还是双冒号？&emsp;&emsp;CSS3规范中要求 使用双冒号（::）表示 伪元素，以此来区分伪类和伪元素，比如 ::before 和 ::after 等伪元素使用双冒号（::），:hover 和:active 伪类使用单冒号（:）。除了一些低于IE8版本的浏览器外，大部分浏览器都支持伪元素的双冒号（::）表示方法。&emsp;&emsp;然而除了少部分伪元素如 ::backdrop 必须使用双冒号（::），大部分伪元素都支持单冒号和双冒号的写法，比如 ::after，写成 :after 一样可以正常运行。&emsp;&emsp;W3C标准中说到，虽然CSS3标准要求伪元素使用双冒号的写法，但也依然支持单冒号的写法。为了向后兼容，我们建议你在目前还是使用 单冒号 的写法。 三、主要用法1、常用的 伪类 和 伪元素：伪类的分类及作用 伪元素的分类及作用 2、详细参见：MDN 标准伪类索引：MDN 标准伪类索引 MDN 标准伪元素索引：MDN 标准伪元素索引 感谢：1、伪类与伪元素的区别和用法 —— 爽朗琴天2、CSS中伪类及伪元素用法详解 —— 路修远而求索]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 属性：box-sizing]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F04%2Fbox-sizing%2F</url>
    <content type="text"><![CDATA[一、先了解盒模型由于涉及到盒子的计算方式，所以在学习 box-sizing 这个属性前，我们先了解一下 盒模型（Box Model）。什么是 盒模型？根据 W3C 给出的解释：对一个网页来说，基本上页面上所有的元素对象，其实际的呈现形式都是一个盒子形状的抽象。如下图： 盒模型 从图中可以看出，这个所谓的盒子其实就一个长方形（或者正方形）的抽象。从外到内，他由4层东西组成，分别是margin，border，padding，content。他们的结构特征是一层包裹着一层。 Margin（外边距） - 清除边框区域。Margin没有背景颜色，它是完全透明的； Border（边框） - 边框周围的填充和内容。边框是受到盒子的背景颜色影响； Padding（内边距） - 清除内容周围的区域。会受到框中填充的背景颜色影响； Content（内容） - 盒子的内容，显示文本和图像。 二、两种不兼容的盒模型对盒模型有了了解之后，我们就需要知道两种不一样的盒模型： W3C 标准盒模型 IE 盒模型 通过对这两个盒模型的了解后，我们便明白 box-sizing 产生的原因了。 1、W3C 标准盒模型： 标准盒模型 &emsp;&emsp;标准盒模型中 content内容 的大小就是 width 和 height 的值。整个盒子实际占用的空间是 width + padding + border + margin。举个栗子，盒子的样式属性如下： 1234567891011121314&lt;style&gt; .box &#123; width: 20px; padding-left: 1px; padding-right: 2px; border-left: 3px; border-right: 4px; margin-left: 5px; margin-right: 6px; &#125;&lt;/style&gt;&lt;body&gt; &lt;div class="box"&gt;&lt;/div&gt;&lt;/body&gt; 那么整个 div盒子 在页面中占用的 宽度 就是 20 + 1 + 2 + 3 + 4 + 5 + 6 = 41px。 2、IE 盒模型： IE盒模型 &emsp;&emsp;通过图片对比盒子宽高，可得出结论，IE 盒模型与标准盒模型的 核心差异 在于：IE盒模型的 content 部分包含了 border 和 padding。&emsp;&emsp;这种情况下，padding 和 border 反占了一部分的 width 和 height，也就是说实际上 内容区域 呈现的 真实内容 所占的空间变小了。以宽为例，真实内容的宽度为 width - border - padding。&emsp;&emsp;那么此时 内容区域 的宽便是 width - border - padding + border + padding = width。所以整个盒子实际占用的空间就是 content + margin。还是上面那个栗子，在IE 盒模型下它的实际占宽就是 （20 - 1 - 2 - 3 - 4） + 1 + 2 + 3 + 4 + 5 + 6 = 20 + 5 + 6 = 31px。 ★ 那么就是因为存在着这两种不同的盒模型，要是没有对网页的文档进行类型声明（html5 声明的文档 默认用 W3C标准来渲染页面），各个浏览器会按照自己的标准去使用不同的盒模型渲染。这里说的就是 IE浏览器最为鹤立鸡群。那么这里我们就需要用到 css中的 box-sizing 属性来解决这种 不同浏览器执行不同的盒模型导致的渲染方式不一 的情况。 三、box-sizingbox-sizing 是 CSS3 的 Box Model（盒模型）属性之一。 box-sizing 属性允许你以特定的方式定义匹配某个区域的特定元素。其语法如下： box-sizing: content-box | border-box | inherit 值 描述 说明 content-box 这是由 CSS2.1 规定的宽度高度行为。宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框 此值为其默认值，其让元素维持W3C的标准盒模型 border-box 为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度 此值让元素维持IE传统的Box Model（IE6以下版本） inherit 规定应从父元素继承 box-sizing 属性的值 —— box-sizing 属性现代浏览器都支持，但IE家族只有 IE8版本以上才支持，虽然现代浏览器支持 box-sizing，但有些浏览器还是需要加上自己的前缀。 box-sizing 使用场景1、特殊场景的布局：&emsp;&emsp;假设我们有这样的一个场景，设置子类元素的 margin 或者 border 时，可能会撑破父层元素的尺寸，这时我就需要使用 box-sizing: border-box 来将 border 包含进元素的尺寸中，这样就不会存在撑破父层元素的情况了。 2、统一风格的表单元素：&emsp;&emsp;表单中有一些 input元素其实还是展现的是传统 IE盒模型，带有一些默认的样式，而且在不同平台或者浏览器下的表现不一，造成了表单展现的差异。此时我们可以通过 box-sizing 属性来构建一个风格统一的表单元素。 感谢：W3Cschool]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BFC 和 IFC]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F02%2FBFC%2F</url>
    <content type="text"><![CDATA[一、前言学习 BFC 之前，先简单了解一下 普通流（normal flow，也称文档流）。普通流 就是将窗体自上而下分成一行一行，块级元素从上至下、行内元素从左至右 地依次排放元素的过程。那么普通流是怎么样把页面布局呈现的呢？常见的就是通过 BFC 和 IFC。 二、BFC（块级格式化上下文）1、MDN 定义：&emsp;&emsp;块格式化上下文（Block Formatting Context，BFC），是Web页面的可视化CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。 2、创建条件：&emsp;&emsp;(1) ★ 根元素 HTML&emsp;&emsp;(2) ★ 浮动元素（元素的 float 不是 none）&emsp;&emsp;(3) ★ 绝对定位元素（元素的 position 为 absolute 或 fixed）&emsp;&emsp;(4) ★ 行内块元素（元素的 display 为 inline-block）&emsp;&emsp;(5) ★ 表格单元格（元素的 display为 table-cell，HTML表格单元格默认为该值）&emsp;&emsp;(6) 表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）&emsp;&emsp;(7) 匿名表格单元格元素（元素的 display为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot的默认属性）或 inline-table）&emsp;&emsp;(8) ★ overflow 值不为 visible 的块元素&emsp;&emsp;(9) display 值为 flow-root 的元素&emsp;&emsp;(10) contain 值为 layout、content或 paint 的元素&emsp;&emsp;(11) ★ 弹性元素（display为 flex 或 inline-flex元素的直接子元素）&emsp;&emsp;(12) 网格元素（display为 grid 或 inline-grid 元素的直接子元素）&emsp;&emsp;(13) 多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1）&emsp;&emsp;(14) column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中。 3、渲染规则：&emsp;&emsp;(1) 在正常的文档流中，块级元素是按照 从上自下 排列的。如果我给里面的元素一个 float 或者绝对定位，它就会脱离普通文档流；&emsp;&emsp;(2) BFC 在页面上是一个 独立的容器，最显著的效果就是建立一个隔绝的空间，外面的元素不会影响BFC里面的元素，反之，里面的元素也不会影响外面的元素；&emsp;&emsp;(3) BFC 的区域 不会 与浮动元素的盒子重叠；&emsp;&emsp;(4) ★ 垂直方向 上的外边距会发生边距折叠（包括父子元素和兄弟元素），水平方向 不会发生边距折叠。 4、作用：&emsp;&emsp;(1) 解决边距重叠；(2) 清除浮动。 5、示例：&emsp;&emsp;(1) 解决边距重叠：&emsp;&emsp;网页中我放了一个标题 h1 和三个 p 段落，为了更好看清楚边距我都设置了一个红色背景，这里我设置了 p 段落的上下边距为 20px。正常逻辑来讲，line 1 和line 2 之间的间距是 20px + 20px = 40px，可是我们很清楚的发现，line 1 和 line 2 之间、line 2 和 line 3 之间的间距仍是 20px。那么此时就是发生了垂直方向上的边距重叠现象： 为解决这个问题，我们就可以去创建一个 BFC，即创建一个 块级元素上下文的格式环境，如上述创建 BFC 条件中我们利用 (8) 来给我们的 line 1 添加一个父元素盒子，设置 css属性 overflow: hidden，边距重叠问题便解决了，如图所示： &emsp;&emsp;(2) 清除浮动： 1234567891011121314151617&lt;style&gt; .one &#123; /* 在文档流中，标签和文字将 父元素 撑起来了 */ background: pink; /* overflow: hidden; */ &#125; .two &#123; /* 浮动后离开了文档流 */ float: left; &#125; &lt;/style&gt;&lt;body&gt; &lt;div class="one"&gt; &lt;div class="two"&gt;hello world&lt;/div&gt; &lt;/div&gt; 你好世界！&lt;/body&gt; 这里的子元素 “two” 在设置了浮动后，脱离了文档流，父元素 “one” 的内容为空，背景色不见了： 那么此时我们需要去清除浮动，当然清除浮动的方式有很多，这里我们利用创建 BFC 来清除浮动。同样，我们在 浮动元素的父元素 即 “one” 里面添加 overflow: hidden 属性，浮动问题便解决了，效果如图： 【 点 我 了解更多清除浮动的方法】 三、IFC（行内格式化上下文）1、定义：&emsp;&emsp;内联格式化上下文（Inline Formatting Contexts，IFC），是内联元素渲染和排列的规则。 2、创建条件：&emsp;&emsp;当元素的 CSS 属性 display 的计算值为 inline, inline-block 或 inline-table 时，称它为行内级元素，IFC会起作用。 3、渲染规则：&emsp;&emsp;(1) 盒子水平 从左至右 的紧密排列（此时横向的 padding、margin、border 都是有效的）；&emsp;&emsp;(2) 垂直方向的对齐，可能是底部对齐，顶部对齐，或者基线对齐（这个是默认的）；&emsp;&emsp;(3) 一个或者多个 内联盒子（内联元素的盒子（span，strong 等）和 匿名内联盒子（只有文本，没有内联元素包含，自动创建的）合称内联盒子）组成一个 行框，行框的宽度由包含块和出现的浮动决定的；&emsp;&emsp;(4) 当一个行框水平不能容纳内联盒子时，它们将会在垂直方向上产生多个行框且 上下紧密相接，不重叠；&emsp;&emsp;(5) 行框中的内联盒子高度小于行框的高度时，内联盒子垂直方向的对齐方式取决于 vertical-align 属性；&emsp;&emsp;(6) 多个内联盒子的宽度小于包含他们的行框时，他们在水平方向的分布取决于 text-align 属性（默认 left）；&emsp;&emsp;(7) 一般来说，行框的左边界紧挨着包含容器的左边界，行框的右边界紧挨着包含容器的右边界（两个边都紧挨着）。然而，浮动盒子可能存在于 包含边框边界 和行框边界之间。 行框（行盒） 4、作用：&emsp;&emsp;水平居中 —— 当一个 “块” 要在环境中水平居中时，设置其为 inline-block 则会在外层产生 IFC，通过设置父容器 text-align:center 则可以使其水平居中。 5、示例：&emsp;&emsp;(1) 行内盒的高度和宽度设置是无效的，所以他们的高度是有 line-height 决定的。当然，行内盒是可以有外边距、边框和内边距的。&emsp;&emsp;(2) 行内盒根据他的 vertical-align 定位。 inline 的 span 元素和替换元素 img，他们默认是按照基线对齐的（黑色的线），修改这两个元素的 vertical-align： 1234&lt;div&gt; &lt;span style="border:1px solid blue;vertical-align: middle;"&gt;我是span&lt;/span&gt; &lt;img style="border:1px solid red;vertical-align: middle;" src="favicon.ico"&gt;&lt;/div&gt; 我们可以得到： 这样两个元素就居中显示了。 四、总结&emsp;&emsp;BFC，IFC，都是控制元素如何进行布局的。BFC 是应用于块级元素（div、p…）上的规则。IFC 是应用于内联元素（span、em、i…）上的规则。&emsp;&emsp;在文档呈现开始的时候，都会自动创建一个 BFC 和 IFC 来对整个页面进行布局。我们要是没有设置属性去创建新的 BFC 的话，整个文档就这一个 BFC 和 IFC，所有的元素都要使用这个规则。&emsp;&emsp;在普通流中，所有的盒子（不管是内联盒子（内联元素等）还是块级盒子（块级元素等））都要属于一个格式化上下文，不是属于块级格式化上下文就是属于内联格式化上下文，但是不能同时属于两者，块级元素布局遵循块级格式化上下文的规则，内联元素布局遵循内联格式化上下文的规则来进行布局。就是这两个规则使得页面的所有元素有序的布局，才呈现出我们所看到的 web页面。 感谢：1、CSS之BFC（块级格式化上下文） —— todayhappy2、IFC（行内格式化上下文） —— ZYT]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的弹性布局]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F02%2Fflex%2F</url>
    <content type="text"><![CDATA[前言Flex（Flexible Box），意为”弹性布局”。“弹性”，顾名思义，就是具有弹簧的特性啦，能够自由的伸缩（有点自适应的意思啦）。 其实 Flex并不是最近才出现的，而是早在十年前它就被提出。2009年，W3C提出了一种新的方案 —— Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。 Flex布局如何使用？任何一个容器都可以指定为 Flex布局 123.box&#123; display: flex;&#125; 行内元素也可以使用Flex布局 123.box&#123; display: inline-flex;&#125; 示例： Flex概念知识采用Flex布局的元素，称为 Flex容器（flex container），简称“容器”。它的所有子元素自动成为容器成员，称为 Flex项目（flex item），简称“项目”。 容器默认存在两根轴： 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 main start，结束位置叫做 main end；交叉轴的开始位置叫做 cross start，结束位置叫做 cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做 main size，占据的交叉轴空间叫做 cross size。 是不是感觉又学到了？概念的东西了解就好了，这个不用记忆，不会跟上学背课文一样，还考试了。 Flex容器属性一、flex-direction：决定项目（item）的排列方向flex-direction 有四个值：1、row（默认值）：主轴为水平方向，起点在左端。2、row-reverse：主轴为水平方向，起点在右端。3、column：主轴为垂直方向，起点在上沿。4、column-reverse：主轴为垂直方向，起点在下沿。 上方那个示例图，我们稍稍变阵一下，主轴设置为垂直方向，就会出现下图布局。 示例： 还可以设置主轴为垂直方向，起点在下沿。 示例： 是不是觉得以后布局就用他（Flex）了？ 二、flex-wrap默认情况下，item 都排在一条线（又称”轴线”）上。flex-wrap 属性定义了，如果一条轴线排不下，item 的换行方式。 示例： flex-wrap 有三个值：1、nowrap（默认）：不换行2、wrap：换行，第一行在上方。3、wrap-reverse：换行，第一行在下方。 示例： 三、flex-flowflex-flow 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为row nowrap。 123.box &#123; flex-flow: &lt;flex-direction&gt; &lt;flex-wrap&gt;;&#125; 示例： 四、justify-content：定义了item在主轴上的对齐方式justify-content 有五个值：1、flex-start（默认值）：左对齐2、flex-end：右对齐3、center： 居中4、space-between：两端对齐，项目之间的间隔都相等。5、space-around：每个item两侧的间隔相等。所以，item之间的间隔比item与边框的间隔大一倍。 示例： 五、align-items：Item在交叉轴上如何对齐1、flex-start：交叉轴的起点对齐。2、flex-end：交叉轴的终点对齐。3、center：交叉轴的中点对齐。 示例： 4、baseline: 项目的第一行文字的基线对齐。 5、stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 六、align-content：多根轴线的对齐方式多根轴线如何出现？宽度超出，换行后就会有多根轴线了。 1、flex-start：与交叉轴的起点对齐。2、flex-end：与交叉轴的终点对齐。3、center：与交叉轴的中点对齐。4、space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。5、space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。6、stretch（默认值）：轴线占满整个交叉轴。 对比一下添加 align-content 和没有 align-content 的区别：示例： 项目(Item)的属性一、orderItem 的排列顺序。数值越小，排列越靠前，默认为0。 示例： 赋予 item，一个排序值，根据这个值进行排序。没有设置值的默认是 0。 二、flex-grow定义 Item的放大比例，默认为 0，即如果存在剩余空间，也不放大。意思就是将 100% 宽 / 高按什么比例分。 举例：如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow属性为 2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。（看上图示例） 三、flex-shrink定义了 Item的缩小比例，默认为 1，即如果空间不足，该 Item将缩小 看上图：3个 item的宽度和：100+200+200=500px，超出了 box（400px）的宽度（超出了100px的宽），这时候 item1 / item2都设置了 flex-shrink 为 0，而 item3 设置了 flex-shrink 为 1，所以，宽度不够时，item3 将收缩，这里 item3 实际的宽度就是 100px。 再看下图： item1 / item3 设置 flex-shrink 为 1，而 item2 的 flex-shrink 为 0，也就是说，此时宽度超出后，将由 item1、item3 来等比缩小宽度，item2 保持原有宽度。 四、flex-basisflex-basis 属性定义了在分配多余空间之前，Item 占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即 Item 的本来大小。 示例： 这个属性可以直接设置宽高代替，如上图注释部分。 五、flexflex属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。 所以最前面的几个示例，都直接写的 flex，其实 flex 就 flex-grow, flex-shrink 和 flex-basis 的简写。 六、align-selfalign-self 属性允许单个 Item有 与其他 Item 不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。 示例： 这样，就会把容器的 align-items，覆盖掉。 总结看完上面内容，是不是发现 Flex 基本上可以搞定大部分的前端布局？确实是这样，它就是这么强大，这也是他广受大家喜爱的一个重要原因，如果不考虑低版本浏览器兼容问题，我相信，float大家应该用的越来越少了。 作者：向建峰_Javan链接：http://www.imooc.com/article/287525来源：慕课网 —— CSS3中Flex弹性布局该如何灵活运用？]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 单位]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F01%2Funit%2F</url>
    <content type="text"><![CDATA[一、写在前面的结论css 的长度单位主要有以下几种：px em rem vh vw vmin vmax % in cm mm pt pc ch ex，大概可以分为 “绝对单位” 、 “相对单位” 和 “百分比单位”。绝对单位： in cm mm相对单位：px pt pc em rem ch ex百分比单位：vh vw vmin vmax % 网页设计常用单位：px 代表物理屏幕上能显示出的最小的一个点；em 和 “%” 都是相对于父级的字体大小；rem 是相对于 HTML根元素的字体大小；vh：相对于视口的高度，1vh 等于 1/100 的视口高度；vw：相对于视口的宽度，1vw 等于 1/100 的视口宽度；vmin：vw 和 vh中较小的那个；vmax：vw 和 vh中较大的那个。 pc pt ch 在网页设计上基本用不到，多用于排版。 二、深度剖析1、pxpx 就是 pixel（像素），相对于显示器屏幕分辨率 而言，是设备或者图片以及我们在网页设计中的常用单位，也是基本单位。通过 px 可以设置固定的布局或者元素大小，缺点是没有弹性（在移动端手机分辨率种类颇多，不可能一个个去适配，所以这时就要考虑 em 和 rem 了）。例如：电脑像素 1024x768 表示的是水平方向 1024 个像素点，垂直方向 768 个像素点。 2、em参考父元素的 font-size，具有继承的特点，即 继承父级元素 的字体大小。如果自身定义了 font-size 按自身来计算（浏览器默认字体是 16px）。使用 em 的好处是在响应式设计中，利用 em 的特性，你可以只通过改变 body 的字体大小一个值就修改了整个页面的各种宽度大小。例如：前面已经说了浏览器默认字体是 16px，所以 1em=16px，则 12px=0.75em，10px=0.625em。另外：要是 Font-size=62.5%，则 em 值变为 16px*62.5%=10px。这样 1em=10px，1.2em=12px 就利于我们进行换算。 3、remrem 是 相对于根元素HTML，所以我们只需要在根元素确定一个参考值，可以设计 HTML为大小为 10px，到时设置 1.2rem 就是 12px，以此类推。优点在于 rem 用于响应式设计通过改变根元素HTML 的字体大小就可以修改整个页面的各种宽度大小。例如：根元素设置字体大小 10px，标题想要 20px，容器就设 2rem；正文想要 14px，容器就设 1.4rem。 4、%(1) 对于 position: static; 普通定位元素就是我们理解的父元素；(2) 对于 position: absolute; 的元素就是相对于已定位的父元素；(3) 对于 position: fixed; 的元素就是相对于可视窗口 ViewPort。 6、vhcss3 新单位，view height的简写，是指 可视窗口的高度。假设高度是 1200px的话，那 10vh 就是 120px。例如：浏览器高度 900px，则1 vh = 900px/100 = 9 px。 5、vwcss3 新单位，view width的简写，是指 可视窗口的宽度。假设宽度是 1200px 的话，那 10vw 就是 120px。例如：浏览器宽度 1200px，则 1 vw = 1200px/100 = 12 px。 7、vm（vmin / vmax）css3 新单位，相对于视口的宽度或高度 中较小 / 较大的那个。其中最小 / 最大的那个被均分为100单位的vm。例如：浏览器高度 900px，宽度 1200px，取最小 / 最大的浏览器高度，1 vm = 900px/100 = 9 px。不过兼容性太差，现在基本上没人用。 三、其他单位in：寸 cm：厘米 mm：毫米 pt：point，约 1/72 寸 pc：pica，约 6pt，1/6 寸 ch：以节点所使用字体中的 “0” 字符为基准，找不到时为 0.5em注：ie10+、chrome 31+、safair 7.1+、opera 26+、ios safari 7.1+、android browser 4.4+ 支持 ex：取当前作用效果的字体的x的高度，在无法确定x高度的情况下以 0.5em 计算注：IE11 及以下均不支持，firefox、chrome、safari、opera、ios safari、android browser 4.4+ 等均需属性加么有前缀 四、拓展：屏幕适配的几种方法1、流式布局：&emsp;&emsp;在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用 px 来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的。其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。&emsp;&emsp;流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。 2、固定宽度：&emsp;&emsp;把页面设置成 320的宽度，超出部分留白，这样做视觉，前端设计都挺开心，UI再也不用被流式布局限制自己的设计灵感了，前端也不用流式布局。&emsp;&emsp;但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小。 3、响应式：&emsp;&emsp;响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从 web page 到 web app 直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个 web app 的版本。 4、通过viewport进行缩放：&emsp;&emsp;以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得它和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。 5、☆ rem等比例适配所有屏幕： 1234567891011121314151617181920212223242526272829(function() &#123; var currClientWidth, fontValue, originWidth; originWidth = 750; // ui设计稿的宽度，一般750或640 __resize(); window.addEventListener('resize', __resize, false); function __resize() &#123; currClientWidth = document.documentElement.clientWidth; if (currClientWidth &gt; 768) &#123; currClientWidth = 768; &#125; if (currClientWidth &lt; 320)&#123; currClientWidth = 320; &#125; fontValue = ((625 * currClientWidth) / originWidth).toFixed(2); document.documentElement.style.fontSize = fontValue + '%'; &#125;&#125;)();// 当前假如当前分辨率是375，设计稿分辨率是750// 750/375=0.5// 比例关系是0.5倍// 再算一下你要换算1rem等于多少px，// 假如我要100， 100/16=6.25// 把这个换算的乘以刚才得出的比例// 0.5*625=312.5// 最后还拼接了一个百分号 = 312.5%// 就是在375分辨率下 1rem = 312.5%// 312.5% * 16px = 50px &emsp;&emsp;通过 js 来判断当前屏幕大小，进而设置 HTML 的 font-size，代码里面 rem 的值就是 UI 设计稿上量的 px 除以 100 就是你代码中要写的 rem 值。 五、兼容性rem 兼容性 vh vw vmin vmax 兼容性 感谢：1、css单位介绍 —— cysear2、CSS3 的视口单位vw、vh实现自适应 —— Least27273、手机端h5页面屏幕适配的几种方法 —— 老蜜4、一次搞懂CSS 字体单位 —— 前端达人]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原型链、prototype、__proto__ 的关系]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F31%2Fprototype%2F</url>
    <content type="text"><![CDATA[☆ 转载：一张图弄清 Javascript 中的原型链、prototype、proto的关系原型链、prototype、__proto__的关系 ☆ 转载：图解原型链三角恋关系用文字来说就是：构造函数的 prototype 属性指向构造函数的原型，构造函数的原型的 constructor 属性指向构造函数，构造函数生成的实例的 __proto__ 属性指向构造函数的原型。 ☆ 转载：非让你搞懂JavaScript中的原型链不可原型链关系]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[概念理解]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F31%2Fconception%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[修改 DOM 元素的方法]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F30%2FupdateDOM%2F</url>
    <content type="text"><![CDATA[修改内容（3种方法） elem.innerHTML: 获取或设置元素开始标签到结束标签之间的原始 HTML 代码片段； elem.textContent: 获取或设置元素开始标签到结束标签之间的纯文本内容（要考虑兼容性问题 IE9+）； 获取表单元素的内容：value 修改属性（2种方法） 核心 DOM：操作一切结构化文档的 API(HTML, XML)： elem.getAttribute(); elem.setAttribute(attr, …); 判断是否包含属性：elem.hasAttribute(); 移除属性：elem.removeAttribute(); HTML DOM：对部分常用DOM的简化版本（常用）： 获取属性值：elem.属性名； 修改属性值：elem.属性名 = ‘值’； 判断是否包含属性：elem.属性名 === ‘’不包含； 移除属性：elem.属性名 = ‘’； 延伸 – 三大状态属性我们常在表单元素中遇到三大状态属性：selected checked disabled； 不过我们无法使用DOM核心来操作这些状态属性，因此我们需要使用HTML DOM方法： 使用HTML DOM可以操作三大状态：(elem.disabled; elem.selected; elem.checked)值是布尔值； 代码的维护性： 后续再更改网站样式的时候，如果样式比较多，首选使用类，然后把类添加到内容里面；这样便于代码的维护性。 添加和删除： 1234// 创建空元素var Jay = document.createElement('Jaunty');Jay.href = 'www.baidu.com';Jay.innerHTML = 'G'; (1) 末尾加： document.body.appendChild(Jay); // 需要添加到body中； (2) 中间插入： parent.insertBefore(newTarget, oldtarget); (3) 替换： parent.replaceChild(child, oldChild); 优化： 尽量少的修改DOM树原因：页面加载过程中，尽量少的修改DOM，每次修改，都会导致DOM树的重排和重绘，这样会对性能造成影响； html – DOM Tree丨render Tree（圣诞树）– 每次修改DOM树，都会导致DOM树的重新计算高度和宽度；丨css – css样式。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[查找 DOM 元素的方法]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F29%2FfindDOM%2F</url>
    <content type="text"><![CDATA[查找方法用HTML查找：优点：范围可大可小，可设置条件； 包括五种方式： 按 id 查找； 按 标签名 查找： var elems = parent.getElementsByTagName(‘’); 按 name属性 查找：要回传给服务器的元素需要name属性，专门找表单中有name属性的表单元素； 按 class属性 查找： var elems = parent.getElementsByClassName(‘class’); 注意：(1) 可在任意父元素上调用；(2) 可返回多个元素的组成的集合；(3) 不要求全部匹配，只要包含即可； 缺点：每次只能按一个条件查找，如果条件复杂的话，就无法一句话获得想要的元素； 这是重点强调的选择器，按选择器查找(常用)(1) 只找一个元素： var elem = parent.querySelector(‘selector”);(2) 找多个元素： var elems = parent.querySelectorAll(‘selector’); 使用选择从使用的难易程度： 当条件复杂时：按选择器查找 – 简单；按HMTL查找 – 繁琐； 返回值：getElementsByTagName() 返回多个元素的 动态集合（不实际存储对象的属性值，每次访问，都要重新查找DOM树）；querySelectorAll() 返回多个元素的 非动态集合（实际存储对象的所有值，即使返回反复访问集合，也不会导致反复查找DOM树）。 单次查找效率：按 HTML查找 – 效率高；按选择器找 – 效率低； &emsp;&emsp;在这里，我们重点介绍下querySelector() 和querySlectorAll() ，这两个方法支持CSS查询。可以通过document和element类型的实例来调用他们，目前完全支持他们的浏览器有：IE8+、Firefox 3.5+、Safari 3.1+、Chrome、Opera 10+ querySelector()： 1234567891011// 取得 body 的元素var body = document.querySelector("body");// 取得 ID 为 "myDiv" 的元素var myDiv = document.querySelector("#myDiv");// 取得类为 "selected" 的第一个元素var selected = document.querySelector(".selected");// 取得类为 "button" 的第一个图像元素var img = document.body.querySelector("immg.button"); querySlectorAll()： &emsp;&emsp;querySlectorAll() 方法接受的参数与 querySelector() 方法一样，都是一个 CSS 选择符，但返回的是所有匹配的元素而不仅仅是一个元素。这个方法返回的是一个 NodeList 的实例。 12345678// 取得某 &lt;div&gt; 中所有的 &lt;em&gt; 元素（类似于 getElementsByTagName("em")）var ems = document.getElementById("myDiv").querySlectorAll("em");// 取得类为 "selected" 的所有元素var selecteds = document.querySelectorAll(".selected");// 取得所有 &lt;p&gt; 元素中的所有 &lt;strong&gt; 元素var strongs = document.querySelectorAll("p strong");]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解区块链]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F27%2FBlockchain%2F</url>
    <content type="text"><![CDATA[前言 区块链技术被认为是继蒸汽机、电力、互联网之后，下一代颠覆性的核心技术。 如果说蒸汽机释放了人们的生产力，电力解决了人们基本的生活需求，互联网彻底改变了信息传递的方式，那么区块链作为构造信任的机器，将可能彻底改变整个人类社会价值传递的方式。以前是靠信誉、靠百年老店、权威机构等，区块链利用技术建立了新的信任方式，这是可以被量化的，从技术的角度实现的，所以说区块链成为了下一个信任的基石。区块链最核心的革命特性是改变千百年来落后的信用机制。 那么如何简单通俗的理解 区块链 呢？ 1. 区块链的举例&emsp;&emsp;区块链的本质是一个分布式的公共账本，任何人都可对这个账本进行核查，但不存在单一的用户可以对它控制。在区块链系统中的参与者共同维持账本的更新：它只能按照严格的规则和共识进行修改。 &emsp;&emsp;举例：如果A借了B 100块钱，这个时候，A在人群中大喊“我是A，我借给了B 100块钱！”，B也在人群中大喊“我是B，A借给了我100块！”此时路人甲乙丙丁都听到了这些消息，因此所有人都在心中默默记下了“A借给了B100块钱”。这个系统中不需要银行，也不需要借贷协议和收据，严格来说，甚至不需要人与人长久的信任关系（比如B突然又改口说“我不欠A钱！”，这个时候人民群众就会站出来说“不对，我的小本本上记录了你某天借了A100块钱！”）。 &emsp;&emsp;这是一个去中心化的系统，整个系统中没有了权威的中心化代理，信息的可信度和准确性便会面临问题。 &emsp;&emsp;那么这时可能你已经发现了，在上述的模型中，所谓的“100块钱”已经不重要了。换句话说，任何东西都可以在这个模型中交换，甚至你可以凭空杜撰一个东西，只要大家承认，你就可以让你杜撰的东西流通。比如：我在人群中高喊一声“我创造了10个查克拉！”，我甚至不需要知道查克拉是什么，也不需要关心世界上是不是真的有查克拉，只要大家都听到，然后在自己的小本本上记下“LaiW3n有10个查克拉”，于是我就真的有100个查克拉了。从此以后，我便可以声称我给了某人1个查克拉，只要路人甲乙丙丁都收到并且承认了这一信息，那我就算完成了这次交易，哪怕世界上没有查克拉。又比如：“比特币”，区块链是比特币的底层技术，真正的区块链和比特币比上述的模型复杂太多，细节也丰富太多。 但是存在以下问题： &emsp;&emsp;假设过了很长一段时间，凭空创造的查克拉已经在这个系统中流通了起来，大家都开始认可了查克拉。但是这个系统中一共就只有10个查克拉，于是有人动了坏心思，他在人群中高呼“我有10个查克拉！”怎么办？大家是直接在本本上记下他有10个查克拉么，这样不是人人都可以伪造查克拉了么？ &emsp;&emsp;为了防止这种现象发生，决定在我创造查克拉的时候给我的查克拉打上标记（更准确地说，我是给我喊的那句“我创造了10个查克拉”打上标记，比如标记为001），这样以后在每一笔交易的时候，我在高喊“我给了某某1个查克拉！”的时候，会附加上额外的一句话：“这1个查克拉的来源是记为001的那条记录，我的这句话标记为002！”。我们再抽象一点，某人喊话的内容的格式就变成了：“这句话编号xxx，上一句话的编号是yyy，我给了某某1个查克拉！”，这样就解决了伪造的问题。其实上述模型就变成一个简化的中本聪第一版 比特币区块链协议。 &emsp;&emsp;看到这里基本已经能够生动形象又不涉及任何细节地解释区块链了。但是任然存在以下疑问： “凭啥？” &emsp;&emsp;“凭啥你喊一句话我就帮你记？我的小本本不要钱么？”。为了激励大家帮我传话和记账，我决定给第一个听到我喊话并且记录在小本本上的人一些奖励：第一个听到我喊话并记录下来的人，你就凭空得到了1个查克拉，这个查克拉是整个系统对你幸苦记账的报酬，而你记录了这句话之后，要马上告诉其它人你已经记录好了，让别人放弃继续记录这句话，并给你自己的记录编号让别人有据可查，然后你再把我的话加上你的记录编号一起喊出来，供下一个人记账。 当这个规则定下以后，这个系统中一定会出现一批人，他们开始竖着耳朵监听周围发出的声音，以抢占第一个记账的权利。比如概念 “比特币挖矿”。毕竟 1比特币=1K-nK美元。比特币挖矿机，就是用于赚取 比特币 的电脑，这类电脑一般有专业的挖矿芯片，多采用烧显卡的方式工作，耗电量较大。用户用个人计算机下载软件然后运行特定算法，与远方服务器通讯后可得到相应比特币，是获取比特币的方式之一。 “听谁的？” &emsp;&emsp;在这个系统中，如果我和另一个人C几乎同时地喊出一句：“为了艾泽拉斯！”。由于听众所处的位置不同，一定会有人先听到我说的那句话，而另外一些人则先听到C的那句话，如果我们规定只能有一个人说出这句话，那到底这句话是谁说的？ &emsp;&emsp;如果不加任何条件，那么上述的情况一定会这样发展：一部分人认为这句话是我说的，在听到这句话之后开始记账，之后他们所做的所有事情都是基于这个事实，并且随着这个信息一次次的传下去，这条信息链会越来越深；而另外一群认为是C先说这句话的人，也会按照这样的趋势发展。这样，原本是一条唯一的信息链，在我们喊出“为了艾泽拉斯”这句话之后，分叉了？ &emsp;&emsp;这会导致怎样的情况呢？按照我们的设想，应该每个人的小本本上记录的东西都是一样的，都是一条可以把所有信息串联起来的链条。但是在这一刻，他们小本本上记录的东西不一样了？以后还怎么确定交易和信息的真实性？ &emsp;&emsp;为了解决这个问题，又追加了新的规则，增加记录编码的难度，即比特币挖矿难度，保证记录的唯一性(保证节点之间的同步)。”不知道用唯一性是否准确？ 2. 区块链的应用&emsp;&emsp;区块链几乎可以应用到任何领域，在金融、物流、公共服务等领域都有大量案例。中国央行早在2016年就表态支持区块链。2016年11月，中国政府正式把区块链列入十三五规划纲要中。 &emsp;&emsp;比如贵州超过3000亿的脱贫脱贫攻坚基金，要通过300多个单位的运作，惠及493万贫困人口，如何确保扶贫资金募款，投资，使用管理等环节正确运作呢？区块链具有多方共识，交易溯源，不可篡改等技术特点，使它在确保信息可信、安全、可追溯等方面具有传统技术不可比拟的优势。以城市为单位，第一个发布区块链白皮书的就是贵阳市。 &emsp;&emsp;如果仔细观察，我们会发现马云最近两年在公共场所提及最多的概念便是信用体系。互联网在未来不会是创业主体，而是像空气一样成为我们生活的一部分。 &emsp;&emsp;蚂蚁金融便是马云最为看重的业务体系，在马云的构想下，未来人们的生活将无现金，并可以用信用兑换商品。这一实现，十分需要一种革命性的信用机制。这一机制在2016年的支付宝App里已经悄然 上线 – 蚂蚁区块链。 3. 从技术角度简单理解区块链(1) 区块链的本质 &emsp;&emsp;区块链是一种特殊的分布式数据库。 &emsp;&emsp;首先，区块链的主要作用是储存信息。任何需要保存的信息，都可以写入区块链，也可以从里面读取，所以它是数据库。 &emsp;&emsp;其次，任何人都可以架设服务器，加入区块链网络，成为一个节点。区块链的世界里面，没有中心节点(去中心化)，每个节点都是平等的，都保存着整个数据库。你可以向任何一个节点，写入/读取数据，因为所有节点最后都会同步，保证区块链一致。 (2) 区块链的最大特点 &emsp;&emsp;区块链没有管理员，它是彻底无中心的。其他的数据库都有管理员，但是区块链没有。如果有人想对区块链添加审核，也实现不了，因为它的设计目标就是防止出现居于中心地位的管理当局。 &emsp;&emsp;没有了管理员，人人都可以往里面写入数据，怎么才能保证数据是可信的呢，这就是区块链奇妙的地方。 (3) 区块 &emsp;&emsp;区块链由一个个相连的区块（block）组成。区块很像数据库的记录，每次写入数据，就是创建一个区块。 每个区块包含两个部分： 区块头（Head）：记录当前区块的元信息 区块体（Body）：实际数据 区块头包含了当前区块的多项元信息 生成时间 实际数据（即区块体）的 Hash 上一个区块的 Hash …… &emsp;&emsp;Hash 就是计算机可以对任意内容，计算出一个长度相同的特征值。区块链的 Hash 长度是256位，不管原始内容是什么，最后都会计算出一个256位的二进制数字。而且可以保证，只要原始内容不同，对应的 Hash 一定是不同的。 &emsp;&emsp;举例来说，字符串123的 Hash 是a8fdc205a9f19cc1c7507a60c4f01b13d11d7fd0（十六进制），转成二进制就是256位，而且只有123能得到这个 Hash。 (4) Hash 的不可修改性 &emsp;&emsp;区块与 Hash 是一一对应的，每个区块的 Hash 都是针对”区块头”（Head）计算的。 Hash = SHA256(区块头) &emsp;&emsp;区块头包含很多内容(包括上一个区块的Hash、当前区块体的Hash等，见上图)。这意味着，如果当前区块的内容变了，或者上一个区块的 Hash 变了，一定会引起当前区块的 Hash 改变。 &emsp;&emsp;如果有人修改了一个区块，该区块的 Hash 就变了。为了让后面的区块还能连到它，必须同时修改后面所有的区块，否则被改掉的区块就脱离区块链了。Hash 的计算很耗时，同时修改多个区块几乎不可能发生，除非有人掌握了全网51%以上的计算能力。 &emsp;&emsp;正是通过这种联动机制，区块链保证了自身的可靠性，数据一旦写入，就无法被篡改。这就像历史一样，发生了就是发生了，从此再无法改变。 (5) 采矿 &emsp;&emsp;由于必须保证节点之间的同步，所以新区块的添加速度不能太快。试想一下，你刚刚同步了一个区块，准备基于它生成下一个区块，但这时别的节点又有新区块生成，你不得不放弃做了一半的计算，再次去同步。因为每个区块的后面，只能跟着一个区块，你永远只能在最新区块的后面，生成下一个区块。所以，你别无选择，一听到信号，就必须立刻同步。 &emsp;&emsp;所以，区块链的发明者故意让添加新区块，变得很困难。他的设计是，平均每10分钟，全网才能生成一个新区块，一小时也就六个。 &emsp;&emsp;这种产出速度不是通过命令达成的，而是故意设置了海量的计算。也就是说，只有通过极其大量的计算，才能得到当前区块的有效 Hash，从而把新区块添加到区块链。由于计算量太大，所以快不起来。 &emsp;&emsp;这个过程就叫做采矿（mining），因为计算有效 Hash 的难度，好比在全世界的沙子里面，找到一粒符合条件的沙子。计算 Hash 的机器就叫做矿机，操作矿机的人就叫做矿工。 (6) 难度系数 &emsp;&emsp;你可能会有一个疑问，人们都说采矿很难，可是采矿不就是用计算机算出一个 Hash 吗，这正是计算机的强项啊，怎么会变得很难，迟迟算不出来呢？(比特币挖矿机，就是用于赚取比特币的电脑，一般有专业的挖矿芯片，多采用烧显卡的方式工作) &emsp;&emsp;原来不是任意一个 Hash 都可以，只有满足条件的 Hash 才会被区块链接受。这个条件特别苛刻，使得绝大部分 Hash 都不满足要求，必须重算。 &emsp;&emsp;区块头包含一个难度系数（difficulty）这个值决定了计算 Hash 的难度。举例来说，第100000个区块的难度系数是 14484.16236122。 &emsp;&emsp;区块链协议规定，使用一个常量除以难度系数，可以得到目标值（target）。显然，难度系数越大，目标值就越小。 &emsp;&emsp;Hash 的有效性跟目标值密切相关，只有小于目标值的 Hash 才是有效的，否则 Hash 无效，必须重算。由于目标值非常小，Hash 小于该值的机会极其渺茫，可能计算10亿次，才算中一次。这就是采矿如此之慢的根本原因。 &emsp;&emsp;区块头里面还有一个 Nonce 值，记录了 Hash 重算的次数。第 100000 个区块的 Nonce 值是 274148111，即计算了 2.74 亿次，才得到了一个有效的 Hash，该区块才能加入区块链。 (7) 难度系数的动态调节 &emsp;&emsp;就算采矿很难，但也没法保证，正好十分钟产出一个区块，有时一分钟就算出来了，有时几个小时可能也没结果。总体来看，随着硬件设备的提升，以及矿机的数量增长，计算速度一定会越来越快。 &emsp;&emsp;为了将产出速率恒定在十分钟，区块链发明者还设计了难度系数的动态调节机制。他规定，难度系数每两周（2016个区块）调整一次。如果这两周里面，区块的平均生成速度是9分钟，就意味着比法定速度快了10%，因此难度系数就要调高10%；如果平均生成速度是11分钟，就意味着比法定速度慢了10%，因此难度系数就要调低10%。 &emsp;&emsp;难度系数越调越高（目标值越来越小），导致了采矿越来越难。 (8)区块链的分叉 &emsp;&emsp;即使区块链是可靠的，现在还有一个问题没有解决：如果两个人同时向区块链写入数据，也就是说，同时有两个区块加入，因为它们都连着前一个区块，就形成了分叉。这时应该采纳哪一个区块呢？ &emsp;&emsp;现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。 &emsp;&emsp;现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。 &emsp;&emsp;为了保证数据的可靠性，区块链也有自己的代价。一是效率，数据写入区块链，最少要等待十分钟，所有节点都同步数，需要更多的时间；二是能耗，区块的生成需要矿工进行无数无意义的计算，这是非常耗费能源的。 感谢：公众号 Linux爱好者区块链是什么，如何简单易懂地介绍区块链？区块链，将如何重新定义世界 阅读原文]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VR 产业]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F26%2Fvrfirst%2F</url>
    <content type="text"><![CDATA[前言自2018年10月份“世界VR产业大会”在江西南昌召开后，我就越发觉得江西的发展不再沉默。 这可能是个机遇，是南昌的发展机遇，是江西省的发展机遇，更是落实到每个江西人的发展机遇，所以在2018年底考完研后更加对于创新创业有了更大胆的想法与动力。VR是未来科技的发展趋势，特别是随着人工智能、大数据的兴起，中国5G时代的领先与发展，使得虚拟现实，人机交互的升级更加突显未来科技既视感。目前的论坛已提到新零售、新制造，在影视内容、教育培训、文化旅游、新闻出版游戏（电竞）、动漫、投资、安防等行业都有进行研讨，而我关注的点在于体育产业与VR产业的结合，现在看来是还未涉及到的，不知道将来体育产业与VR产业会发生如何的碰撞。 然而我自己现在已在萌芽一个小想法 —— 拟态训练（自定义）。这是我个人目前对于体育产业与VR产业浅显的认知中能够设想到的一个结合物，该产物的目的有二：其一对于普通民众而言可以将科学的运动方式推广授之大众，其二则是对于专业运动员而言可以单独进行高水准的训练，是一种生理与心理的结合的高科技训练方式。这个难度可想而知是非常之大的，各方面的专业性得非常非常非常非常之强，可我深信这是未来科技的发展趋势，产品的拓展还是可以往其他行业延伸的，是具有弹性的。不过目前这些都是我的浅显认知得出的想法，也许以后在研究生阶段或工作思考的学习实践过程中会有在思想上的其他改变或者是更深的理解都说不定，不过我会在此行业一直奋力前行！ 下面我们来看看这两届 世界VR产业大会 的相关信息。 2018世界VR产业大会10月19日-21日，由工业和信息化部、江西省人民政府联合主办的2018世界VR产业大会（World Conference on VR Industry）在江西南昌成功举行。 2018世界VR产业大会 本届大会的主题是“VR让世界更精彩”，以互联网为核心的新一轮科技和产业革命蓄势待发, 人工智能、虚拟现实等新技术日新月异, 虚拟经济与实体经济的结合, 将给人们的生产方式和生活方式带来革命性变化我国已经把虚拟现实（VR）定位为超前发展的战略性新兴产业。 诺贝尔物理学奖得主乔治·斯穆特、阿里巴巴集团董事局主席马云以及来自国内外VR领域的领军人物、专家学者、企业高管、行业组织负责人以及国际组织代表共计2000多名嘉宾参会。据相关媒体报道，展会邀请到了国内外一些知名的VR/AR企业，例如百度、联想、华为、微软等等，其中，境外参展企业占总参展企业的18%左右。此外，VR/AR产品和应用展览会也将于大会期间对市民免费开放，展会现场将有158家企业展示其最新、最前沿的技术和产品。 2018世界VR产业大会现场 马云的精彩演讲现场实录各位朋友：大家上午好！ 在江西召开世界VR大会，我一开始还是很意外。我没有想到会在江西开世界非常前沿技术的大会，也没有想到，短短几年，江西在VR产业发展取得如此大的成绩，感慨江西在这个行业中不是依靠原有的资源，而是相信VR创造未来的资源。他的远见、决心、持久力让我感动。所以，江西今天已经在VR产业有一定的规模和影响力，我也相信今天的大会对世界VR产业与中国VR产业来讲，是一个里程碑式的大会。 但是，仔细想想也不意外，90年前，井冈山时期，江西由于这么一个地方，一个在大多数人都不相信的时候，选择相信未来。在大多数人怀疑的时候，拥抱了新的理念、新的思想，江西就是这样一个地方，江西拥抱新知识。我也相信今天的大会，标志着南昌正式向世界VR大会打响第一枪。 马云现场演讲 习总书记说井冈山精神就是坚定执着追理想，实事求是闯新路，艰苦奋斗攻难关，依靠群众求胜利，我觉得这四条在技术创新当中，同样有用，而且事实上如果分开了这四条，技术创新根本不可能。作为阿里巴巴的创始人，很多人只看到今天阿里巴巴取得的成绩，但没看到我们背后巨大的失败、巨大的挫折。我相信任何一个地区，任何一个行业要想取得成功，必须面向世界、面向全球，只有有理想、有远见、有人才、有执行力，才有可能实现自己的抱负。 过去几个月，我和刘书记见了三次，感叹江西的进取思想、对未来的担当。所以我们决定在很短的时间内，认真地研究、考察，把江西作为阿里巴巴创新与科技、产品和服务最重要的发展事业中心。 有人问我为什么是江西，我说为什么不是江西？宋朝、明朝以来，江西盛产文人。昨天晚上还听说，明朝的内阁，朝堂上有一半的官员是江西人。江西盛产读书人，名人辈出。江西景德镇是文化创意产业的鼻祖，没有创意创新，谁也想象不了今天江西能够创造出让全世界都来买的瓷器，China，瓷器在江西。除此以外，更重要的是江西有远见、有行动力。短短几个月，我们切身感受到江西的执行力，江西对老百姓的担当，对未来的担当。在几个月以内，江西已经形成了有移动政务、移动办事，刷手机坐公交，城市大脑迅速接轨，让我们对江西充满信心。 有人说江西没有VR人才，谈什么VR，我自己也这么觉得，世界上本来就没有什么VR人才，我们的世界并没有专家。所有的专家都是昨天的专家，未来的专家，今天的江西是在未来打造VR的专家。所以当年我们在贵州的时候说，贵州为什么可以发展大数据，贵州没有大数据人才。我说北京、上海、纽约、东京也没有大数据人才，这如果都有了，那还需要我们创业者干什么？一切条件都完美，就不需要创业者。如果钱能解决问题，银行可以做一切事情。这个世界因为有想象，因为有理想，因为你对未来有担当，你对未来敢于做执行力，敢于行动才有真正的未来。 所以，我相信每一次技术革命，大约都是50年，前20年是技术的变化，后30年才是应用的变革。未来世界上数据是重要的生产资料，计算是生产力，而互联网是生产关系，技术将给社会带来翻天覆地的变化，深入到社会的方方面面。我相信这些话过去十年无数人听过了很多遍，但是很少有人真正的去理解它，改变自己。所以技术将会改革传播的零售业、制造业，改变教育、医疗，改变我们认识和思考世界的方式。 我想，我们讲人工智能可能会取代我们很多工作，这不是可能，这是一定。所以我们讲改变教育，改变自己的思考方式，如果我们依然按照昨天的教育方式，按照昨天的思考方式，我想我们的孩子肯定做不了比科技更加重要的事情，不被机器所淘汰。 所以，因为技术的发展，人类如果能够到达过去很多到达不了的地方，看见过去看不到的东西，听到过去听不到的东西，而VR技术让人类又往前了，进入到不可能当中去，这是一项了不起的技术。刚才苗部长讲了VR技术对整个生产、制造、社会、音乐、人的生活会产生巨大的影响，我们是坚信不移。VR技术，物联网等，这都是技术革命的重要组成部分。 VR这个行业，20年以前，有些地方进行了深入的研究。我自己认为，我们对VR非常关注，在全世界都看到有这样和那样的公司，零星散落在世界各地，但是把一个地方打造成VR的创新创业中心，把VR的产业中心，甚至作为一个平台来打造，江西南昌是第一次。VR必须要到大数据、云计算、人工智能的创新以后，VR才属于真正未来的技术。所以20年以前是纯VR，现在的VR必须跟大数据、人工智能结合起来。不跟大数据、互联网、人工智能技术相结合，VR产品可能还是一个新奇、有趣的应用。就像摄像头，如果不跟互联网结合，那只是一个罚款工具。但是连上网以后，接上了计算能力，就可以用来解决交通拥堵的问题，只有和互联网、大数据、云计算结合，VR才能从一个玩具真正变成解决核心技术的内容。特别是改变教育、改变医疗，我们充满了期待。 虚拟现实千万不能真的变成一个虚的产业，VR行业要和实体经济紧密结合，也只有紧密结合实体经济，VR才有真正的未来。虚的技术一定要做实，而实的产业必须要学会虚。数据时代，无论是VR技术，还是AR，区块链等技术，这些技术再先进、再流行，风投资本再喜欢，但是如果不能和制造业、服务业相结合，不能推进转型升级，不能推进社会向更加绿色，更加可持续，更加普惠的发展，不能让人们的生活更加健康、更加快乐，这样的技术就变得毫无意义，也不可能有广阔的前景。 最近，风险投资的热潮正在退潮，我听说很多创业的公司估值少了70%，我觉得这剩下的30%才是真正符合自己的价值。阿里巴巴创业的时候，能融到500万美元，绝对已经是巨资了，今天融到1亿美金都觉得自己不好意思跟人家说。所以，今天风险投资热度退却，我觉得对整个产业应该是好事情。现在是见真金、真本事、真技术的时候。今天江西打造一个如此有远见、有担当、有未来、下决心真干的VR产业中心，我觉得对每一个有志于此类的企业家、创业者来讲都是利好消息。离开互联网的实体经济没有未来，我经常听人说实体制造业不行了，其实不是制造业不行，是落后的制造业不行。不是别人的制造业不行，是你的制造业不行。未来制造业不仅仅是制造业，而是和互联网完美结合。制造背后的服务和体验，是创造思想，是体验，是感受以及服务能力，这也是未来VR产业的核心竞争力，看不到背后的创造思想，创新的体验，精致的感受。 阿里巴巴投资了非常领先的一项VR技术，就在两个月以前，这个公司花了八年时间，才发布了他的第一个VR眼镜，而且这个产品离当时投资者的预期还是相当大。但是这很正常，很多时候看不清楚才是真正的未来，阿里巴巴今天大家都相信电子商务，但是19年以前的电子商务，跟今天完全不是这么一回事。10年以后的电子商务，跟今天也不是一回事，过去的19年，我们至少有过190次以上的电子商务的变革，1900次以上的失败，19000次以上的失业才有今天。所以我们一定要相信，我们在这一次，从VR的投资里深刻明白，技术的创新充满曲折和艰难。如果轻而易举就能成功，那一定不是什么了不起的技术。投入的时候，就要有挫折的准备，就要有失败的思想准备，技术创新就是要做好失败的准备来追求成功。 任何新生事物，就像新生儿一样，刚出生的时候其实都不好看，我自己觉得，有人讲孩子生下来像爹妈，我看起来都像老鼠，都很难看，但是养着养着，把心血花下去就很好看。所以这些新生事物，让我们对未来充满着想象，充满着希望，它因为有无限的可能性。所以我们希望给它时间，给它相信，给它以坚持，在人人都相信一个产业的时候，其实你已经没有机会了。在没有人相信的时候，你的坚持才是真正的尊贵。很多人是因为看见而相信，只有很少数的人是因为相信而看见。谈创新、谈技术其实很容易，真正做创新、促创新其实很难，创新一定要预防叶公好龙，特别是现在我们人人在做创新，创新一定会有挑战传统的思想、传统的产业、传统的行业、传统很多的既得利益群体，我们每个人要敢于为创新说话，为创新担当。也只有这样，创新才有机会升级。创新不仅仅是科学家、技术人员的挑战，也不仅仅是是技术的挑战，同时是政府运营的巨大挑战。我们都知道要把一个行业打掉是非常容易的事情，但是要把行业做完善、做持久非常之艰难。 江西拥抱VR产业，实际上是拥抱整个技术。我个人觉得，江西最宝贵的还不是VR产业本身，而是江西背后的变革，江西面向未来的思想。我一直相信换道超车，只有在另外一个道上，只有拼未来，不是拼我们昨天的资源，才能真正超越。到了江西以后，我明显感觉到人们的生活最近在发生很大的变化，行动在发生变化。我相信有思想引领，江西的未来一定发生深刻的变化，并且也一直相信互联网时代基础设施越薄弱的地方越容易成功，这跟当年革命一样，革命最薄弱的地方，往往有机会发展起来，我相信任何人都在讲我有什么的时候，他其实缺乏了他没有的东西，那就是创新的能力，对未来的担当。江西今天真正靠的不是传统的资源，靠的是创新创意，靠的是思想，靠的是对未来的担当，对人民的担当，对一切所有我们不敢相信，但是敢于去尝试这样的担当。所以谢谢大家！我相信今天的会议，对中国乃至世界VR所产生的重要和深远的影响，我为今天能够参加这样的大会深感骄傲。相信20年以后的江西，我们会为今天而兴奋，而骄傲，谢谢大家！ 诺贝尔物理学奖得主、美国科学院院士乔治·斯穆特：VR将改变多个行业乔治·斯穆特 10月19日，由工业和信息化部、江西省人民政府联合主办，中国电子信息产业发展 研究院、江西省工业和信息化委员会、南昌市人民政府、虚拟现实产业联盟承办的 2018世界VR产业大会在江西南昌隆重开幕。为期三天的本次大会以“VR让世界更精彩”为主题，汇聚了来自20多个国家和地区的1000多家企业，展示了全球虚拟现实 领域最新研究成果。诺贝尔物理学奖得主、美国科学院院士乔治·斯穆特在19日上午的主旨演讲中表示：“VR将改变三个行业——地产、游戏和旅游。可能还有两个会受到VR影响的，就是学习和教育，系列的研究表明基于VR的学习非常有效而且非常高效。当普通用户都能够负担得起，VR的内容渲染和深层应用更真实，VR将真正变成主流。” VR将改变多个行业 乔治·斯穆特说，VR在深远地改变我们的世界，VR、AR代表的是人、知识、体验以及内容之间的交互，可能有些界面过去和人并没有实现交互，现在通过一系列的系统来实现这样的交互。而且VR会影响很多行业，也会不断造就很多行业。 整个虚拟现实的崛起，即将彻底改变以下三个行业：第一是地产行业，这甚至是我没有想到的，过去很难想象，基于VR设计能够改变地产；第二是游戏；第三是旅游出行行业。还有两个会受到VR影响，就是学习和教育，在一系列的研究中我们发现基于VR的学习是非常有效、非常高效的，而且会影响很多的消费者。现在VR内容还处于“暖身”阶段，当普通用户都能够负担得起，在未来内容的渲染和深层应用体验更真实时，VR会真正变成主流。此外，VR也会影响消费领域，现在在线上下单，通过VR\AR能够非常真实、逼真地感受到要买的那款产品。在这些领域，VR都将大行其道。 乔治·斯穆特说，在这些应用之外，我有自己不同的想法。首先在制造业，VR\AR会渗透影响，未来自动化程度越来越高，工业4.0时代能够让产品更高效地做多批次、小型化产品，并且能够在客户和设计师之间建立起联系，用户告诉设计师喜欢什么样的产品。 在颠覆性技术中发挥VR作用 麦肯锡认为在未来经济中起到颠覆性作用的科技中，排名第一的是移动互联网，移动互联网越来越普及，随着5G时代的到来还将发生新的变化。移动互联网有巨大的潜力可以进一步释放，移动互联网结合VR技术，能够更好地管理个人健康，例如通过远程健康监测可以降低10%~20%的慢性疾病的治疗费用。 排名第二的是知识工作自动化，到2025年会有5.2到6.7万亿美元的商业潜力。在制造业实现自动化的同时，一些智力工作也开始自动化，如语音识别技术。知识工作自动化影响的人群将达到1.1~1.4亿人，在这类应用中，如谷歌开始研发的无人汽车、自动驾驶技术，亚马逊、阿里巴巴推出的无人超市。在这类应用中，AR都有用武之地，例如消费者在超市中可以使用AR技术进行购物；也可以利用AR提高安全性，用于能源监测。在是教育行业，虚拟现实已经切切实实在其中发挥作用。学生可以通过AR与虚拟的人工智能的教师进行对话，可以针对一个学生提供一对一的辅导。 排名第三的领域是物联网，现在越来越多的设备使用传感器。例如很多门铃是视频的，整个视频系统可以和敲门的人进行简单对话交流。这也可以通过AR系统来对接，以多媒体的方式进行控制，从而使信息可以更好地交换。 第四名是云计算。云计算可以提供更强大的计算能力，采用AR可以显示不同类型的信息，例如一个屏幕显示视频，另一屏幕显示相关的信息，这些不同信息汇集，其实可以应用在移动办公中。 AR和VR技术已经成为引人入胜的技术，我们看到，它可以用到很多领域，让我们感到非常的振奋。 信息来源：2018世界VR产业大会网 2019世界VR产业大会2019世界VR产业大会 大会背景习近平总书记在致2018世界VR产业大会的贺信中指出，新一轮科技革命和产业变革正在蓬勃发展，虚拟现实技术逐步走向成熟，拓展了人类感知能力，改变了产品形态和服务模式。中国正致力于实现高质量发展，推动新技术、新产品、新业态、新模式在各领域广泛应用。中国愿加强虚拟现实等领域国际交流合作，共享发展机遇，共享创新成果，努力开创人类社会更加智慧、更加美好的未来。 近年来，我国虚拟现实产业逐步走向成熟，消费市场和行业应用市场不断打开，产业链条更加完善。5G商用将大大提升虚拟现实体验，为虚拟现实技术在更广泛领域的应用开辟新天地。我国在硬件制造、内容应用开发以及业务体验推广等产业链各环节快速发展，正在成为全球虚拟现实产业创新创业活力最强、市场接受度最高、发展潜力最大的地区之一。 大会宗旨聚焦前沿技术，探讨发展之道，展示最新成果，推动应用普及，搭建交流平台，汇聚要素资源，让大会成为全世界了解中国虚拟现实产业发展的窗口和引领全球虚拟现实产业发展的风向标，吸引优秀企业和项目在江西落地，培育经济增长新动能。 大会目的贯彻落实习近平总书记贺信及视察江西时的重要讲话精神，把握5G商用元年的重大历史机遇，紧密结合当前5G赋能VR产业发展的特点，探讨5G新时代如何赋予VR更稳定的技术支撑、更广泛的应用场景、更丰富的体验效果。 大会主题VR让世界更精彩 —— VR+5G 开启感知新时代。 VR+5G 重大新闻 2023年南昌要成世界级VR中心：原文传送门 项目落地开花 南昌VR点燃发展动力引擎：原文传送门 了解更多：2019世界VR产业大会网 最后我自己是已经在官网报名了大会观众参与了四个论坛，还在审核阶段，希望能够通过这一次学习成长的机会让我慢慢融入到该行业领域中，让自己未来能够走得更长远，一望无垠才有无限可能！期待2019年的世界VR产业大会，也荣幸自己即将成为与会的一份子，更期盼自己将来不仅仅当作与会观众。。。 参与论坛 电子票 我相信：未来江西的发展是 VR + 5G + AI + 大数据 的结合引领着，愿江西发展不再沉默！]]></content>
      <categories>
        <category>VR</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git 协作开发]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F25%2Fcooperation%2F</url>
    <content type="text"><![CDATA[fork项目，参与开发，fork后会在你的主页建立一个同名仓库； git clone 你fork的仓库地址 到本地； 修改本地文件 commit，push； pr： 自己开始也是这样的，但是后面如果作者更新了，你这边还是原来的代码的话就跟不上进度，所以必须要同步其他人的进度； git remote add upstream： 你fork项目的原始地址（作用是保存项目地址通过 upstream 来代替，不需要每次都输入这个地址）； git pull upstream： 分支名（拉取项目的最新代码到本地，保持同步）； 编辑你自己的代码， commit， push； 如果你需要合并自己的commit记录，可以使用 git rebase -i head~3（最近3次的提交记录）； 按i进入插入模式然后可以根据提示编写commit，然后esc退出模式再按 :wq 退出保存； git push –force： 提交代码； 可以安安心心的 pr了，然后等着 merge 或者 rebase。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webpack]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F24%2Fwebpack%2F</url>
    <content type="text"><![CDATA[常用的webpack插件html-webpack-plugin 可以指定 template 模板文件，将会在 output 目录下，生成 html 文件，并引入打包后的 js.安装依赖:npm install –save-dev html-webpack-plugin 支持加载css文件通过使用不同的 style-loader 和 css-loader, 可以将 css 文件转换成 js 文件类型。安装依赖:npm install –save-dev style-loader css-loader 支持加载图片file-loader: 解决 css 等文件中的引入图片路径问题url-loader: 当图片小于 limit 的时候会把图片 Base64编码，大于 limit 参数的时候还是使用 file-loader 进行拷贝如果希望图片存放在单独的目录下，那么需要指定outputPath安装依赖:npm install –save-dev url-loader file-loader 支持编译less和sass有些前端同事可能习惯于使用 less 或者是 sass 编写 css，那么也需要在 webpack 中进行配置。安装对应的依赖:npm install –save-dev less less-loadernpm install –save-dev node-sass sass-loader 支持转义 ES6/ES7/JSXES6/ES7/JSX 转义需要 Babel 的依赖，支持装饰器。安装对应的依赖:npm install –save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react @babel/plugin-proposal-decorators @babel/plugin-proposal-object-rest-spread .压缩JS文件安装依赖:npm install –save-dev uglifyjs-webpack-pluginnpm install –save-dev optimize-css-assets-webpack-plugin 分离CSS(如果CSS文件较大的话)因为 css 的下载和 js 可以并行，当一个 HTML 文件很大的时候，可以把 css 单独提取出来加载npm install –save-dev mini-css-extract-plugin .压缩CSS文件安装依赖:npm install –save-dev optimize-css-assets-webpack-plugin 打包前先清空输出目录npm install –save-dev clean-webpack-plugin 配置 webpack-dev-serverwebpack-dev-server 提供了一个简单的 Web服务器和实时热更新的能力安装依赖:npm install –save-dev webpack-dev-server 详情查看：webpack 中文网]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 数据类型]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F23%2FjsType%2F</url>
    <content type="text"><![CDATA[JavaScript 是一种弱类型语言，下面是两是种常见的分类方式。 一、第一种分类方式（常用分法）分为9种类型：分别是 Undefined，Boolean，Object，Number，Null，String，Reference，List，Completion，其中Reference，List，Completion 三种类型仅共语言解析运行时使用，无法从程序中直接访问。 1、Undefined 类型： 是全局对象 window 的一个特殊属性，顾名思义就是未定义的意思；Undefined 类型只有一个值 Undefined，表示一个变量定义了但未赋值。 如：var a; alert(a); // 弹出undefined； 下面是几种常见的会出现undefined的情况： （1）获取一个对象的属性（原本属性和 protoType 扩展的属性）不存在时，返回 undefined； （2）当一个函数 function(){} 没有明确的返回值时，显示 undefined； 如：function way(){} alert(way()); // 弹出 undefined （3）JavaScript 中的参数有多个形参的话，若果调用参数的话，参数数量小于形参数量，那么其他的参数值就为 undefined。 2、Null类型： null 是 JavaScript 保留的关键字，null 类型也只有一个 null 值，表示为空或者不存在的对象引用： （1）JavaScript 中的if() 判断语句无论是 null 类型还是 undefined 类型他们的返回值都是 false，也就是说一个变量若是 null 或者 undefined 那么他就为 false。 12345678910if (null) &#123; alert("sdf");//进入不了&#125;if (undefined) &#123; alert("sdfsdf");//进入不了&#125;var a=12;if (a) &#123; alert("sdf"); //能进入&#125; 3、Number类型： 表示数值，包含了所有的数值类型，不像高级语言那么细分成 int，double，deciable，他的取值范围是：1.7976931348623157E+308 到 -1.7976931348623157E+308之间，就是1.797693134862315710 的308次方 到 -1.797693134862315710 的308次方之间；Number 类型有一个特殊的值 NaN，他是 Number 类型中一个非数值的值，就像无穷大，所以NaN不等于 NaN。 4、Object类型： 用来表示一个对象，像String， Array，new 一个对象等，当这个对象为空时，就是 null了；所以 alert(typeof(null)) 的弹出值为object。 5、String类型： string类型是 JavaScript 中的一个比较重要的类型，它用来表示一个字符串，我们在写脚本的时候需要处理很多的字符串，所以 JavaScript 库中也提供了很多字符串处理方法。 6、Boolean类型： 布尔类型大家都很熟悉，这里说几个他的特殊用法： （1）boolea类型和Number类型相结合时，true转化为1，false转化为0； 1234var a = true; alert(a+1);//弹出2var a = true; alert(a);//弹出true 上述六种类型也可以相互转化，基本上是数值和字符串和布尔值之间的转化： （1）Number类型转化为string类型，用tostring()； （2）String类型转化为Number，用Number()； 1234var str = "123";var num = 1;alert(str + num); // 弹出1231alert(Number(str) + num); // 弹出124 也可以使用全局函数 parseInt() 和 parseFloat() 来进行转换；parseInt() 和 parseFloat() 的区别是 Number() 转换是整个值，而 parseInt() 和 parseFloat() 则可以只转换开头的数字部分。 12345alert(Number("123asdf")); // 弹出NaNalert(Number("1.2.3")); // 弹出NaNalert(parseInt("123sdf")); // 弹出123alert(parseFloat("sdfsdf")); // 弹出NaNalert(parseInt("sdf345")); // 弹出NaN Number() 在转化的过程中布尔类型的 true 和 false 分别被转化为1和0其他的不能转化为数值的全部转化NaN。 123alert(Number(true));//弹出1alert(Number(false));//弹出0alert(Number(null));//弹出0 其他的若是不能转化为数值类型的，基本上全转化为 NaN。 扩展小知识： （1）判断一个变量是否是数值，用IsNan() 方法； （2）在 JavaScript 中 “==” 和 “===” 的区别: “==” 只要求值相等; “===” 要求值和类型都相等； （3）instanceof 只是用于判断 object 是否是 class类的一个实例，是的话返回 true,否则返回 false；alert(“a instanceof String”); 二、第二种分类方法（typeof()关键字）：分为：undefined，number，string，boolean，object，function 类型 例子 运行结果 Undefined var a1; alert(typeof(a1))；function way{} alert(way()); alert(typeof(way())) undefined number Var num1=12; alert(typeof(num1)); number string Var num2=”12”; alert(typeof(num2)); string boolean Var flag=true; alert(typeof(flag)); boolean object Var str=new string(); alert(typeof(str));Var a=null; alert(typeof(a)); object function alert(typeof(String)); function]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心得篇]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F22%2FThinking%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[懒加载]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F21%2Flazy-load%2F</url>
    <content type="text"><![CDATA[html 代码段： 123456789101112131415&lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt;&lt;/ul&gt;&lt;img class="imgLazyLoad" data-src="https://avatars0.githubusercontent.com/u/40397349?s=460&amp;v=4" /&gt;&lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt;&lt;/ul&gt; data-src属性上面保存着我们后面需要动态加载的图片地址。 JavaScript 代码段： 12345678910111213141516171819202122232425262728(function()&#123;//立即执行函数 let imgList = [],delay,time = 250,offset = 0; function _delay()&#123;//函数防抖 clearTimeout(delay); delay = setTimeout(() =&gt; &#123; _loadImg(); &#125;,time) &#125;; function _loadImg()&#123;//执行图片加载 for(let i = 0 ; i &lt; imgList.length; i++)&#123; if(_isShow(imgList[i]))&#123; imgList[i].src = imgList[i].getAttribute('data-src'); imgList.splice(i,1); &#125; &#125; &#125;; function _isShow(el)&#123;//判断img是否出现在可视窗口 let coords = el.getBoundingClientRect(); return (coords.left &gt;= 0 &amp;&amp; coords.left &gt;= 0 &amp;&amp; coords.top) &lt;= (document.documentElement.clientHeight || window.innerHeight) + parseInt(offset); &#125;; function imgLoad(selector)&#123;//获取所有需要实现懒加载图片对象引用并设置window监听事件scroll _selector = selector || '.imgLazyLoad'; let nodes = document.querySelectorAll(selector); imgList = Array.apply(null,nodes); window.addEventListener('scroll',_delay,false) &#125;; imgLoad('.imgLazyLoad')&#125;)()]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[节流]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F20%2Fthrottle%2F</url>
    <content type="text"><![CDATA[throttle 的中心思想在于：在某段时间内，不管你触发了多少次回调，我都只认第一次，并在计时结束时给予响应。 先给大家讲个小故事：现在有一个旅客刚下了飞机，需要用车，于是打电话叫了该机场唯一的一辆机场大巴来接。司机开到机场，心想来都来了，多接几个人一起走吧，这样这趟才跑得值——我等个十分钟看看。于是司机一边打开了计时器，一边招呼后面的客人陆陆续续上车。在这十分钟内，后面下飞机的乘客都只能乘这一辆大巴，十分钟过去后，不管后面还有多少没挤上车的乘客，这班车都必须发走。 在这个故事里，“司机” 就是我们的节流阀，他控制发车的时机；“乘客”就是因为我们频繁操作事件而不断涌入的回调任务，它需要接受“司机”的安排；而“计时器”，就是我们上文提到的以自由变量形式存在的时间信息，它是“司机”决定发车的依据；最后“发车”这个动作，就对应到回调函数的执行。 总结下来，所谓的“节流”，是通过在一段时间内无视后来产生的回调请求来实现的。只要一位客人叫了车，司机就会为他开启计时器，一定的时间内，后面需要乘车的客人都得排队上这一辆车，谁也无法叫到更多的车。 对应到实际的交互上是一样一样的：每当用户触发了一次 scroll 事件，我们就为这个触发操作开启计时器。一段时间内，后续所有的 scroll 事件都会被当作“一辆车的乘客”——它们无法触发新的 scroll 回调。直到“一段时间”到了，第一次触发的 scroll 事件对应的回调才会执行，而“一段时间内”触发的后续的 scroll 回调都会被节流阀无视掉。 理解了大致的思路，我们现在一起实现一个 throttle： // fn是我们要包装的回调函数事件，Interval是我们要传入的时间间隔function throttle(fn, Interval) {// 记录上一次调用的时间；let last = 0;return function() {// 保存上下文的thislet context = this// 保存传入的参数let args = arguments;// 保存调用时的时间;let now = + new Date;// 判断上一次调用时间和当前调用时间对比if (now - last &gt; Interval) {// 更新最后一次调用时间;last = now;fn.apply(context, args);}}}// 用throttle来包装scroll的回调let better_scroll = throttle(() =&gt; {console.log(‘触发了滚动事件’), 1000});document.addEventListener(‘scroll’, better_scroll);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防抖]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F20%2Fdebounce%2F</url>
    <content type="text"><![CDATA[防抖的中心思想在于：我会等你到底。在某段时间内，不管你触发了多少次回调，我都只认最后一次。 继续讲司机开车的故事。这次的司机比较有耐心。第一个乘客上车后，司机开始计时（比如说十分钟）。十分钟之内，如果又上来了一个乘客，司机会把计时器清零，重新开始等另一个十分钟（延迟了等待）。直到有这么一位乘客，从他上车开始，后续十分钟都没有新乘客上车，司机会认为确实没有人需要搭这趟车了，才会把车开走。 我们对比 throttle 来理解 debounce：在throttle的逻辑里，“第一个人说了算”，它只为第一个乘客计时，时间到了就执行回调。而 debounce 认为，“最后一个人说了算”，debounce 会为每一个新乘客设定新的定时器。 我们基于上面的理解，一起来写一个 debounce： // fn是我们要包装的回调函数事件，delay每次等待都执行时间function debounce(fn, delay) {// 定时器；let timer = null; 1234567891011121314return function() &#123; // 保存上下文的this let context = this // 保存传入的参数 let args = arguments; // 每次调用前都清空定时器 if (timer) &#123; clearTimeout(timer) &#125; // 去设立一个新的定时器 timer = setTimeout (function() &#123; fn.apply(context, args); &#125;, delay)&#125; }// 用throttle来包装scroll的回调let better_scroll = debounce(() =&gt; {console.log(‘触发了滚动事件’), 1000});document.addEventListener(‘scroll’, better_scroll);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言中的++ 你了解吗？]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F19%2Fself-increase%2F</url>
    <content type="text"><![CDATA[前言今天朋友问了我个C语言的问题，信誓旦旦给了答案后，在我的 Visual C++ 6.0 上运行的答案却不一，题目如下： 首先明白 ++在前和++在后的区别：++在前 先自加后运算，++在后 先运算后自加。该题我给出的答案是15，21，8，8，我的编译器给出的答案是15，22，8，8，另外有些地方又说答案是15，24，8，8（这下更是一脸懵B） 查阅资料后发现这是个问题，所以发篇博文收录一下，不过网上已经有很多总结归纳的不错的博文了，我这里就选择一篇供参考，让我们看看博友 lulubaby_ 比较nice的解释： 首先解释p的值吧。是不是很多在学习C语言的小伙伴觉得p应该等于18呢？ 第一种：p = 15 在vc环境下p的值为15，那么只可能有一种解释： p = 5 + 5 + 5 = 15 在 VC6.0环境 中，第一个子表达式i++求完值后，其它子表达式中出现的变量i的值还没有改变，依然是5。表达式(i++) + (i++) + (i++)的值为15（5+5+5），求完值后，变量i会执行自增操作3次，其值会变成8。所以最终的结果为15和8。 第二种：p = 18 在 gcc和dev c++环境 下p的值为18，不难理解： p = 5 + 6 + 7 = 18 由于”i++”是先加后自增，所以是从5开始边加边自增，最终的结果为18和8。 严格意义上来说，这个表达式不“合法”。严格地说C语言程序中不能出现类似的表达式，它是非法的，虽然它能通过编译系统的检查并也能输出一个结果。 再来解释下q值q的值为什么是22（TC环境下是24（8+8+8））？ 用VC中的debug反汇编：q=(++j)+(++j)+(++j);0040102F mov eax,dword ptr [ebp-4] //把ｊ的值传到寄存器EAX，dword ptr [ebp-4]存放的是变量ｊ00401032 add eax,1 //EAX加１00401035 mov dword ptr [ebp-4],eax //EAX的值传到变量ｊ，这两步实现第一个++j，此时ｊ＝６00401038 mov ecx,dword ptr [ebp-4] //把ｊ的值传到寄存器ECX0040103B add ecx,1 //ECX加１0040103E mov dword ptr [ebp-4],ecx //ECX的值传到变量ｊ，这两步实现第二个++j，此时ｊ＝７00401041 mov edx,dword ptr [ebp-4] //把变量ｊ传到EDX00401044 add edx,dword ptr [ebp-4] //再加上ｊ的值，这一步实现了第一个加号的加法运算，内存中ｊ变量的值仍是７00401047 mov eax,dword ptr [ebp-4] //把ｊ的值传到寄存器EAX0040104A add eax,1 //EAX加１0040104D mov dword ptr [ebp-4],eax //把EAX的值传送到变量ｊ中，此时，变量ｊ在内存中的值是８00401050 add edx,dword ptr [ebp-4] //EDX加上ｊ的值，EDX中存放的是前面的第一个加法运算的结果１４，最后EDX的值为２２00401053 mov dword ptr [ebp-8],edx //把运算结果传到内存中变量ｑ的地方，所以最后变量ｑ为２２ 可能有很多小白看不太懂上述的解释 q = 7 + 7 + 8 = 22 C语言的深水在这里就可以体现了，在C语言中，加法从左到右运算,先算前两个加数的和，再和第三个相加的过程中，他会先把前两个括号内的东西执行完成后，再执行括号外的加法，也就是（7+7）+8=22。如果是4个++j连续的话，结果就应该是 7+7+9+9=32 。 亲爱的你们懂了吗？ ps:php中，测试下述代码（结果是：18，21，8，8）： 12345678910&lt;?php $a = 5; $b = 5; $p = ($a++)+($a++)+($a++); $q = (++$b)+(++$b)+(++$b); echo $p; echo $q; echo $a; echo $b;?&gt; 得到的18和8我就不多说了，21也是比较符合我们正常思路的6+7+8。 而在python,go,以及ruby中，没有自增运算符，这样也就大大减少了这种因版本和编译器的差异导致运行结果不同的概率。 本文摘转自 lulubaby_ 博文 —— 原文传送门]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git rebase 与 git merge 的区别]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F18%2Fgit-01%2F</url>
    <content type="text"><![CDATA[前言初学git，在合并分支上必定会常用到 git merge 语法。今日接触到 git rebase，发现二者都有用于分支合并的功能，那接下来让我们探究一下二者的不同之处。 First：二者的区别主要区别在于git log上：是否保留分支的commit提交节点 。 Than：详情分析前提： 在一个git项目中我先创建并保存了两个文档：1.txt 和 2.txt 记作“1” 和 “2”； 创建分支branch1； 继续在主分支Master上创建并保存两个文档：3.txt 和 4.txt 记作“3” 和 “4”； 转到branch1分支上创建 5.txt 和 6.txt 记作“5” 和 “6”； 此时，我们的主分支Master上有1、2、3、4 四个文档，branch1分支上则是1、2、5、6 四个文档，接下来执行我们的合并操作。 git merge： 我们直接回到主分支Master上执行 git merge 命令，显示如下： 此时我们的 git log 上保留了分支branch1的 5 和 6 的commit提交，且又在主分支Master上自动创建了一个新的commit提交节点 “7”。 简单而言就是Master的1、2、3、4和合并的branch1的5、6的提交过程都被记录下来了，且自动在Master上自动生成第7个节点： git rebase： 我们在分支branch1上执行 git rebase 命令：会发现branch1合并了 Master 的 3、4 文档，所以现在branch1 就有了1、2、3、4、5、6所有文档，回到Master再合并一下：这时我们的 git log 上就得到一个简洁的项目历史，且未生成新的 merge commit（保留了分支上的提交信息成功与Master合并，但删去了提交历史记录）： 自我猜想： 学完rebase，我即刻猜想，若是在分支baranch1上直接merge合并主分支，得到所有文档后再回到主分支上执行merge会不会也能得到一条线，事实证明，这么想说明还是没有完全理解rebase的真正含义，先看结果吧… SO（敲黑板）今日学习： rebase 到底是什么？ rebase就是——变基， 变基， 变基 。 即：改变一条分支的 基点 ，使原分支从指定的节点（commit）延续。。 通俗点讲，变基操作其实就是保留了该 commit 作出的修改，但删丢弃了分支上一些现有的提交记录，删去了这些节点。 Last：二者比较 比较 merge rebase 优点 保留有价值的历史文档 删减就繁 缺点 分支杂乱冗余 无法体现时间线 所以，使用merge还是rebase还是得分情况考虑，具体项目具体分析： 如果项目庞大，需要一个简洁的线性历史树便于leader管理，推荐使用 git rebase 。 如果是小型项目，需要审查历史纪录来便于编写过程报告，则推荐使用 git merge 。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速看懂“商业模式”？ [收藏]]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F17%2FbusiModle%2F</url>
    <content type="text"><![CDATA[前言 什么是商业模式？商业模式中最重要的部分是什么？以及其对商业模式的看法 互联网公司的业务最重要的就是“流量”和“商业模式”。流量往往是商业模式产生的前提，因为有了流量才有客户愿意和项目合作。 但往往创业项目就比较悲催了，还是一个商业计划书的“画饼”阶段，哪里有什么流量，这个时候完全是靠商业模式撑着，甚至在初创型互联网之中，商业模式的构架能力甚至超过了流量（资源）的重要性。 ★ 而什么是商业模式呢？ 一、商业模式=盈利模式+服务模式+组织模式商业模式应该包括三个层次： 第一个层面回答项目如何赚钱，也就是所谓“盈利模式”；第二层面是回答靠什么样的方式去服务用户，那就是“服务模式”；第三个层面是如何聚集起自己的用户，怎么把规模搞大，也就是“组织模式”。从这三方面考察商业模式，这相当于是项目的“中心思想”。 如果是一个很成熟的产品，其产品逻辑和设计一定是服从于商业模式才是合格的，反之如果产品还没有成型，也可以根据商业模式来推导出产品的逻辑和一些功能设计的，基于商业模式的预测和推敲往往不会离谱，“万变不离其宗”。 盈利模式其实很好讲清楚，那就是公司账上的钱从哪里来作为判断依据，从企业客户里收来的就是to B，从终端消费者口袋里收上来的就是to C。 以“华为”举例说明： 任正非说“客户是公司创造财富的源头”，华为的客户有哪些？ 华为在做手机（to C）之前，他们的客户主要来自企业（那时候华为主要还是一家to B的公司）；现在全球社会面临5G升级，其客户扩大至一个个政府组织，也有所谓的“to G”；而华为最让美国人忌惮的是这家公司不走资本路线，不上市不融资，觉得不好操控是一个“异类”。 而大多数公司尤其是互联网公司的现金流来源需要资本市场融资，即所谓“to VC”模式。一般to VC公司的归宿是上市，上市之后风险投资人原始股才更值钱，在上市之后在二级市场则是to 股票市场投资人（有的是散户和韭菜）的模式，去年就有很多互联网公司上市了。 盈利模式最终还是要回归到消费者或者客户，也就是说，主流的盈利模式就两个：要么是to C，要么是to B。 “服务模式”就是：为客户或者消费者提供的是什么东西才“值钱”。 有的是产品（比如小米手机），有的是内容（比如得到的课程），有的是预期保障（比如平安的保险），有的是技术解决方案（比如微盟为中小企业提供小程序一站式解决方案，科大讯飞为企业提供的智能语音识别系统等），有的是搭建一个销售平台（天猫为实体品牌搭建线上销售平台）等等，这些涉及到具体的业务执行层面，你会发现，接管这部分为公司赚到钱的职能部门，就叫做“市场部”。 商业模式之中最难窥门道，也是最难模仿的其实是“组织模式”，这一点很多人在提及商业模式的时候甚至没有想过，接下来要花一些篇幅来讲，尤其是互联网公司的“组织模式”。 我们知道，传统企业的组织模式往往是金字塔式的，通过分区域制来搭建自己销售网络和渠道，主要负责铺货和回款，但这种组织模式所付出的管理成本和沟通成本巨大。互联网本身是跨区域的、扁平的，这就给传统企业的组织方式带来了巨大的冲击和变革。 不妨以教育行业为例：传统教育机构是设立分校，但是很多机构在三线以下城市很难吸引大学生去做培训老师，就连好未来、新东方都没有办法下沉到三四线城市。 而互联网教育平台比如K12机构中的掌门1对1、阿卡索、DaDa等基本都能够做到，也压根没有所谓的“下沉市场”和“下沉用户”这一说法，其实那些谈到“下沉市场”其实是站在传统企业的组织模式上思考这个问题的。 现在的互联网公司一般是 “强总部轻支部” 的，实际上与传统企业组织模式恰好相反，过去那种各地的销售人员加起来远远大于总部人员的情况，在互联网公司是难以现象的。互联网公司总部会有很多技术人员，但是支部基本上可以由市场上共享或者外包合作来解决，也可以理解为，除总部之外无自养之兵，若需要都是雇佣兵形式。 当然，互联网化组织模式之中也有“异类”，比如：京东和美团快递员和配送员就超过了总部人员，甚至占到了80%，不过要注意到的是这两家公司均是亏损大户。与其说这是他们组织模式的特色，不如说这是他们迫不得已，因为更轻、更高效的组织模式已经有其他家早做了。我相信，这两家的“外包化”、无人配送的趋势最终将不可避免。 互联网的组织模式有时候也被称作是 “平台模式”，关于“平台”的概念在很多领域都极端含糊，完全只能凭借情景来理解。从低人力成本的维度上看，平台模式往往是通过搭建一个线上交易平台，让各方参与到其中，不为这些参与者发工资，以严格的社区契约取代公司员工的纪律约束，让参与其中的人“自组织”形成起来。 一般这些平台如果不是跑现金流的其盈利模式，最终会走广告的流量变现模式，而最有想象空间的还是交易平台，类似滴滴出行就是这种模式。 程维并没有给滴滴平台上的司机们交工资和社保，这些司机都是个体创业者，他们之所以愿意在滴滴上跑活，前提是滴滴上有客流量、有单子接，滴滴则是在每一单中抽服务佣金。 美团也是采用这种每单抽佣的形式作为盈利模式，但是最高交易频次的外卖业务必须依赖养配送员的传统组织模式。所以，滴滴就做网约车一个项目，就比美团做那么多品类估值高的原因在这里，可见组织模式先进程度直接决定了平台的毛利水平。 我们再来看，阿里巴巴也是这样平台组织模式，马云基本不需要雇佣快递员，也没有做仓储，甚至没有像小米那样按照电商逻辑去选品制造产品。他做其实是 “自组织” 的活，让大家在平台内获得利益分配并且活跃下去，就可以像滚雪球一样越做越大，剩下的苦累脏活基本由其他电商项目去做了，这也为什么京东与阿里之间的市值基本上差十倍以上，其差距不是在于流量和GMV上，而是在“组织模式”上。 由于是阿里巴巴跑的平台级现金流业务，尽管流量和投资广度比不上腾讯，但是在盈利模式能上略超过腾讯一点点。 二、商业模式中的“组织模式”为何重要性优于“服务模式”和“盈利模式”？ 从宏观维度上看，盈利模式无非是to C/to B/to VC/to 散户或韭菜/to G这五大类。 也就是说，是羊毛出在羊身上，或者是从商户那里抽成，再或者是通过提供平台的方式提供服务，甚至有可能压根就赚不到钱，卖的多还赔得多。但做流量规模之后上市即所谓的“战略亏损”烧死对手打下整个市场再做利润。 大道理大家都懂，但为什么好多项目就是做不来呢？项目跑通的核心是服务模式和组织模式要共同支撑起具体项目的“盈利模式”。 我们以知识经济为例：实际上互联网内容产品的服务效率相对于传统实物电商销售形式是更高的，没有任何商品库存压力，核心拼的是用户留存、复购和消课情况。 不过服务产品很容易同质化，这个老师讲的这个课程比较火，很快一堆老师去讲了，最终比拼如何让一个课程让更多学员买单。有的根据网红老师的影响力，有的则是采用各种返佣和裂变模式来做，但很快各种裂变手段刷爆朋友圈了也陷入疲软了，其实也印证了服务模式的壁垒，其实并不是很高的。 目前让我看到组织模式创新眼前一亮的项目是樊登读书会，其内容产品主要是由樊登输出课程为主，并以开讲嘉宾老师录音课程为辅。 樊登看到了只有实现付费用户的裂变，才能实现这些内容产品的“边际效益”，因而推广和营销至关重要。樊登读书的组织模式是典型的“重总部轻支部”模式，整个APP的运营、技术加起来是200人，而樊登读书的推广大使主要是由书友在各地举办的书友会，不用发工资、自组织、相当于“荣誉会员”。 现在很多人读书并不是以前找不到书看渴求知识，而是求氛围、派遣孤独和无聊，线下社群组织者无非是多送几年的VIP会员，总部无需过多成本，但樊登读书未来最值钱也许就是这个线下社群所构建的 “海星模式” 或者说 “阿米巴模式”。当读书会成员在线下社群、朋友圈自发成为推手时，也就解决流量获客瓶颈问题，非常值得初创企业学习的用户增长模式。 有很多项目商业模式从逻辑上讲非常完美，流量很大、规模效益很足，但是最终就是挂在服务模式和组织模式成本过高。 我们不妨复盘共享单车行业的兴衰，把共享单车模式的与滴滴的“平台”组织模式对比，就可以发现：共享单车所突出“共享”概念其实在商业模式上从来没有真正落地过，单车是摩拜和ofo等自己投钱造的并且负责投放的，车辆运维的成本也是运营方全包的，当然这些钱都是VC给的。 即使ofo曾经单日线上订单量超过滴滴，但是仅仅单车的维修成本就足以让投资人赔的血本无归；其唯一的希望就是垄断市场但是没有成功。摩拜甩给美团之后几乎是负资产，连品牌撤下刷成“美团单车”了，因为与其最终要承担维修费用，不如留在街头做实物广告。可以说，共享单车从一开始就在商业模式的平台化组织模式上缺乏设计和推动而埋下了败局的隐患。 不过现在网约车也本身没有什么搞头了，既然已经有这么强势“自组织”平台摆在那里，就像一个磁场一样会吸附周围各种资源，就很难再做出另一个自组织平台了，那种不发工资的平台要活跃起来其实比发工资更难。 目前构建这个领域的商业模式的最佳时机已经过去了，就像现在在做一个阿里巴巴的电商模式一样不现实。既然人家生态已经很成熟了，就无法再复制了。共享单车项目做网约车明知不可为而为之，希望能够用补贴把司机再凝聚起来。 但忽视了网约车政策壁垒是需要一个个城市落地都要牌照，网约车在商业模式是与出租车牌照业务是相互竞争的，地方政府不可能让那么多家网约车平台存在，所以大家基本上看到美团打车做了两年多了，一线城市牌照都没有拿全。 “组织模式”壁垒高产生了一个后果，那就是：轻平台模式的确比所谓的“重服务”模式更具竞争优势，做重模式实际上是被迫的。 这也就是几年前O2O在很多领域内都没有跑通的重要原因；而做重模式又需要很多钱，必须要让投资人买单，所以胜出的只有极少数幸运儿，不得不说，类似京东、美团这样的公司在资本市场“钱荒”时也是不可复制的。 当然有人可能会提出反驳，既然互联网公司在线下设渠道和自营服务人员比较重，那为什么小米、华为以及很多智能家电产品会在不同城市去开专门店呢？ 道理很简单，这些硬件产品的盈利模式是一分钱一分货，其成本除了生产成本、营销成本以外，还包括了售后成本，尤其是电视之类大件还需要安装，而做线下店能以手机存量用户的粘性来拓展更多周边电器产品的销售，提升复购，顺便cover的售后成本。 以上不难看出：在互联网平台的商业模式之中，反而是组织模式重要性是强于服务模式，服务模式是强于盈利模式的。 前两个环节的基础打得牢，反过来盈利模式是水到渠成，在人人追逐钱的社会，对于钱不感兴趣的马云成为了中国首富，反思阿里巴巴的服务模式和组织模式在中国企业之中是不是最好的？就不奇怪了。 三、如何看待互联网平台商业模式之中的“平台税”？上述商业模式的阐述，有心的朋友就会发现：互联网公司对于商业模式最大的贡献其实是 “平台化” 组织模式，它最能够释放了互联网 指数型增长 和流量红利优势。 互联网最开始诞生的时候更多是在信息传播领域的“共享”，越往后发展越是资源、技术的共享，共享的前提是“让利”。 已经在越来越多的行业内可以清晰的看出，做成NO.1基本是“平台模式” 了。因为这种组织模式变革，可以调动所在行业指数级增长，而过去那种完全依赖自身品牌单打独斗的项目即使做得市场第一也是线性式增长，其市值也远远不及互联网公司高。 不过互联网公司做平台总得盈利，关于其盈利模式，“靠谱的阿星”发明了一个词——“平台税”，基本能够概括目前绝大部分平台的收入来源。 接下来，我们以一些知名的互联网平台进行举例说明： 在电商平台领域，阿里巴巴2019年整个财年收入3768.44亿元，净利润876亿元，市值4500多亿美金，是中国互联网公司中最赚钱的也是市值最高的公司。 阿里云的盈利模式基本上是to B，也就是从商户或者企业那里收钱，除了云计算业务以外，还包括其核心业务（电商业务）。 据知情人士表示：台抽佣为例，商户在淘宝是免交易抽金，但由于淘宝商城内每一个SKU中都有很多商家的产品，商户需在平台内买流量位（直通车或者钻展），这就构成了淘宝的收入；而天猫商城当然也有相关商家的流量收入，同时还有抽交易佣金以及技术服务费。阿里巴巴是一个大数据公司。 在O2O服务平台领域，以美团为例其交易佣金根据市场竞争状态在浮动，其中2019年Q1是13.87%，也就是此时用户说买一单100元外卖，美团提走13.87元。不过商家一般也会算，外卖价格定得比堂食贵就行了。 美团业务线比较多，不同的品类的佣金应该有不同。滴滴平台上的交易佣金也是每单都提，我是滴滴的深度用户，经常坐在副驾上跟司机聊，有的说抽20%，有的说抽25%，一般还根据交通情况进行来调节佣金调动司机。 在内容平台领域，以快手为例：很多网红主要收入来源就是开直播让用户送礼物打赏，快手平台与用户之间是五五分成，快手实际上是目前最大的直播平台；去年4月份当时抖音还没有上线直播功能的时候，“靠谱的阿星”写的一篇文章里说“无论是按照五五开、四六开还是三七开算，抖音肯定是不过错过做直播模式的”，现在抖音直播按照三七开算的，达人提30%的打赏收入。 再举一个例子：有很多自媒体大V入驻得到开课，得到就成了平台，对专栏买卖收入也是每一单会抽佣的。 一般平台越是成功，其抽佣也就越强势，网上也有一些人对“平台税”不满，其实这种“税是喂养平台的娘奶”。 一方面平台搭建了基础设施，就像过高速收费一样；另一方面是平台运行需要支付的带宽费、服务器费用、CDN网速加速等都是成本。 再加上，很多人在平台之所以能够成交是由于平台派单或是导流，而平台为了获取和留存这个用户本身也是花了一定的费用的。所以，平台抽佣无可厚非，这乃是平台与其参与者之间的游戏规则。 目前，电商平台的模式有很多，比如：C2C、B2C、B2b2C等等。严格来说均有“平台税”则是表现形式不同而已，也有的人把电商模式单独归结为一种与“游戏”、“广告”相区分的商业模式。“游戏模式”自从手游普及之后大家都明白了是怎么回事。 在上述三种主流互联网商业模式之中，电商模式对商业模式贡献最大，电商无论发展无论是网红电商、服务电商、团购、拼购等核心还是平台如何平衡用户端与商户端之间的关系。这两年电商模式又开始演变以大数据为渠道的C2M和新零售；还有以SaaS平台为无数个供应商作为小b提供线上平台，再由他们各自服务自己的用户的 S2b2c模式。 而S2b2c模式已经超出电商范畴，平台即S搭建了一个技术型基础设施，而小b入驻于平台中购买软件和系统的商户，这些商户之间又是去中心化的，单独与平台之间是相互协作的关系。 他们可以通过S提供工具去服务各自的用户，构建起自身的私域流量。由于一次采买的平台提供系统服务，不需要再和平台进行交易分佣而开始大行其道。实际上，目前微盟、小鹅通、房多多等都是采用这种模式来做to b端的技术解决方案。个人认为，S2b2c模式结合了平台化的组织模式优势，又减少了“平台税”的摩擦，应是未来商业模式的趋势之一。 我们再看看整个移动互联网流量最大的互联网公司腾讯，除了游戏模式以外，腾讯由于掌握了流量最重要的筹码而成为国内针对互联网行业的最大的投资机构。 微信是腾讯最大的流量平台，微信这个产品之所以能够成为移动互联网国民级应用和最普惠基础设施，原因在于 微信本身没有商业模式。所以，张小龙才说“微信一个工具，而不是一个平台”，很多微商以及部分借私域流量名义做微商的行为，实际上就是利用了微信本身不收“平台税”的特点，本身也可以理解为是在“逃平台税”。 2018年之后腾讯开启拥抱产业互联网，实际上腾讯是想做一个结合了各行各业类似S2b2c中平台赋能者的角色，除了作为自身to B领域的盈利方向外，还在为AI（人工智能）获取更多行业商业智能做前期准备。 结语每一个商业模式的梳理和研究，都需要对应的案例作为支撑，只有充分消化这些案例，才能总结出里头的商业模式。 学习商业模式最快的途径就是把自己作为一个神秘的顾客去体验一遍，消费一遍再结合产品、商业计划书以及上网一些通稿去理解。 一般商业模式不会成为PR的重点，除非是这个项目还处于起步阶段，需要更多投资人和行业人士理解才会做商业模式上的传播。 类似腾讯公关不会PR游戏收入，阿里公关也不会提收了多少佣金或者营销收入，比如：百度、头条他们对其广告销售体系的组织模式也不会向外公开，有时候只有等公司上市了之后才能看到一些数字，但对于不了解其商业模式的人来说，这些数字背后意义也没有多少人真正在意。 现在商业模式越来越务实，比如一些to C模式的平台可能从一开始就鼓励用户买VIP，先付钱再做服务，保证现金流之后再砸服务效果；在组织模式上未来平台会鼓励更多人在平台上创业而非打工，平台更少的人力成本而参与者更多的自由时间，两全其美。 商业模式是一个项目精髓所在，在一家公司比较小的时候能看得很清楚，甚至能根据商业模式作为做出预判，当这家做大了之后，就很难再看清楚他们的商业模式，大家也可以选择在一些优秀创业公司很小的时候一直关注甚至选择陪伴他们成长，体会会更加深刻。 本文收藏转自 李星（公众号“靠谱的阿星”，靠谱汇创始人，哲学硕士，科技媒体专栏作者）—— 人人都是产品经理 阅读原文]]></content>
      <categories>
        <category>产品经理</category>
      </categories>
      <tags>
        <tag>商业模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[乒乓圈 [原创]]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F16%2FTTcircle%2F</url>
    <content type="text"><![CDATA[银跃乒乓圈小程序 - 项目介绍文档旅梦开发团-发烧圈团队 1 项目背景&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;马克·罗在问与答网站上写道，“在中国有一个笑话，永远都不要说你擅长打乒乓球，因为你不知道你的朋友里是否有从省队退役下来的。”总所周知，乒乓球是国球，但在这互联网时代，市面上与乒乓球相关的线上可用产品却不过数几，大多也都只是涉及器材贩卖和乒乓培训方面，对于乒乓球兴趣的平台服务基本空白，这也就促使我们乒乓球爱好者对其产生兴趣，致力研究，打造一个专门关于乒乓球兴趣的大众自主服务平台。 2 项目简介&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;银球跃动，挥拍击扬，乒乒乓乓，兴趣所在。这是我们对打乒乓球的现实描述，大家都是通过同一兴趣走到一起，互相认识，互相切磋，以球会友。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;银跃乒乓圈以平台为思想，致力于打造乒乓球兴趣圈的自主服务，可以共享球馆，查询场地，一键约球，查看快讯，参与比赛，留言互动，以线下球友，线上圈友的形式，使用户在小程序内资源共享、双向交互，达到平台自主服务。 3 名词解释 序号 名词 描述 1 自主服务 我们打造的服务平台，搭建服务框架，用户之间的双向交互形成自主服务（例如，共享球馆—发布球馆，上传球馆信息；一键约球—用户线上匹配交流，线下约球等） 2 球圈 一个球馆代表着一个球圈 3 圈友 银跃乒乓圈用户统称圈友 4 乒乓段位 通过打卡，开快讯参与比赛等获得积分，累计积分越高段位越高，权限增加 5 同城圈 可查找同城已共享的球馆，查看球馆相关活动人员，共享发布球馆，一键约球 6 达人圈 段位积分升至达人的用户或者特邀用户可在达人圈进行优秀图文的发布 7 赛事圈 可查询并参与比赛，段位积分升至达人的用户或者特邀用户可发起比赛 8 快讯圈 可浏览收藏乒乓球相关的新闻快讯 4 可行性分析4.1 项目可行性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;据国际乒联的数据，2018年中国有41.9%的人口都在电视上观看了乒乓球比赛。全年中，有5.39亿的观众专注于观看乒乓球，中国有1000万人经常参加乒乓球比赛，3亿人会打乒乓球。刘国梁曾发博给出数据，全国专业选手2000人+业余体校30000人，全国参与乒乓球一周两次以上，一次一小时以上的有8300多万人。现在各个地区也都发展起来各种乒乓球馆、球室、俱乐部，基本每个公园、小区、公司、学校等也都装备了乒乓球设施，可见乒乓球体育运动项目的人员基数庞大，硬件环境成熟可观。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在每一个地方都有乒乓圈，圈内人互称球友。乒乓圈小至县乡有一两个圈子，大至市、区有十多个甚至更多具有一定规模的圈子，加之各个高校有其圈子，小区有其圈子，甚至街道也有其街道圈，各个圈子相互交织，错综复杂。那么这个小程序的作用关键就在于对各个乒乓球圈的整合，球馆资源共享，让球友们交流起来更方便、更广泛，这无疑是给一些乒乓萌新爱好者带来了福音，也给一些足具规模的圈子有了更广阔的发展渠径。因此本项目开展的可行性非常高。 4.2 技术可行性（1）使用colorUI组件库，加强视觉交互，提高用户体验；（2）使用VUE组件化编程思想，提高代码的复用性；（3）JS处理各种业务逻辑，通过向后端接口请求数据或者对数据进行格式化，用函数式编程风格，对各个业务逻辑进行功能划分，编写基础业务方法，工具类方法进行抽离，独立成一个工具函数模块，利于代码规范统一；（4）整体布局与样式严格遵守微信UI规范微信官方提供多种API及组件工具，极大地加快开发效率，标签命名遵守BEM(Block Element Modifier)；（5）云开发：弱化后端及运维的概念，无需搭建服务器，降低开发成本，使用微信平台提供的api即可完成核心的业务开发，方便快捷：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.云函数：在云端运行的代码，微信私有协议天然鉴权，开发者只需编写自身业务逻辑代码；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.数据库：既可在小程序前端操作，也能在云函数中读写的 JSON 数据库，免费2G容；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C.存储：可在小程序前端上传/下载云端文件，在云开发控制台可视化管理，免费5G容量。 5 功能详述5.1 功能需求5.1.1模块1—tarbar首页5.1.1.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首页是最重要的模块，也是用户登录进来看到的第一个模块，所以首先在界面设计上花费了许多心思，起初的设计以圈的思想规划了几个圈，上面以常见的轮播图形式展示新闻如图5-1，进一步设计中，将圈形象化以乒乓球的形式展示出，背景以乒乓球桌的形式展示，让乒乓球爱好者感受到小程序风格的贴切如图5-2，但是在实际代码实现过程中，发现展示效果并不如原型图那么理想，轮播图以爬虫技术获取的中国乒协官网的新闻有些图片展示也并不美观，影响的首页的整体效果，于是又把快讯单独拉出来放了一个版块，和同城圈一样把快讯以圈的形式展示，加之整个背景使人感觉深沉，于是通过大量素材的查找和配色下，在原来蓝色的基调下使主体颜色浅化，处于紫色和蓝色之间的青紫色状态展出，最终确定了整个小程序独特的的主题风格如图5-3，但是图三的圈体现不出小程序的主打功能，于是我们将同城圈单独划出为一个大版块展出，其余三个 置下做出轮播的用户交互效果，实现图5-4的首页效果。以下是我们原型设计的成型过程： 图5-1 原型1&nbsp;&nbsp;图5-2 原型2&nbsp;&nbsp;图5-3 原型3&nbsp;&nbsp;图5-4 原型4 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由图容易看出：本产品首页的功能板块主要有：同城圈，达人圈，赛事圈，快讯圈，附带榜单和打卡签到功能，基本涵盖了乒乓球体育运动项目的方方面面，致力于全方位平台服务。 5.1.1.2 功能点 序号 功能名称 所属版块 功能简介 状态 优先级 1 共享球馆 同城圈 发布球馆表单，上传球馆信息 已完成 P0 2 一键约球 同城圈 用户之间的匹配约球交互 待开发 P0 3 城区选择 同城圈 可选择查看其他城区的球馆 待开发 P1 4 加入球圈 同城圈 加入球馆的活动成为圈内人 待完善 P1 5 参加比赛 赛事圈 可以参加已发起的赛事 待开发 P2 6 发起比赛 赛事圈 达到权限可发起比赛 待开发 P2 7 浏览快讯 快讯圈 关于乒乓球的新闻快讯 待完善 P3 8 精品收藏 快讯圈 收藏自己值得珍藏的快讯 待开发 P3 9 发表图文 达人圈 达人发表乒乓球优秀图文 待开发 P4 10 榜单 首页 查看同城积分排行榜 已完成 P5 11 签到 首页 签到增加相应积分积分 已完成 P5 12 提示 首页 乒乓球全局通告 已完成 P6 5.1.1.3 页面布局首页页面1&nbsp;&nbsp;首页页面2&nbsp;&nbsp;首页页面3首页页面4&nbsp;&nbsp;首页页面5&nbsp;&nbsp;首页页面6 5.1.2 模块2—tarbar圈友5.1.2.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此模块维系首页主题色调，银跃式简约阳光风格，背景用CSS制作气泡，象征着一个又一个大小不一的圈，也代表着积极运动阳光向上的理念。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此模块分为两个版块：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（1）显示自己已加入的球圈列表及其相关活动人员列表；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2）显示圈友给自己的留言消息。 5.1.2.2 功能点 序号 功能名称 所属模块 功能简介 状态 优先级 1 球圈列表 圈友 列出所有已加入的球圈 已完成 P0 2 圈友信息 全局 列出求圈内圈友及其信息 已完成 P0 3 圈友留言 圈友 给圈友留言 已完成 P0 5.1.2.3 页面布局圈友页面1&nbsp;&nbsp;圈友页面2 5.1.3 模块3—tarbar我的5.1.3.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;乒乓圈小程序的个人仓库，对自己的信息做修改完善的模块。 5.1.3.2 功能点 序号 功能名称 所属模块 功能简介 状态 优先级 1 个人资料 我的 对个人资料的修改 已完成 P0 2 乒乓段位 我的 段位机制查看5.1.4 已完成 P1 3 我的积分 我的 积分机制擦查看5.1.4 已完成 P1 4 精选收藏 我的 快讯收藏的仓库 待开发 P2 5 我的赛事 我的 查看自己已参加的赛事 待开发 P2 6 意见反馈 我的 用户对乒乓圈小程序的反馈 待开发 P3 7 关于我们 我的 关于乒乓圈的简单介绍 待完善 P4 5.1.3.3 页面布局我的页面1&nbsp;&nbsp;我的页面2&nbsp;&nbsp;我的页面3 5.1.4 机制规则乒乓圈段位积分及其权限设置机制：（1）同城榜单按照段位积分排名，段位：新手1—10段，业余1—10段，达人1—10段；积分无上限，按积分排名（2）产品用户：特邀用户+普通体验/游客/用户（3）积分累计规则：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.打卡第1日 — 1分,连续打卡2日 — 2分,连续打卡3日 — 3分,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;连续打卡4日 — 4分,连续打卡5日 — 5分,连续打卡6日 — 6分,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;连续打卡7日 — 8分,连续打卡7日+ — 10分,如果其中有一天&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;没有打卡就会清零,并重新开始计算 从2分开始。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.阅览新闻快讯+1积分，一天加分3次上限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C.同城一键约球+1积分，一天加分3次上限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D.加入一个球圈+1积分，一天加分1次上限（4）段位机制：A.初始：新人B.新手段位：新手1段(30积分)，新手2段(60积分)，新手3段(90积分)，新手4段(120积分)，新手5段(150积分)，新手6段(180积分)，新手7段(210积分)，新手8段(240积分)，新手9段(270积分)，新手10段(300积分)C.业余段位：业余1段(400积分)，业余2段(600积分)，业余3段(800积分)业余4段(1000积分)，业余5段(1200积分)，业余6段(1400积分)业余7段(1600积分)，业余8段(1800积分)，业余9段(2000积分)业余10段(2200积分)D.达人段位：达人1段：新晋达人(2500积分)，达人2段：达人1星(2800积分)达人3段：达人2星(3100积分)，达人4段：达人3星(3400积分)达人5段：达人4星(3700积分)，达人6段：达人5星(4000积分)达人7段：优秀达人(4500积分)，达人8段：魅力达人(5000积分)达人9段：口碑达人(6000积分)，达人10段：专业达人(8000积分)（5）段位权限：A.新手：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.打卡、查看榜单&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.阅览新闻快讯&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.同城圈一键约球&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.申请加圈&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.查看达人圈，点赞评论收藏关注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.赛事圈参加赛事(功能上线后)B.业余：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.拥有新手所有功能权限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.发起球圈C.达人：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.拥有新手业余所有功能权限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.达人圈进行发文&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.赛事圈发起赛事(功能上线后)（6）掉分掉段设置：两周不登录，降200分，以此类推直至为0 6 设计未完待续，更需完善。。。 附上团队大佬为本项目发表的掘金优文 —— 微信小程序–乒乓圈 - 云开发]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[笔波文]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F15%2Fpoem-wenbo%2F</url>
    <content type="text"><![CDATA[亦凄亦美 寒夜遥望隔岸灯火 此情此景 指尖轻点千丈落水 非敌非友 孤鸟长鸣下掸心愿 愿生愿死 痴情相守泪散千年 文波亲笔]]></content>
      <categories>
        <category>诗集</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[亲献]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F14%2Fpoem-love%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! U2FsdGVkX183QCUnrUgxskplJ+zizP7W4m6Swj67K931WCU8ANy4zqIIpiszZRMCNlJPwhMFljmUNgsMz7Tp+vjwfrAFw3/fuyNi04vilfiGlBSGDOKiLpiBLWDuM0c6GEaFGDEhSo+Wo10x81ucmBWTrwNC52AfuO2Yi+qeLd53w4XQruqSfsJQheVlCzMU9cFDM1kNliOFL/RZyW6E/EA9fPnXIUu14O7MmbrYxRO5N+IZtToQZnDUXgTLfyanutKjEkTHNbUL6kZbBc2/EtFkFt55rVrrVaauxiDY5YBz9Ne4oFbh76HfIEJf+9E79WEV9C9y5YwrXdyoqxfZMf+Pbni4YCRmmegy9SKrZNmWIWH3NCjwT3Jx04ZZFMOZUYpyEIft3AZKS+WYwwlOD+wGgYv1WYXy6UnQwsQ2IYcU5ucCXue2DXmZ9a2/+dnTa2IPhO7DmVWWLs3lMf8RIOYUh22hViZdq2LLor3Hw4Jvc9Dfi55bC9p79E5hisGHXCwVoDTAsL2GN1xDMbd5LeaIPO/70cFTUf72cIsuGv6kUeae6PTkiZwXM2Kkh+cqicaes3gJH+CTtgiGl5Smo0ntIQQXrZvjdYPWcu5deEY+AOGBQ5PX08xY4DQwnmcPQLMuG4yvG22pla70Gd4mzY8rQllXnGVXxF+AOSjbpLQlDr2auVCD0T4gtt8fbliMboUYEJQExcVFeATzYthejIvuTC02qgfAuhwTYoG2yq5nFBKFvq5G7rvFYYEp24tRZAJI12vHozX0oRfEeueuBODXUlAAsIJnvz1dMCj6TviOUTP0FVKrDtukJPCNvpApuJC9OYqK2RkkwPDSRvlRN13ByVoC0d3CJRczJiCAwVFiJbx4a6zGXybxm/9JLuDn2pfVhH2QliWbVzQrGASjBZ7P8FuHKdXcHLT6jKHDaG4LIJcL1It+AVWVyofkNpMG2rQLik0dXDAXj+CH+PqAWfRgWMNncRadykl2m+sdHd6YVqthBuobThZEBJVIykiToUKvp+TpjoWW1jhzB/1z/CAhLpzkKeJQKHIyq+OUZ99SSiD2CMQu+YgLACpeO1PtzBlPf6QsDMPRE1FT2JOcgzroQsJJqHXlLYsnFYtgiucEDgrXeCrqROlpNi/+46yUxmnjUUDmMiHXDf+X+QO1/uHuggNs4WoU41WgQtykg4mTz8JOISwhXQoCqTU+y58rFitfJmwmziFE9BZEAxmci/gG3euNm3esVsXzrGYeXBd5dX6OhjHW2215kA6TlhceMtQMUrL1n9/ZTDcGVh+aT2QanvYLzmhRP/kXGvgyPbhKHVZSBDRYcoM0BjXx8ra4Id8Xpznk8lIX23yQvctGa2MQN2v554uKxLQskm/Tx8E/lVdXEIFYd9FfIelvsLmgdov3XWUv125ieE9d0wdgGWMf5/If+gNWXclzYzYKvfoMikCFT6D+THhqVKIeLjPeC9UIUDV8h5Waeh7LQoh+s/ZTO3fo5/rs6b8flxH/3uFU6m5jgN+FeO2d6hP3m0RZAQWukXhB5Lzoi6l2gJAlqDoppAUAB5GJ8YoK8Qkc3mDGnXdAarkK139DwFhv3xT79tH6/mjzoSVhQF8ru4N9hg==]]></content>
      <categories>
        <category>诗集</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[友情链接]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F13%2Ffriends%2F</url>
    <content type="text"><![CDATA[旅梦开发团自频道 叶志祥老师 - 慕楚教育 技术胖 阮一峰 张鑫旭 司徒正美 小猿大圣 Phodal 酷壳 36氪 人人都是产品经理 UI：uigradients、trianglify.io 工具类：xiaopiu.com]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于转载]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F13%2Fcopyright%2F</url>
    <content type="text"><![CDATA[首先感谢hexo以及Yearn主题作者hufangyun小猿大圣让我迅速搭建起自己喜欢的个人博客，以此认真记录下自己的学习旅程，希望以后我能在自己的学习道路上越走越远，如我在首页所说：“路漫漫其修远兮，吾将上下而求索 —— 学而无止境。” 刚建立博客，虽然还未发表什么有价值性的文章，但我始终尊重和支持原创，也同是为了促进自己的学习，若有转载或摘文，必定注明出处。所以也希望走过路过的朋友看到此文也能这么做，创建文明共享网络。]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
</search>
