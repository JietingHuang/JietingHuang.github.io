<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[递归算法]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F31%2Fdigui%2F</url>
    <content type="text"><![CDATA[一、前言从前有座山啊，山里有座庙啊，庙里有个老和尚和一个小和尚，他们在干什么呢？老和尚在给小和尚讲故事，讲的什么呢？讲的是从前有座山…看到这，大家都会问老师你不讲课，你说这个老掉牙的故事干吗？ 在这说这个故事是有意义的，大家在仔细读读这个故事，是不是老和尚在说一件事，当碰到一个条件的时候都会再重复的从头说起呢？ 那么这就要给大家引入一个新的概念——递归，递归就是一个函数在它的函数体内调用它自身。执行递归函数将反复调用其自身，每调用一次就进入新的一层。 二、实例2.1、栗子例如：计算n的阶乘可以使用以下代码： 运行结果为：5的阶乘=120 2.2、任务1小明为了学好英语，需要每天记单词，第一天记1个，第二天记2个依次类推，到第10天的时候小明一共记了多少个单词？请用代码完成，算出小明第10天开始的时候会了多少个单词？ 输出结果为：小明第10天记了：55个单词。 123456789101112131415161718#include &lt;stdio.h&gt;/* 定义获取单词数量的函数 */int getWordNumber(int n)&#123; if(n == 1) &#123; return 1; //第一天只会1个单词 &#125; else&#123; return getWordNumber(n-1)+n; //到第天会的单词数量 &#125;&#125;int main()&#123; int num = getWordNumber(10); //获取会了的单词数量 printf("小明第10天记了:%d个单词。\n", num); return 0;&#125; 2.3、解析我们对上一小节中求5的阶乘这个例子进行一下剖析，看一看他的运算过程： 程序在计算5的阶乘的时候，先执行递推，当n=1或者n=0的时候返回1，再回推将计算并返回。由此可以看出递归函数必须有结束条件。 递归函数特点：1、每一级函数调用时都有自己的变量，但是函数代码并不会得到复制，如计算5的阶乘时每递推一次变量都不同；2、每次调用都会有一次返回，如计算5的阶乘时每递推一次都返回进行下一次；3、递归函数中，位于递归调用前的语句和各级被调用函数具有相同的执行顺序；4、递归函数中，位于递归调用后的语句的执行顺序和各个被调用函数的顺序相反；5、递归函数中必须有终止语句。 一句话总结递归：自我调用且有完成状态。 2.4、任务2猴子第一天摘下N个桃子，当时就吃了一半，还不过瘾，就又多吃了一个。第二天又将剩下的桃子吃掉一半，又多吃了一个。以后每天都吃前一天剩下的一半零一个。到第10天在想吃的时候就剩一个桃子了,问第一天共摘下来多少个桃子？并反向打印每天所剩桃子数。运行结果为： 123456789101112131415161718192021#include &lt;stdio.h&gt;int getPeachNumber(n)&#123; int num; //定义所剩桃子数 if(n==10) &#123; return 1; //递归结束条件 &#125; else &#123; num = (getPeachNumber(n+1)+1)*2; //这里是不应该用递归呢？ printf("第%d天所剩桃子%d个\n", n, num); //天数，所剩桃子个数 &#125; return num;&#125;int main()&#123; int num = getPeachNumber(1); printf("猴子第一天摘了:%d个桃子。\n", num); return 0;&#125; 三、终极练习有5个人坐在一起，问第5个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第3个人，又说比第2人大两岁。问第2个人，说比第1个人大两岁。最后 问第1个人，他说是10岁。请问第5个人多大？ 程序分析： 利用递归的方法，递归分为回推和递推两个阶段。要想知道第5个人岁数，需知道第4人的岁数，依次类推，推到第1人（10岁），再往回推。 123456789101112131415161718192021#include &lt;stdio.h&gt; int age(int n)&#123; int aage; if(n == 1) &#123; aage=10; &#125; else &#123; aage = age(n-1)+2; printf("第%d个人的年龄是%d岁\n", n,aage); &#125; return aage;&#125;int main() &#123; int age5 = age(5); printf("第五个人的年龄是%d岁", age5); return 0;&#125;]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原码反码补码的相互转换]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fcomputer2%2F</url>
    <content type="text"><![CDATA[首先，正数 的原码，反码，补码都是 相同的。所以，这里讨论负数的原码，反码，补码的相互转化问题。 一、负数原码和反码的相互转化负数原码转化为反码：符号位不变，数值位按位取反。 原码 1100 0010反码 1011 1101 负数反码转化为原码：符号位不变，数值位按位取反。 反码 1011 1101原码 1100 0010 二、负数原码和补码的相互转化负数原码转化为补码：符号位不变，数值位按位取反，末尾加一。 原码 1100 0010反码 1011 1101 //符号位不变，数值位按位取反补码 1011 1110 //末尾加1 负数补码转化为原码：符号位不变，数值位按位取反，末尾加1。 补码 1011 11101100 0001 //符号位不变，数值位按位取反原码 1100 0010 //末尾加1 三、负数反码和补码的相互转化负数反码转化为补码：末尾加1。 反码 1011 1101补码 1011 1110 负数补码转化为反码：末尾减1（注意，此处的反码是指原码的反码）。 补码 1011 1110原码的反码 1011 1101 //减法 借位 四、总结 正数的原码、反码和补码都相同。 负数原码和反码的相互转换：符号位不变，数值位按位取反。 负数原码和补码的相互转换：符号位不变，数值位按位取反，末位再加1。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二进制十进制的互换]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fcomputer%2F</url>
    <content type="text"><![CDATA[转成二进制主要有以下几种：正整数转二进制，负整数转二进制，小数转二进制； 1、正整数转成二进制： 要点一定一定要记住哈：除二取余，然后倒序排列，高位补零。 也就是说，将正的十进制数除以二，得到的商再除以二，依次类推知道商为零或一时为止，然后在旁边标出各步的余数，最后倒着写出来，高位补零就OK咧。哎呀，还是举例说明吧，比如42转换为二进制，如图1所示操作。 42除以2得到的余数分别为010101，然后咱们倒着排一下，42所对应二进制就是101010。如图2所示更直观的表达。 计算机内部表示数的字节单位是定长的，如8位，16位，或32位。所以，位数不够时，高位补零，所说，如图3所示，42转换成二进制以后就是。00101010，也即规范的写法为（42）10=（00101010）。 2、负整数转换成二进制： 方法：先是将对应的正整数转换成二进制后，对二进制取反，然后对结果再加一。还以42为例，负整数就是-42，如图4所示为方法解释。最后即为：（-42）10=（11010110）。 3、小数转换为二进制的方法： 对小数点以后的数乘以2，有一个结果吧，取结果的整数部分（不是1就是0喽），然后再用小数部分再乘以2，再取结果的整数部分……以此类推，直到小数部分为0或者位数已经够了就OK了。然后把取的整数部分按先后次序排列就OK了，就构成了二进制小数部分的序列，举个例子吧，比如0.125，如图5所示。 如果小数的整数部分有大于0的整数时该如何转换呢？如以上整数转换成二进制，小数转换成二进制，然后加在一起就OK了，如图6所示。 4、整数二进制转换为十进制： 首先将二进制数补齐位数，首位如果是0就代表是正整数，如果首位是1则代表是负整数。 先看首位是0的正整数，补齐位数以后，将二进制中的位数分别将下边对应的值相乘，然后相加得到的就为十进制，比如1010转换为十进制，方法如图7所示。 5、若二进制补足位数后首位为1时，就需要先取反再换算： 例如，11101011，首位为1，那么就先取反吧：-00010100，然后算一下10100对应的十进制为20，所以对应的十进制为-20，方法如图8所示。 6、将有小数的二进制转换为十进制时： 例如0.1101转换为十进制的方法：将二进制中的四位数分别于下边（如图9所示）对应的值相乘后相加得到的值即为换算后的十进制。 进制之间的转换虽然繁琐，但理解后也不难，但是需要经常温习，然后才不会弄混淆。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[递归算法与汉诺塔问题]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F10%2F07%2Fhanoi%2F</url>
    <content type="text"><![CDATA[一、递归理解 大师 L. Peter Deutsch 说过：To Iterate is Human, to Recurse, Divine.（人理解迭代，神理解递归。） 1、递归定义：&emsp;&emsp;在数学与计算机科学中，递归（Recursion）是指将重复将问题分解为同类的子问题而解决问题的方法，也可以说是在函数的定义中使用函数自身的方法，其核心思想是 分治策略，分而治之。实际上，递归，顾名思义，其包含了两个意思：递 和 归，这也正是递归思想的精华所在。 2、递归条件：&emsp;&emsp;① 递归函数&emsp;&emsp;② 递归出口 举个简单例子如下： 12345678910111213141516/*** 假设有个数列 1 3 5 7 9 11 ....* *递归函数：f(n) = f(n-1)+2;*递归出口: f(1) = 1;* *@param n 求n项的值*@return 返回第n项的值*/int find (int n) &#123; if (n == 1) &#123; // 递归出口 return 1; &#125; else &#123; // 递归函数 return find(n-1)+2; &#125;&#125; 再举个例子，但由于它没有结（di）束（gui）条（chu）件（kou），进入死循环状态，所以是不正确的： 1234int recursion()&#123; recursion();&#125; 3、简单理解：&emsp;&emsp;递归：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门，你继续打开它。若干次之后，你打开面前的门后，发现只有一间屋子，没有门了。然后，你开始原路返回，每走回一间屋子，你数一次，走到入口的时候，你可以回答出你到底用这你把钥匙打开了几扇门。 &emsp;&emsp;循环：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门（若前面两扇门都一样，那么这扇门和前两扇门也一样；如果第二扇门比第一扇门小，那么这扇门也比第二扇门小，你继续打开这扇门，一直这样继续下去直到打开所有的门。但是，入口处的人始终等不到你回去告诉他答案。 4、深入理解&emsp;&emsp;正如上面所描述的场景，那么递归就是有去（递去）有回（归来），归去来兮…… 如下图所示。 &emsp;&emsp;“有去” 是指：递归问题必须可以分解为若干个规模较小，与原问题形式相同的子问题，这些子问题可以用相同的解题思路来解决，就像上面例子中的钥匙可以打开后面所有门上的锁一样。 &emsp;&emsp;“有回” 是指 : 这些问题的演化过程是一个从大到小，由近及远的过程，并且会有一个明确的终点(临界点)，一旦到达了这个临界点，就不用再往更小、更远的地方走下去。最后，从这个临界点开始，原路返回到原点，原问题解决。 归去来兮 函数递归 &emsp;&emsp;此时 我们应该可以理解到 分治策略 的含义了。特别地，在函数实现时，因为解决大问题的方法和解决小问题的方法往往是同一个方法，所以就产生了函数调用它自身的情况，这也正是递归的定义所在。在此再强调一下递归所需的条件，解决问题的函数必须有明确的结束条件，否则就会导致 无限递归 的情况。 5、阶乘理解递归题：用递归的方法求 n！？ 分析：举个例子算5！：&emsp;&emsp;&emsp;那么 5！= 4！x 5， 而 4！= 3！ x 4， 而 3！= 2！x 1， 而 2！= 1！ x 1，而 1！= 1，则可用下面递归公式表示： &emsp;&emsp;&emsp;n = 1&emsp;&emsp;&emsp;&emsp;&emsp;（n = 0 || 1）&emsp;&emsp;&emsp;n x（n - 1）！&emsp;（n &gt; 1） 当然这道题可以用递推法（迭代法）解决，个人感觉递归法属于递推法的反推算法，也不知道理解的对不对！ 代码实现如下（C语言）： 12345678910111213141516171819202122232425262728293031323334#include &lt;stdio.h&gt;long recursion(int n);void main()&#123; int n; long result; printf( "input a integer number: " ); scanf( "%d", &amp;n ); result = recursion(n); printf( "%d! = %ld\n", n, result );&#125;long recursion(int n)&#123; long temp_result; if( n &lt; 0 ) &#123; printf( "n &lt; 0, input error!\n" ); &#125; else if( n == 0 || n == 1 ) &#123; temp_result = 1; &#125; else &#123; temp_result = recursion(n - 1) * n; &#125; return temp_result;&#125; 阶乘递归 二、汉诺（Hanoi）塔问题汉诺塔问题 由图可知： 1、要求： 将A中的圆盘借助B圆盘完全移动到C圆盘上； 每次只能移动一个圆盘； 并且每次移动时大盘不能放在小盘上面。 2、递归函数的伪算法为如下: 123456if(n == 1) 直接将 A柱上的圆盘从 A柱 移到 C柱;else 先将 A柱上的 （n-1） 个圆盘借助 C柱 移到 B柱; 再将 A柱上的第 n 个圆盘移到 C柱; 最后将 B柱上的 （n-1） 个圆盘借助 A柱 移到 C柱; 该递归算法的时间复杂度为 O（2的n次方），当有 n 个圆盘时，需要移动圆盘（2的n次方-1）次。 汉诺塔分析 为了更好理解汉诺塔问题实现的过程，以下列出 4 种不同层次的汉诺塔实现步骤的 GIF图以更快寻求到其中的规律（想要自己玩的小伙伴 4399小游戏 了解一下）： 三层汉诺塔实现步骤（一共移动 7 次）：三层汉诺塔四层汉诺塔实现步骤（一共移动 15 次）：四层汉诺塔五层汉诺塔实现步骤（一共移动 31 次）：五层汉诺塔六层汉诺塔实现步骤（一共移动 63 次）：六层汉诺塔 代码实现如下（C语言）： 1234567891011121314151617181920212223#include&lt;stdio.h&gt;void move(int n, char A, char B, char C)&#123; if( n == 1 ) &#123; printf( "圆盘 %d ：%c -&gt; %c\n", n, A, C ); // 当n只有1个的时候直接从a移动到c &#125; else &#123; move( n-1, A, C, B ); // 把a的n-1个盘子通过c移动到b printf( "圆盘 %d ：%c -&gt; %c\n", n, A, C ); // 把a的最后1个盘(最大的盘)移动到c move( n-1, B, A, C ); // 吧b上面的n-1个盘通过a移动到c &#125; &#125;void main()&#123; int n; printf( "请输入要移动的圆盘个数：" ); scanf( "%d", &amp;n ); move( n, 'A', 'B', 'C' );&#125; 代码实现 感谢：算法设计方法：递归的内涵与经典应用 —— 书呆子Rico浅析递归算法 —— 风也醉]]></content>
      <categories>
        <category>algorithm</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[扩展运算符（...）]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F24%2Fextension-operator%2F</url>
    <content type="text"><![CDATA[一、前言拓展运算符，是 es6一个很好的特性，它们可以通过减少赋值语句的使用，或者减少通过下标访问数组或对象的方式，使代码更加简洁优雅，可读性更佳。下面我将列出拓展运算符的主要应用场景，以及相关知识。 二、应用1、在函数调用时使用拓展运算符以前如果我们想将数组元素迭代为函数参数使用，一般使用 Function.prototype.apply 的方式： 12345function myFunction(x, y, z) &#123; console.log(x+""+y+""+z);&#125; var args = [0, 1, 2]; myFunction.apply(null, args); 有了展开语法，我们可以这样写： 123456function myFunction(x, y, z) &#123; console.log(x+""+y+""+z); &#125; var args = [0, 1, 2]; myFunction(...args); 提示：...arr 返回的并不是一个数组，而是各个数组的值。只有 [...arr] 才是一个数组，所以 ...arr 可以用来对方法进行传值。 2、数组和对象的拷贝1234567var arr1 = [1,2,3];var arr2 = [...arr1];arr2.push(4);console.log(arr1 === arr2); // falseconsole.log(arr1); // [1,2,3]console.log(arr2);// [1,2,3,4] 对象也是一样，也可以使用拓展运算符： 1234567var obj1 = &#123; a:1, b:2&#125;;var obj2 = &#123;...obj1&#125;;console.log(obj2); //&#123; a:1, b:2&#125;console.log(obj1 === obj2);// false 提示：在这里你会发现，这是一个深拷贝，其实不然，实际上, 展开语法和 Object.assign() 行为一致, 执行的都是浅拷贝（只遍历一层）。 3、构造字面量数组没有展开语法的时候，只能组合使用 push splice concat 等方法，来将已有数组元素变成新数组的一部分： 1234var arr1 = [1,2,3];var arr2 = [4,5,...arr1];console.log(arr2);// [4,5,1,2,3] 代替 Array.concat 函数： 12345var arr1 = [1,2,3];var arr2 = [4,5,6];var demo = [...arr1,...arr2];console.log(demo);// [1, 2, 3, 4, 5, 6] 代替 Array.unshift 方法： 12345var arr1 = [1,2,3];var arr2 = [4,5,6];arr1 = [...arr2,...arr1];console.log(arr1);// [4, 5, 6, 1, 2, 3] 4、字符串转数组1234var demo = "hello"var str = [...demo];console.log(str);// ["h", "e", "l", "l", "o"] 剩余语法（剩余参数，rest运算符）剩余语法(Rest syntax) 看起来和展开语法完全相同，不同点在于, 剩余参数用于解构数组和对象。从某种意义上说，剩余语法与展开语法是相反的：展开语法将数组展开为其中的各个元素，而剩余语法则是将多个元素收集起来并 “凝聚” 为单个元素。 1、主要用于不定参数，所以 es6开始不再使用 arguments对象： 123456789var demo = function (...arg)&#123; for (let item of arg)&#123; console.log(item); &#125;&#125;demo(1,2,3);// 1// 2// 3 1234567var demo = function (a,...arg)&#123; console.log(a); console.log(arg);&#125;demo(1,2,3,4);// 1// [2, 3, 4] 2、配合解构一起使用： 12345var [a,...rest] = [1,2,3,4];console.log(a);console.log(rest);// 1// [2,3,4] 12345678910var obj = &#123; a:1, b:2, c:3&#125;var &#123;a,...demo&#125; = obj;console.log(a);console.log(demo);// 1// &#123;b:2,c:3&#125; 12345678function f(...[a, b, c]) &#123; console.log(a); return a + b + c;&#125;console.log(f(1)) //1, NaN console.log(f(1, 2, 3)) // 1, 6console.log(f(1, 2, 3, 4)) //1, 6 三、小结等号表达式是典型的赋值形式，函数传参和 for循环的变量都是特殊形式的赋值。解构的原理是赋值的两边具有相同的结构，就可以正确取出数组或对象里面的元素或属性值，省略了使用下标逐个赋值的麻烦。对于三个点号，三点放在形参或者等号左边为 rest运算符; 放在实参或者等号右边为 spread运算符，或者说，放在被赋值一方为 rest运算符，放在赋值一方为扩展运算符。 转自原文：Js es6中扩展运算符（…） —— fly63前端网]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[call、apply、bind 了解一下？]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F23%2Fcall%2F</url>
    <content type="text"><![CDATA[一、作用：call apply bind ：用来改变函数调用的 this 指向。 二、实例：1234567891011121314151617181920212223242526272829303132333435// 有只猫叫小黑，小黑会吃鱼const cat = &#123; name: '小黑', eatFish(...args) &#123; console.log('this指向=&gt;', this); console.log('...args', args); console.log(this.name + '吃鱼'); &#125;,&#125;// 有只狗叫大毛，大毛会吃骨头const dog = &#123; name: '大毛', eatBone(...args) &#123; console.log('this指向=&gt;', this); console.log('...args', args); console.log(this.name + '吃骨头'); &#125;,&#125;console.log('=================== call =========================');// 有一天大毛想吃鱼了，可是它不知道怎么吃。怎么办？小黑说我吃的时候喂你吃cat.eatFish.call(dog, '汪汪汪', 'call')// 大毛为了表示感谢，决定下次吃骨头的时候也喂小黑吃dog.eatBone.call(cat, '喵喵喵', 'call')console.log('=================== apply =========================');cat.eatFish.apply(dog, ['汪汪汪', 'apply'])dog.eatBone.apply(cat, ['喵喵喵', 'apply'])console.log('=================== bind =========================');// 有一天他们觉得每次吃的时候再喂太麻烦了。干脆直接教对方怎么吃const test1 = cat.eatFish.bind(dog, '汪汪汪', 'bind')const test2 = dog.eatBone.bind(cat, '喵喵喵', 'bind')test1()test2() 控制台结果 ★ 上述例子可看出：（1）call 跟 apply 的用法几乎一样，唯一的不同就是传递的参数不同，call 只能一个参数一个参数的传入。（2）apply 则只支持传入一个数组，哪怕是一个参数也要是数组形式。最终调用函数时候这个数组会拆成一个个参数分别传入。（3）至于 bind 方法，他是直接改变这个函数的 this 指向并且返回一个新的函数，之后再次调用这个函数的时候 this 都是指向 bind 绑定的第一个参数。bind 传餐方式跟 call方法一致。 由于 apply 函数传参的特殊性，我们又衍生出了一个黑魔法。 1234567// 如果一个数组我们已知里面全都是数字，想要知道最大的那个数，由于Array没有max方法，Math对象上有// 我们可以根据apply传递参数的特性将这个数组当成参数传入// 最终Math.max函数调用的时候会将apply的数组里面的参数一个一个传入，恰好符合Math.max的参数传递方式// 这样变相的实现了数组的max方法。min方法也同理const arr = [1,2,3,4,5,6]const max = Math.max.apply(null, arr)console.log(max) // 6 这里 bind 函数也有一个小技巧： 12345// 如果你想将某个函数绑定新的`this`指向并且固定先传入几个变量可以在绑定的时候就传入，之后调用新函数传入的参数都会排在之后const obj = &#123;&#125;function test(...args) &#123;console.log(args)&#125;const newFn = test.bind(obj, '静态参数1', '静态参数2')newFn('动态参数3', '动态参数4') 控制台结果 三、MDN 文档介绍1、call 语法 fun.call(thisArg, arg1, arg2, ...) thisArg：在 fun 函数运行时指定的 this 值。需要注意的是，指定的 this 值并不一定是该函数执行时真正的 this 值，如果这个函数处于非严格模式下，则指定为 null 和 undefined 的 this 值会自动指向全局对象(浏览器中就是 window 对象)，同时值为原始值(数字，字符串，布尔值)的 this 会指向该原始值的自动包装对象。 arg1, arg2, ... 指定的参数列表 2、apply 语法 fun.apply(thisArg, [argsArray]) thisArg 在 fun 函数运行时指定的 this 值。需要注意的是，指定的 this 值并不一定是该函数执行时真正的 this 值，如果这个函数处于非严格模式下，则指定为 null 或 undefined 时会自动指向全局对象（浏览器中就是 window 对象），同时值为原始值（数字，字符串，布尔值）的 this 会指向该原始值的自动包装对象。 argsArray 一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 fun 函数。如果该参数的值为null 或 undefined，则表示不需要传入任何参数。从ECMAScript 5 开始可以使用类数组对象。 3、bind 语法 fun.bind(thisArg[, arg1[, arg2[, ...]]]) thisArg 当绑定函数被调用时，该参数会作为原函数运行时的 this 指向。当使用new 操作符调用绑定函数时，该参数无效。 arg1, arg2, ... 当绑定函数被调用时，这些参数将置于实参之前传递给被绑定的方法。 四、总结1、当我们使用一个函数需要改变 this 指向的时候才会用到 call apply bind 2、如果你要传递的参数不多，则可以使用 fn.call(thisObj, arg1, arg2 ...) 3、如果你要传递的参数很多，则可以用数组将参数整理好调用 fn.apply(thisObj, [arg1, arg2 ...]) 4、如果你想生成一个新的函数长期绑定某个函数给某个对象使用，则可以使用 const newFn = fn.bind(thisObj); newFn(arg1, arg2...) 转自原文：聊一聊call、apply、bind的区别 —— Frank_Lin]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[箭头函数]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F22%2FarrowFunc%2F</url>
    <content type="text"><![CDATA[一、码上看懂 =&gt;1、对比一下，看看省了啥、多了啥：es5 函数 12345var f = function () &#123; console.log("function"); return 'value';&#125;f(); es6 箭头函数 12345var arrow_f = () =&gt; &#123; console.log("arrow function"); return 'value';&#125;arrow_f(); 2、只有一个参数时可以省略 () ：es5 函数（带参数） 1234var f = function (v) &#123; console.log(v);&#125;f("function"); es6 箭头函数（带参数） 1234var arrow_f = v =&gt; &#123; console.log(v);&#125;arrow_f("arrow function"); 3、只有一条语句的时候可以省略 {}、return ：es5 函数返回参数 123var f = function (v) &#123; return v;&#125; es6 箭头函数返参 1var arrow_f = v =&gt; v; 4、返回一个对象的时候用 () 包起对象：es5 函数 123456var f = function () &#123; return &#123; name: '韩梅梅', age: 18 &#125;&#125; es6 箭头函数 1234var arrow_f = () =&gt; (&#123; name: '韩梅梅', age: 18&#125;) 注意：参数和箭头之间不能换行。 二、demo 操作：1、重复命名函数：12345678910&lt;body&gt; &lt;script&gt; function fun1(a, a) &#123; console.log(arguments, a); &#125; var arrow = (a, a) =&gt; &#123; console.log(a); &#125; &lt;/script&gt;&lt;/body&gt; 2、this指向：1234567891011121314151617&lt;body&gt; &lt;script&gt; const lilei = &#123; msg: '李雷' &#125; var lileiFunc = function () &#123; var arrow_lileiFunc = () =&gt; &#123; console.log(this.msg); &#125; arrow_lileiFunc(); &#125; lileiFunc.call(lilei); var arrow_func_prototype = () =&gt; &#123; consolo.log("1111"); &#125; &lt;/script&gt;&lt;/body&gt; 3、构造函数：123456789101112131415&lt;body&gt; &lt;script&gt; function Person() &#123; if (!new.target) &#123; console.log('只能使用new调用该构造函数'); &#125; console.log(new.target); &#125; function Person1() &#123; console.log(new.target); &#125; Person(); Person1(); &lt;/script&gt;&lt;/body&gt; 4、arguments：123456789&lt;body&gt; &lt;script&gt; (function () &#123; (() =&gt; &#123; console.log(arguments); &#125;)(); &#125;)(1, 2, 3); &lt;/script&gt;&lt;/body&gt; 三、总结 =&gt; es6 箭头函数 和 es5 函数的区别1、箭头函数不支持重复命名形参，普通函数可以； 2、箭头函数不能使用 call、apply 等方法改变 this； 3、箭头函数的 this 指向定义时所处的上下文的 this； 4、箭头函数没有原型对象 .prototype； 5、箭头函数不能做构造函数； 6、箭头函数没有 arguments。 说明：1、所有函数（除了箭头函数）都能用的变量 [arg1,arg2,arg3]2、es6 引进的返回 new 作用的那个构造函数（构造函数中之中）]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dailyBook]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F14%2FdailyBook%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>日记本</category>
      </categories>
      <tags>
        <tag>日记本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[圣杯布局 & 双飞翼布局]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F07%2Flayout%2F</url>
    <content type="text"><![CDATA[一、背景介绍&emsp;&emsp;2006 年 Matthew Levine 在 《A LIST APART》 上发表了一篇名为 《In Search of the Holy Grail》 的文章，提出了 圣杯布局 的思路。利用 负外边距 来实现我们需要的效果，充分体现了 CSS的艺术 与 负外边距 的强大。比起双飞翼布局，它的起源不是源于对页面的形象表达。在西方，圣杯是表达 “渴求之物” 的意思。 &emsp;&emsp;之后 淘宝的UED 为了实现同样的效果提出了 双飞翼布局 的思路，据说是玉伯大大提出的，思路是：middle 是鸟的身体，left 和 right 是鸟的翅膀，先把主要的东西 middle 放好，再将翅膀移到合适的位置。双飞翼布局同样也使用了 负外边距 来移动侧栏从而达到目的。 &emsp;&emsp;圣杯布局 与 双飞翼布局的实现，目的都在于：固定左右两栏宽度，中间内容自适应 来实现 三栏式布局。圣杯布局和双飞翼布局有着相似的思路，但是在某些细节上有着不同之处。 二、相同点：1、两侧宽度固定，中间宽度自适应；2、中间部分在 DOM结构上优先，以便先行渲染；3、允许三列中的任意一列成为最高列；4、只需要使用一个额外的 &lt;div&gt; 标签； 三、圣杯布局优点：不需要添加 DOM节点；缺点：中间部分的宽小于左侧部分时就会发生布局混乱，即某一列内容若过多，文字会溢出（middle&lt;left即会变形）。解决方法：等高布局；最小宽度问题：min-width:600px。 1、DOM 结构123456789&lt;body&gt; &lt;header&gt;header&lt;/header&gt; &lt;div class="main"&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt; &lt;/div&gt; &lt;footer&gt;footer&lt;/footer&gt;&lt;/body&gt; 首先设置出整个布局的 DOM结构，主体部分是由 main 包裹的 content、left、right 三个盒子容器，其中 content 优先在最前面。 2、CSS 修饰123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;style&gt; * &#123; margin: 0; padding: 0; &#125; header&#123; width: 100%; height: 20px; background: #999; text-align: center; &#125; footer&#123; width: 100%; height: 20px; background: #555; text-align: center; &#125; .main &#123; width: 500px; height: 300px; background: #ddd; margin: 0 auto; padding-left: 200px; padding-right: 300px; &#125; .middle &#123; width: 100%; height: 100%; background: green; float: left; &#125; .left &#123; width: 200px; height: 100%; background: red; float: left; /* 浮动自身，向上移动一行 */ margin-left: -100%; /* 自身定位 */ position: relative; top: 0; left: -200px; &#125; .right &#123; width: 300px; height: 100%; background: blue; float: left; /* 属性为自身的宽度，上一行的行尾 */ margin-left: -300px; /* 自身定位 */ position: relative; top: 0; right: -300px; &#125;&lt;/style&gt; 圣杯布局 圣杯布局：借助的是其他非主要元素覆盖了其父元素的 padding 值所占据的宽度，同一个杯子，非主要元素其只是占据了全部容器的 padding 值部分。 四、双飞翼布局优点：不会像圣杯布局那样变形；缺点：多加了一层 DOM节点。 1、DOM 结构1234567891011&lt;body&gt; &lt;header&gt;header&lt;/header&gt; &lt;div class="main"&gt; &lt;div class="content"&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;/div&gt; &lt;div class="left"&gt;left&lt;/div&gt; &lt;div class="right"&gt;right&lt;/div&gt; &lt;/div&gt; &lt;footer&gt;footer&lt;/footer&gt;&lt;/body&gt; 这里的 DOM结构与圣杯布局有稍许出入，在 middle 外添加了了一个 content 盒子容器包裹。 2、CSS 修饰1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;style&gt; * &#123; margin: 0; padding: 0; &#125; header&#123; width: 100%; height: 20px; background: #999; text-align: center; &#125; footer&#123; width: 100%; height: 20px; background: #555; text-align: center; &#125; .main &#123; width: 1200px; height: 300px; background: #ddd; margin: 0 auto; &#125; .middle &#123; height: 100%; margin-left: 200px; margin-right: 300px; background: pink; &#125; .content &#123; width: 100%; height: 100%; background: green; float: left; &#125; .left &#123; width: 200px; height: 100%; background: red; float: left; margin-left: -100%; &#125; .right &#123; width: 300px; height: 100%; background: blue; float: left; margin-left: -300px; &#125;&lt;/style&gt; 双飞翼布局 双飞翼布局：给 middle 添加一个外层元素 content，left、right 元素所占据的空间是 middle 的 margin空间，像鸟的两个翅膀，与内容部分 content 脱离。 五、总结这里有几点需要留意：1、先写 middle，然后是 left 和 right，因为需要先渲染 middle；2、left、right 需设置 position:relative 以及相应的 left、right 值；3、理解 负边距 的作用，left 的 margin-left:-100% 使它上移一行，同时 right 向左移占据 left 原先位置；同理，right 的 margin-left:-300px 使它上移并靠右。 布局 优点 缺点 圣杯 结构简单，无多余 DOM元素 中间部分的宽度小于左侧时发生布局混乱 双飞翼 支持各种宽高变化，通用性强 DOM结构增多，增加渲染树生成的计算量 感谢：1、圣杯布局和双飞翼布局（前端面试必看） —— 森西悠然2、圣杯布局和双飞翼布局的作用和区别 —— 暖风3、超经典面试题：用多种方法实现圣杯布局和双飞翼布局 —— mytac4、圣杯布局，双飞翼布局及其优缺点 —— DOM曼珠沙华]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的浮动和清除浮动]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F06%2FclearFloat%2F</url>
    <content type="text"><![CDATA[一、浮动…？1、定义：(1) W3C 定义：CSS float 属性定义元素在哪个方向浮动，浮动元素会生成一个块级框，直到该块级框的外边缘碰到包含框或者其他的浮动框为止。(2) MDN 定义：float CSS 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动(文档流)中移除，尽管仍然保持部分的流动性（与绝对定位相反）。(3) 浮动的核心总结为一句话：浮动元素会脱离文档流并向左/向右浮动，直到碰到父元素或者另一个浮动元素！ 2、浮动的特征：(1) 浮动会脱离文档流；(2) 浮动可以内联排列；(3) 浮动会导致父元素高度坍塌。 3、示例：设一个 宽700px 的黑色边框父级元素盒子，里面设置三个 大、中、小 子级元素盒子： 123456789101112131415161718192021222324&lt;style&gt; .container &#123; width: 700px; border: 2px solid #000; &#125; .small &#123; height: 100px; width: 100px; background: red; /* float:left; */ &#125; .middle &#123; height: 100px; width: 200px; background: blue; /* float:left; */ &#125; .large &#123; height: 100px; width: 300px; background: green; /* float:left; */ &#125; &lt;/style&gt; 1234567&lt;body&gt; &lt;div class="container"&gt; &lt;div class="small"&gt;small&lt;/div&gt; &lt;div class="middle"&gt;middle&lt;/div&gt; &lt;div class="large"&gt;large&lt;/div&gt; &lt;/div&gt;&lt;/body&gt; 子元素未浮动时，它们会默认撑开父元素的高度： 子盒子未浮动时 子元素添加浮动后，子元素脱离文档流，无法撑起父元素，导致父元素高度塌陷： 子盒子浮动时 那么接下来就是重点了，造成这种情况，我们就得去解决这种不正常的情况 —— 清除浮动！ 二、清除浮动…？1、清除浮动的原因：清除浮动主要是为了解决 子元素浮动 导致 父元素内部高度为 0 （即高度塌陷）的问题。 2、清除浮动的方法：(1) 给浮动元素的容器添加浮动（推荐指数：★）给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，不推荐使用。 (2) 添加新标签（推荐指数：★★）在最后一个浮动标签后新加一个标签，给其设置 clear：both;核心要点：clear 属性不允许被清除浮动的元素的左边/右边挨着浮动元素，底层原理是在被清除浮动的元素上边或者下边添加足够的清除空间。（注意：我们是通过在别的元素上清除浮动来实现撑开高度的， 而不是在浮动元素上。） 123456&lt;div class="container"&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div class="box"&gt;&lt;/div&gt; &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;/div&gt; ✦ 优点：简单方便，通俗易懂，浏览器兼容性好。✦ 缺点：需要添加大量无语义标签，后期不易维护。 (3) 创建 BFC（推荐指数：★★★）A、给父元素 设置宽高【不推荐】：副作用：父元素宽高写死了，不能根据子元素自动调节。 B、给父元素也 添加浮动【不推荐】：副作用：父元素脱离文档流，父元素的宽度会丢失，且会导致下边的元素上移，不能解决问题。 C、给父元素添加 display:inline-block【不推荐】：副作用：可以解决问题，但会导致宽度丢失。 D、☆ 设置 overflow 属性【常见，副作用最小】：overflow 设置为 非visible 的值。推荐使用 hidden 兼容IE（副作用最小 - 局限在元素阴影或下拉菜单会被截断）。a) auto （溢出显示滚动条）；b) scroll （默认就显示滚动条）；c) hidden （溢出隐藏）[常用]。 ✦ 优点：代码简洁。✦ 缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素。 注：这种方式不兼容 IE6。在 IE6 中有类似 BFC 的隐含属性 hasLayout，开启方式很多，推荐使用 zoom:1。 (4) :after 伪元素清除浮动（推荐指数：★★★★★）结合 :after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。给浮动元素的容器添加一个 clearfix 的class，然后给这个class 添加一个 :after 伪元素实现元素末尾添加一个看不见的 块元素（Block element）清理浮动。 1234567891011121314151617181920212223242526272829303132// 现代浏览器clearfix方案，不支持IE6/7.clearfix:after &#123; display: table; content: " "; clear: both;&#125;// 全浏览器通用的clearfix方案// 引入了zoom以支持IE6/7.clearfix:after &#123; display: table; content: " "; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125;// 全浏览器通用的clearfix方案【强力推荐】// 引入了zoom以支持IE6/7// 同时加入:before以解决现代浏览器上边距折叠的问题.clearfix:before,.clearfix:after &#123; display: table; content: " ";&#125;.clearfix:after &#123; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125; 通过 CSS伪元素在容器的内部元素最后添加了一个看不见的 空格 &quot;020&quot; 或 点 &quot;.&quot;，并且赋予 clear 属性来清除浮动。需要注意的是为了 IE6 和 IE7 浏览器，要给 clearfix 这个 class 添加一条 zoom:1; 触发 haslayout。 ✦ 优点：符合闭合浮动思想，结构语义化正确。✦ 缺点：IE6-7 不支持伪元素 :after，使用 zoom:1 触发 hasLayout。 (5) :before 和 :after 双伪元素清除浮动（推荐指数：★★★★★） 12345678910.clearfix:after,.clearfix:before&#123; content: ""; display: table;&#125;.clearfix:after&#123; clear: both;&#125;.clearfix&#123; *zoom: 1;&#125; 1234&lt;div class="fahter clearfix"&gt; &lt;div class="big"&gt;big&lt;/div&gt; &lt;div class="small"&gt;small&lt;/div&gt;&lt;/div&gt; ✦ 优点：代码更简洁。✦ 缺点：用 zoom:1 触发 hasLayout。 三、浮动的适用场景1、文字环绕效果：文字环绕效果 2、页面布局：浮动可以实现常规的多列布局，但个人推荐使用 inline-block。浮动更适合实现自适应多列布局，比如左侧固定宽度，右侧根据父元素宽度自适应。 页面布局 3、多个元素内联排列：如前文提到的，浮动可以实现类似 inline-block 的排列，比如菜单多个元素内联排列。但个人推荐使用 inline-block。 多个元素内联排列 四、总结 学习浮动的定义及其特征。 掌握 5种清除浮动的方法。 了解浮动的适用场景。 感谢：1、CSS中的浮动和清除浮动，梳理一下！ —— 齐修_qixiuss2、CSS清除浮动方法总结 —— Damonare3、清除浮动的最常用的四种方法，以及优缺点 —— h_qingyi]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的伪类和伪元素]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F05%2FfakeClass%2F</url>
    <content type="text"><![CDATA[一、介绍：1、为什么用 伪类 和 伪元素是为了格式化文档树以外的信息，也就是说，伪类 和 伪元素 是用来修饰不在文档树中的部分。比如一句话中的第一个字母，或者是列表中的第一个元素。 2、伪类CSS 伪类（Pseudo-classes）是一个选择器，用于 已有元素 处于某种状态时为其添加对应的样式，这个状态是 根据用户行为而动态变化的。由此可以看出，其功能和 class 有些类似，但它是基于文档之外的抽象，只有处于 DOM树无法描述的状态下才能为元素添加样式，所以叫伪类。例如，:hover 可被用于在用户将鼠标悬停在按钮上时改变按钮的颜色。 3、伪元素CSS 伪元素 是用来添加一些选择器的特殊效果，其控制的内容和 元素是没有差别的，但是它本身只是基于元素的抽象。它就像是在标记中添加了一个 不存在于 DOM文档中 的全新的HTML元素，所以称为伪元素。例如，我们可以通过 :before 来在一个元素之前添加一些文本，并为这些文本添加样式。 二、伪类和伪元素的区别1、相同之处：伪类 和 伪元素 都不存在于源文件和文档树中。 2、不同之处：伪类：是基于普通 DOM元素而产生的不同状态，他是 DOM元素的某一特征。伪元素：能够创建在 DOM树中不存在的抽象对象，而且这些抽象对象是能够访问到的。也就是说，伪元素 产生新对象，在 DOM中看不到但可以操作；伪类 不产生新对象，仅是 DOM中一个元素的不同状态。 (1) 伪类 示例说明： 1234&lt;ul&gt; &lt;li&gt;第一列&lt;/li&gt; &lt;li&gt;第二列&lt;/li&gt;&lt;/ul&gt; 如果我们想要给第一列添加样式，可以有以下方法： 方法A、给第一列添加一个类，并在该类中定义样式： 123456&lt;ul&gt; &lt;li class="first-item"&gt;第一列&lt;/li&gt; &lt;li&gt;第二列&lt;/li&gt;&lt;/ul&gt;.first-item&#123;color:orange;&#125; 方法B、给第一个 &lt;li&gt; 设置 :first-child 伪类 来为其添加样式： 123456&lt;ul&gt; &lt;li&gt;第一个&lt;/li&gt; &lt;li&gt;第二个&lt;/li&gt;&lt;/ul&gt;li:first-child&#123;color:orage;&#125; 此时被修饰的 &lt;li&gt; 依然存在于DOM树中。 (2) 伪元素 示例说明： 123&lt;p&gt; Hello World&lt;/p&gt; 想要给该段落第一个字母添加样式，可以有以下方法： 方法A、給第一个字母包裹 &lt;span&gt; 元素并设置样式： 12345&lt;p&gt; &lt;span class="first"&gt;H&lt;/span&gt;ello World&lt;/p&gt;.first&#123;color:red;&#125; 方法B、给 &lt;p&gt;元素设置 P:first-letter 伪元素 为其添加样式： 12345&lt;p&gt; Hello World&lt;/p&gt;p:first-letter&#123;color:red;&#125; 这时看起来像创建了一个虚拟的 span元素 并为其添加样式，但实际上在 DOM树中并不存在这个 span元素。 从上述例子中我们可以看出：伪类的操作对象是文档树中已有的元素，而伪元素则创建了一个文档树外的元素。因此，伪类与伪元素的区别在于：有没有创建一个文档树之外的元素。 3、伪元素使用单冒号还是双冒号？&emsp;&emsp;CSS3规范中要求 使用双冒号（::）表示 伪元素，以此来区分伪类和伪元素，比如 ::before 和 ::after 等伪元素使用双冒号（::），:hover 和:active 伪类使用单冒号（:）。除了一些低于IE8版本的浏览器外，大部分浏览器都支持伪元素的双冒号（::）表示方法。&emsp;&emsp;然而除了少部分伪元素如 ::backdrop 必须使用双冒号（::），大部分伪元素都支持单冒号和双冒号的写法，比如 ::after，写成 :after 一样可以正常运行。&emsp;&emsp;W3C标准中说到，虽然CSS3标准要求伪元素使用双冒号的写法，但也依然支持单冒号的写法。为了向后兼容，我们建议你在目前还是使用 单冒号 的写法。 三、主要用法1、常用的 伪类 和 伪元素：伪类的分类及作用 伪元素的分类及作用 2、详细参见：MDN 标准伪类索引：MDN 标准伪类索引 MDN 标准伪元素索引：MDN 标准伪元素索引 感谢：1、伪类与伪元素的区别和用法 —— 爽朗琴天2、CSS中伪类及伪元素用法详解 —— 路修远而求索]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 属性：box-sizing]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F04%2Fbox-sizing%2F</url>
    <content type="text"><![CDATA[一、先了解盒模型由于涉及到盒子的计算方式，所以在学习 box-sizing 这个属性前，我们先了解一下 盒模型（Box Model）。什么是 盒模型？根据 W3C 给出的解释：对一个网页来说，基本上页面上所有的元素对象，其实际的呈现形式都是一个盒子形状的抽象。如下图： 盒模型 从图中可以看出，这个所谓的盒子其实就一个长方形（或者正方形）的抽象。从外到内，他由4层东西组成，分别是margin，border，padding，content。他们的结构特征是一层包裹着一层。 Margin（外边距） - 清除边框区域。Margin没有背景颜色，它是完全透明的； Border（边框） - 边框周围的填充和内容。边框是受到盒子的背景颜色影响； Padding（内边距） - 清除内容周围的区域。会受到框中填充的背景颜色影响； Content（内容） - 盒子的内容，显示文本和图像。 二、两种不兼容的盒模型对盒模型有了了解之后，我们就需要知道两种不一样的盒模型： W3C 标准盒模型 IE 盒模型 通过对这两个盒模型的了解后，我们便明白 box-sizing 产生的原因了。 1、W3C 标准盒模型： 标准盒模型 &emsp;&emsp;标准盒模型中 content内容 的大小就是 width 和 height 的值。整个盒子实际占用的空间是 width + padding + border + margin。举个栗子，盒子的样式属性如下： 1234567891011121314&lt;style&gt; .box &#123; width: 20px; padding-left: 1px; padding-right: 2px; border-left: 3px; border-right: 4px; margin-left: 5px; margin-right: 6px; &#125;&lt;/style&gt;&lt;body&gt; &lt;div class="box"&gt;&lt;/div&gt;&lt;/body&gt; 那么整个 div盒子 在页面中占用的 宽度 就是 20 + 1 + 2 + 3 + 4 + 5 + 6 = 41px。 2、IE 盒模型： IE盒模型 &emsp;&emsp;通过图片对比盒子宽高，可得出结论，IE 盒模型与标准盒模型的 核心差异 在于：IE盒模型的 content 部分包含了 border 和 padding。&emsp;&emsp;这种情况下，padding 和 border 反占了一部分的 width 和 height，也就是说实际上 内容区域 呈现的 真实内容 所占的空间变小了。以宽为例，真实内容的宽度为 width - border - padding。&emsp;&emsp;那么此时 内容区域 的宽便是 width - border - padding + border + padding = width。所以整个盒子实际占用的空间就是 content + margin。还是上面那个栗子，在IE 盒模型下它的实际占宽就是 （20 - 1 - 2 - 3 - 4） + 1 + 2 + 3 + 4 + 5 + 6 = 20 + 5 + 6 = 31px。 ★ 那么就是因为存在着这两种不同的盒模型，要是没有对网页的文档进行类型声明（html5 声明的文档 默认用 W3C标准来渲染页面），各个浏览器会按照自己的标准去使用不同的盒模型渲染。这里说的就是 IE浏览器最为鹤立鸡群。那么这里我们就需要用到 css中的 box-sizing 属性来解决这种 不同浏览器执行不同的盒模型导致的渲染方式不一 的情况。 三、box-sizingbox-sizing 是 CSS3 的 Box Model（盒模型）属性之一。 box-sizing 属性允许你以特定的方式定义匹配某个区域的特定元素。其语法如下： box-sizing: content-box | border-box | inherit 值 描述 说明 content-box 这是由 CSS2.1 规定的宽度高度行为。宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框 此值为其默认值，其让元素维持W3C的标准盒模型 border-box 为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度 此值让元素维持IE传统的Box Model（IE6以下版本） inherit 规定应从父元素继承 box-sizing 属性的值 —— box-sizing 属性现代浏览器都支持，但IE家族只有 IE8版本以上才支持，虽然现代浏览器支持 box-sizing，但有些浏览器还是需要加上自己的前缀。 box-sizing 使用场景1、特殊场景的布局：&emsp;&emsp;假设我们有这样的一个场景，设置子类元素的 margin 或者 border 时，可能会撑破父层元素的尺寸，这时我就需要使用 box-sizing: border-box 来将 border 包含进元素的尺寸中，这样就不会存在撑破父层元素的情况了。 2、统一风格的表单元素：&emsp;&emsp;表单中有一些 input元素其实还是展现的是传统 IE盒模型，带有一些默认的样式，而且在不同平台或者浏览器下的表现不一，造成了表单展现的差异。此时我们可以通过 box-sizing 属性来构建一个风格统一的表单元素。 感谢：W3Cschool]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BFC 和 IFC]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F02%2FBFC%2F</url>
    <content type="text"><![CDATA[一、前言学习 BFC 之前，先简单了解一下 普通流（normal flow，也称文档流）。普通流 就是将窗体自上而下分成一行一行，块级元素从上至下、行内元素从左至右 地依次排放元素的过程。那么普通流是怎么样把页面布局呈现的呢？常见的就是通过 BFC 和 IFC。 二、BFC（块级格式化上下文）1、MDN 定义：&emsp;&emsp;块格式化上下文（Block Formatting Context，BFC），是Web页面的可视化CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。 2、创建条件：&emsp;&emsp;(1) ★ 根元素 HTML&emsp;&emsp;(2) ★ 浮动元素（元素的 float 不是 none）&emsp;&emsp;(3) ★ 绝对定位元素（元素的 position 为 absolute 或 fixed）&emsp;&emsp;(4) ★ 行内块元素（元素的 display 为 inline-block）&emsp;&emsp;(5) ★ 表格单元格（元素的 display为 table-cell，HTML表格单元格默认为该值）&emsp;&emsp;(6) 表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）&emsp;&emsp;(7) 匿名表格单元格元素（元素的 display为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是 HTML table、row、tbody、thead、tfoot的默认属性）或 inline-table）&emsp;&emsp;(8) ★ overflow 值不为 visible 的块元素&emsp;&emsp;(9) display 值为 flow-root 的元素&emsp;&emsp;(10) contain 值为 layout、content或 paint 的元素&emsp;&emsp;(11) ★ 弹性元素（display为 flex 或 inline-flex元素的直接子元素）&emsp;&emsp;(12) 网格元素（display为 grid 或 inline-grid 元素的直接子元素）&emsp;&emsp;(13) 多列容器（元素的 column-count 或 column-width 不为 auto，包括 column-count 为 1）&emsp;&emsp;(14) column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中。 3、渲染规则：&emsp;&emsp;(1) 在正常的文档流中，块级元素是按照 从上自下 排列的。如果我给里面的元素一个 float 或者绝对定位，它就会脱离普通文档流；&emsp;&emsp;(2) BFC 在页面上是一个 独立的容器，最显著的效果就是建立一个隔绝的空间，外面的元素不会影响BFC里面的元素，反之，里面的元素也不会影响外面的元素；&emsp;&emsp;(3) BFC 的区域 不会 与浮动元素的盒子重叠；&emsp;&emsp;(4) ★ 垂直方向 上的外边距会发生边距折叠（包括父子元素和兄弟元素），水平方向 不会发生边距折叠。 4、作用：&emsp;&emsp;(1) 解决边距重叠；(2) 清除浮动。 5、示例：&emsp;&emsp;(1) 解决边距重叠：&emsp;&emsp;网页中我放了一个标题 h1 和三个 p 段落，为了更好看清楚边距我都设置了一个红色背景，这里我设置了 p 段落的上下边距为 20px。正常逻辑来讲，line 1 和line 2 之间的间距是 20px + 20px = 40px，可是我们很清楚的发现，line 1 和 line 2 之间、line 2 和 line 3 之间的间距仍是 20px。那么此时就是发生了垂直方向上的边距重叠现象： 为解决这个问题，我们就可以去创建一个 BFC，即创建一个 块级元素上下文的格式环境，如上述创建 BFC 条件中我们利用 (8) 来给我们的 line 1 添加一个父元素盒子，设置 css属性 overflow: hidden，边距重叠问题便解决了，如图所示： &emsp;&emsp;(2) 清除浮动： 1234567891011121314151617&lt;style&gt; .one &#123; /* 在文档流中，标签和文字将 父元素 撑起来了 */ background: pink; /* overflow: hidden; */ &#125; .two &#123; /* 浮动后离开了文档流 */ float: left; &#125; &lt;/style&gt;&lt;body&gt; &lt;div class="one"&gt; &lt;div class="two"&gt;hello world&lt;/div&gt; &lt;/div&gt; 你好世界！&lt;/body&gt; 这里的子元素 “two” 在设置了浮动后，脱离了文档流，父元素 “one” 的内容为空，背景色不见了： 那么此时我们需要去清除浮动，当然清除浮动的方式有很多，这里我们利用创建 BFC 来清除浮动。同样，我们在 浮动元素的父元素 即 “one” 里面添加 overflow: hidden 属性，浮动问题便解决了，效果如图： 【 点 我 了解更多清除浮动的方法】 三、IFC（行内格式化上下文）1、定义：&emsp;&emsp;内联格式化上下文（Inline Formatting Contexts，IFC），是内联元素渲染和排列的规则。 2、创建条件：&emsp;&emsp;当元素的 CSS 属性 display 的计算值为 inline, inline-block 或 inline-table 时，称它为行内级元素，IFC会起作用。 3、渲染规则：&emsp;&emsp;(1) 盒子水平 从左至右 的紧密排列（此时横向的 padding、margin、border 都是有效的）；&emsp;&emsp;(2) 垂直方向的对齐，可能是底部对齐，顶部对齐，或者基线对齐（这个是默认的）；&emsp;&emsp;(3) 一个或者多个 内联盒子（内联元素的盒子（span，strong 等）和 匿名内联盒子（只有文本，没有内联元素包含，自动创建的）合称内联盒子）组成一个 行框，行框的宽度由包含块和出现的浮动决定的；&emsp;&emsp;(4) 当一个行框水平不能容纳内联盒子时，它们将会在垂直方向上产生多个行框且 上下紧密相接，不重叠；&emsp;&emsp;(5) 行框中的内联盒子高度小于行框的高度时，内联盒子垂直方向的对齐方式取决于 vertical-align 属性；&emsp;&emsp;(6) 多个内联盒子的宽度小于包含他们的行框时，他们在水平方向的分布取决于 text-align 属性（默认 left）；&emsp;&emsp;(7) 一般来说，行框的左边界紧挨着包含容器的左边界，行框的右边界紧挨着包含容器的右边界（两个边都紧挨着）。然而，浮动盒子可能存在于 包含边框边界 和行框边界之间。 行框（行盒） 4、作用：&emsp;&emsp;水平居中 —— 当一个 “块” 要在环境中水平居中时，设置其为 inline-block 则会在外层产生 IFC，通过设置父容器 text-align:center 则可以使其水平居中。 5、示例：&emsp;&emsp;(1) 行内盒的高度和宽度设置是无效的，所以他们的高度是有 line-height 决定的。当然，行内盒是可以有外边距、边框和内边距的。&emsp;&emsp;(2) 行内盒根据他的 vertical-align 定位。 inline 的 span 元素和替换元素 img，他们默认是按照基线对齐的（黑色的线），修改这两个元素的 vertical-align： 1234&lt;div&gt; &lt;span style="border:1px solid blue;vertical-align: middle;"&gt;我是span&lt;/span&gt; &lt;img style="border:1px solid red;vertical-align: middle;" src="favicon.ico"&gt;&lt;/div&gt; 我们可以得到： 这样两个元素就居中显示了。 四、总结&emsp;&emsp;BFC，IFC，都是控制元素如何进行布局的。BFC 是应用于块级元素（div、p…）上的规则。IFC 是应用于内联元素（span、em、i…）上的规则。&emsp;&emsp;在文档呈现开始的时候，都会自动创建一个 BFC 和 IFC 来对整个页面进行布局。我们要是没有设置属性去创建新的 BFC 的话，整个文档就这一个 BFC 和 IFC，所有的元素都要使用这个规则。&emsp;&emsp;在普通流中，所有的盒子（不管是内联盒子（内联元素等）还是块级盒子（块级元素等））都要属于一个格式化上下文，不是属于块级格式化上下文就是属于内联格式化上下文，但是不能同时属于两者，块级元素布局遵循块级格式化上下文的规则，内联元素布局遵循内联格式化上下文的规则来进行布局。就是这两个规则使得页面的所有元素有序的布局，才呈现出我们所看到的 web页面。 感谢：1、CSS之BFC（块级格式化上下文） —— todayhappy2、IFC（行内格式化上下文） —— ZYT]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 中的弹性布局]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F02%2Fflex%2F</url>
    <content type="text"><![CDATA[前言Flex（Flexible Box），意为”弹性布局”。“弹性”，顾名思义，就是具有弹簧的特性啦，能够自由的伸缩（有点自适应的意思啦）。 其实 Flex并不是最近才出现的，而是早在十年前它就被提出。2009年，W3C提出了一种新的方案 —— Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。 Flex布局如何使用？任何一个容器都可以指定为 Flex布局 123.box&#123; display: flex;&#125; 行内元素也可以使用Flex布局 123.box&#123; display: inline-flex;&#125; 示例： Flex概念知识采用Flex布局的元素，称为 Flex容器（flex container），简称“容器”。它的所有子元素自动成为容器成员，称为 Flex项目（flex item），简称“项目”。 容器默认存在两根轴： 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 main start，结束位置叫做 main end；交叉轴的开始位置叫做 cross start，结束位置叫做 cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做 main size，占据的交叉轴空间叫做 cross size。 是不是感觉又学到了？概念的东西了解就好了，这个不用记忆，不会跟上学背课文一样，还考试了。 Flex容器属性一、flex-direction：决定项目（item）的排列方向flex-direction 有四个值：1、row（默认值）：主轴为水平方向，起点在左端。2、row-reverse：主轴为水平方向，起点在右端。3、column：主轴为垂直方向，起点在上沿。4、column-reverse：主轴为垂直方向，起点在下沿。 上方那个示例图，我们稍稍变阵一下，主轴设置为垂直方向，就会出现下图布局。 示例： 还可以设置主轴为垂直方向，起点在下沿。 示例： 是不是觉得以后布局就用他（Flex）了？ 二、flex-wrap默认情况下，item 都排在一条线（又称”轴线”）上。flex-wrap 属性定义了，如果一条轴线排不下，item 的换行方式。 示例： flex-wrap 有三个值：1、nowrap（默认）：不换行2、wrap：换行，第一行在上方。3、wrap-reverse：换行，第一行在下方。 示例： 三、flex-flowflex-flow 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为row nowrap。 123.box &#123; flex-flow: &lt;flex-direction&gt; &lt;flex-wrap&gt;;&#125; 示例： 四、justify-content：定义了item在主轴上的对齐方式justify-content 有五个值：1、flex-start（默认值）：左对齐2、flex-end：右对齐3、center： 居中4、space-between：两端对齐，项目之间的间隔都相等。5、space-around：每个item两侧的间隔相等。所以，item之间的间隔比item与边框的间隔大一倍。 示例： 五、align-items：Item在交叉轴上如何对齐1、flex-start：交叉轴的起点对齐。2、flex-end：交叉轴的终点对齐。3、center：交叉轴的中点对齐。 示例： 4、baseline: 项目的第一行文字的基线对齐。 5、stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 六、align-content：多根轴线的对齐方式多根轴线如何出现？宽度超出，换行后就会有多根轴线了。 1、flex-start：与交叉轴的起点对齐。2、flex-end：与交叉轴的终点对齐。3、center：与交叉轴的中点对齐。4、space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。5、space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。6、stretch（默认值）：轴线占满整个交叉轴。 对比一下添加 align-content 和没有 align-content 的区别：示例： 项目(Item)的属性一、orderItem 的排列顺序。数值越小，排列越靠前，默认为0。 示例： 赋予 item，一个排序值，根据这个值进行排序。没有设置值的默认是 0。 二、flex-grow定义 Item的放大比例，默认为 0，即如果存在剩余空间，也不放大。意思就是将 100% 宽 / 高按什么比例分。 举例：如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow属性为 2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。（看上图示例） 三、flex-shrink定义了 Item的缩小比例，默认为 1，即如果空间不足，该 Item将缩小 看上图：3个 item的宽度和：100+200+200=500px，超出了 box（400px）的宽度（超出了100px的宽），这时候 item1 / item2都设置了 flex-shrink 为 0，而 item3 设置了 flex-shrink 为 1，所以，宽度不够时，item3 将收缩，这里 item3 实际的宽度就是 100px。 再看下图： item1 / item3 设置 flex-shrink 为 1，而 item2 的 flex-shrink 为 0，也就是说，此时宽度超出后，将由 item1、item3 来等比缩小宽度，item2 保持原有宽度。 四、flex-basisflex-basis 属性定义了在分配多余空间之前，Item 占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即 Item 的本来大小。 示例： 这个属性可以直接设置宽高代替，如上图注释部分。 五、flexflex属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。 所以最前面的几个示例，都直接写的 flex，其实 flex 就 flex-grow, flex-shrink 和 flex-basis 的简写。 六、align-selfalign-self 属性允许单个 Item有 与其他 Item 不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。 示例： 这样，就会把容器的 align-items，覆盖掉。 总结看完上面内容，是不是发现 Flex 基本上可以搞定大部分的前端布局？确实是这样，它就是这么强大，这也是他广受大家喜爱的一个重要原因，如果不考虑低版本浏览器兼容问题，我相信，float大家应该用的越来越少了。 作者：向建峰_Javan链接：http://www.imooc.com/article/287525来源：慕课网 —— CSS3中Flex弹性布局该如何灵活运用？]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 单位]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F09%2F01%2Funit%2F</url>
    <content type="text"><![CDATA[一、写在前面的结论css 的长度单位主要有以下几种：px em rem vh vw vmin vmax % in cm mm pt pc ch ex，大概可以分为 “绝对单位” 、 “相对单位” 和 “百分比单位”。绝对单位： in cm mm相对单位：px pt pc em rem ch ex百分比单位：vh vw vmin vmax % 网页设计常用单位：px 代表物理屏幕上能显示出的最小的一个点；em 和 “%” 都是相对于父级的字体大小；rem 是相对于 HTML根元素的字体大小；vh：相对于视口的高度，1vh 等于 1/100 的视口高度；vw：相对于视口的宽度，1vw 等于 1/100 的视口宽度；vmin：vw 和 vh中较小的那个；vmax：vw 和 vh中较大的那个。 pc pt ch 在网页设计上基本用不到，多用于排版。 二、深度剖析1、pxpx 就是 pixel（像素），相对于显示器屏幕分辨率 而言，是设备或者图片以及我们在网页设计中的常用单位，也是基本单位。通过 px 可以设置固定的布局或者元素大小，缺点是没有弹性（在移动端手机分辨率种类颇多，不可能一个个去适配，所以这时就要考虑 em 和 rem 了）。例如：电脑像素 1024x768 表示的是水平方向 1024 个像素点，垂直方向 768 个像素点。 2、em参考父元素的 font-size，具有继承的特点，即 继承父级元素 的字体大小。如果自身定义了 font-size 按自身来计算（浏览器默认字体是 16px）。使用 em 的好处是在响应式设计中，利用 em 的特性，你可以只通过改变 body 的字体大小一个值就修改了整个页面的各种宽度大小。例如：前面已经说了浏览器默认字体是 16px，所以 1em=16px，则 12px=0.75em，10px=0.625em。另外：要是 Font-size=62.5%，则 em 值变为 16px*62.5%=10px。这样 1em=10px，1.2em=12px 就利于我们进行换算。 3、remrem 是 相对于根元素HTML，所以我们只需要在根元素确定一个参考值，可以设计 HTML为大小为 10px，到时设置 1.2rem 就是 12px，以此类推。优点在于 rem 用于响应式设计通过改变根元素HTML 的字体大小就可以修改整个页面的各种宽度大小。例如：根元素设置字体大小 10px，标题想要 20px，容器就设 2rem；正文想要 14px，容器就设 1.4rem。 4、%(1) 对于 position: static; 普通定位元素就是我们理解的父元素；(2) 对于 position: absolute; 的元素就是相对于已定位的父元素；(3) 对于 position: fixed; 的元素就是相对于可视窗口 ViewPort。 6、vhcss3 新单位，view height的简写，是指 可视窗口的高度。假设高度是 1200px的话，那 10vh 就是 120px。例如：浏览器高度 900px，则1 vh = 900px/100 = 9 px。 5、vwcss3 新单位，view width的简写，是指 可视窗口的宽度。假设宽度是 1200px 的话，那 10vw 就是 120px。例如：浏览器宽度 1200px，则 1 vw = 1200px/100 = 12 px。 7、vm（vmin / vmax）css3 新单位，相对于视口的宽度或高度 中较小 / 较大的那个。其中最小 / 最大的那个被均分为100单位的vm。例如：浏览器高度 900px，宽度 1200px，取最小 / 最大的浏览器高度，1 vm = 900px/100 = 9 px。不过兼容性太差，现在基本上没人用。 三、其他单位in：寸 cm：厘米 mm：毫米 pt：point，约 1/72 寸 pc：pica，约 6pt，1/6 寸 ch：以节点所使用字体中的 “0” 字符为基准，找不到时为 0.5em注：ie10+、chrome 31+、safair 7.1+、opera 26+、ios safari 7.1+、android browser 4.4+ 支持 ex：取当前作用效果的字体的x的高度，在无法确定x高度的情况下以 0.5em 计算注：IE11 及以下均不支持，firefox、chrome、safari、opera、ios safari、android browser 4.4+ 等均需属性加么有前缀 四、拓展：屏幕适配的几种方法1、流式布局：&emsp;&emsp;在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用 px 来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的。其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。&emsp;&emsp;流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。 2、固定宽度：&emsp;&emsp;把页面设置成 320的宽度，超出部分留白，这样做视觉，前端设计都挺开心，UI再也不用被流式布局限制自己的设计灵感了，前端也不用流式布局。&emsp;&emsp;但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小。 3、响应式：&emsp;&emsp;响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从 web page 到 web app 直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个 web app 的版本。 4、通过viewport进行缩放：&emsp;&emsp;以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得它和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。 5、☆ rem等比例适配所有屏幕： 1234567891011121314151617181920212223242526272829(function() &#123; var currClientWidth, fontValue, originWidth; originWidth = 750; // ui设计稿的宽度，一般750或640 __resize(); window.addEventListener('resize', __resize, false); function __resize() &#123; currClientWidth = document.documentElement.clientWidth; if (currClientWidth &gt; 768) &#123; currClientWidth = 768; &#125; if (currClientWidth &lt; 320)&#123; currClientWidth = 320; &#125; fontValue = ((625 * currClientWidth) / originWidth).toFixed(2); document.documentElement.style.fontSize = fontValue + '%'; &#125;&#125;)();// 当前假如当前分辨率是375，设计稿分辨率是750// 750/375=0.5// 比例关系是0.5倍// 再算一下你要换算1rem等于多少px，// 假如我要100， 100/16=6.25// 把这个换算的乘以刚才得出的比例// 0.5*625=312.5// 最后还拼接了一个百分号 = 312.5%// 就是在375分辨率下 1rem = 312.5%// 312.5% * 16px = 50px &emsp;&emsp;通过 js 来判断当前屏幕大小，进而设置 HTML 的 font-size，代码里面 rem 的值就是 UI 设计稿上量的 px 除以 100 就是你代码中要写的 rem 值。 五、兼容性rem 兼容性 vh vw vmin vmax 兼容性 感谢：1、css单位介绍 —— cysear2、CSS3 的视口单位vw、vh实现自适应 —— Least27273、手机端h5页面屏幕适配的几种方法 —— 老蜜4、一次搞懂CSS 字体单位 —— 前端达人]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原型链、prototype、__proto__ 的关系]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F31%2Fprototype%2F</url>
    <content type="text"><![CDATA[☆ 转载：一张图弄清 Javascript 中的原型链、prototype、proto的关系原型链、prototype、__proto__的关系 ☆ 转载：图解原型链三角恋关系用文字来说就是：构造函数的 prototype 属性指向构造函数的原型，构造函数的原型的 constructor 属性指向构造函数，构造函数生成的实例的 __proto__ 属性指向构造函数的原型。 ☆ 转载：非让你搞懂JavaScript中的原型链不可原型链关系]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[概念理解]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F31%2Fconception%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[修改 DOM 元素的方法]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F30%2FupdateDOM%2F</url>
    <content type="text"><![CDATA[修改内容（3种方法） elem.innerHTML: 获取或设置元素开始标签到结束标签之间的原始 HTML 代码片段； elem.textContent: 获取或设置元素开始标签到结束标签之间的纯文本内容（要考虑兼容性问题 IE9+）； 获取表单元素的内容：value 修改属性（2种方法） 核心 DOM：操作一切结构化文档的 API(HTML, XML)： elem.getAttribute(); elem.setAttribute(attr, …); 判断是否包含属性：elem.hasAttribute(); 移除属性：elem.removeAttribute(); HTML DOM：对部分常用DOM的简化版本（常用）： 获取属性值：elem.属性名； 修改属性值：elem.属性名 = ‘值’； 判断是否包含属性：elem.属性名 === ‘’不包含； 移除属性：elem.属性名 = ‘’； 延伸 – 三大状态属性我们常在表单元素中遇到三大状态属性：selected checked disabled； 不过我们无法使用DOM核心来操作这些状态属性，因此我们需要使用HTML DOM方法： 使用HTML DOM可以操作三大状态：(elem.disabled; elem.selected; elem.checked)值是布尔值； 代码的维护性： 后续再更改网站样式的时候，如果样式比较多，首选使用类，然后把类添加到内容里面；这样便于代码的维护性。 添加和删除： 1234// 创建空元素var Jay = document.createElement('Jaunty');Jay.href = 'www.baidu.com';Jay.innerHTML = 'G'; (1) 末尾加： document.body.appendChild(Jay); // 需要添加到body中； (2) 中间插入： parent.insertBefore(newTarget, oldtarget); (3) 替换： parent.replaceChild(child, oldChild); 优化： 尽量少的修改DOM树原因：页面加载过程中，尽量少的修改DOM，每次修改，都会导致DOM树的重排和重绘，这样会对性能造成影响； html – DOM Tree丨render Tree（圣诞树）– 每次修改DOM树，都会导致DOM树的重新计算高度和宽度；丨css – css样式。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[查找 DOM 元素的方法]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F29%2FfindDOM%2F</url>
    <content type="text"><![CDATA[查找方法用HTML查找：优点：范围可大可小，可设置条件； 包括五种方式： 按 id 查找； 按 标签名 查找： var elems = parent.getElementsByTagName(‘’); 按 name属性 查找：要回传给服务器的元素需要name属性，专门找表单中有name属性的表单元素； 按 class属性 查找： var elems = parent.getElementsByClassName(‘class’); 注意：(1) 可在任意父元素上调用；(2) 可返回多个元素的组成的集合；(3) 不要求全部匹配，只要包含即可； 缺点：每次只能按一个条件查找，如果条件复杂的话，就无法一句话获得想要的元素； 这是重点强调的选择器，按选择器查找(常用)(1) 只找一个元素： var elem = parent.querySelector(‘selector”);(2) 找多个元素： var elems = parent.querySelectorAll(‘selector’); 使用选择从使用的难易程度： 当条件复杂时：按选择器查找 – 简单；按HMTL查找 – 繁琐； 返回值：getElementsByTagName() 返回多个元素的 动态集合（不实际存储对象的属性值，每次访问，都要重新查找DOM树）；querySelectorAll() 返回多个元素的 非动态集合（实际存储对象的所有值，即使返回反复访问集合，也不会导致反复查找DOM树）。 单次查找效率：按 HTML查找 – 效率高；按选择器找 – 效率低； &emsp;&emsp;在这里，我们重点介绍下querySelector() 和querySlectorAll() ，这两个方法支持CSS查询。可以通过document和element类型的实例来调用他们，目前完全支持他们的浏览器有：IE8+、Firefox 3.5+、Safari 3.1+、Chrome、Opera 10+ querySelector()： 1234567891011// 取得 body 的元素var body = document.querySelector("body");// 取得 ID 为 "myDiv" 的元素var myDiv = document.querySelector("#myDiv");// 取得类为 "selected" 的第一个元素var selected = document.querySelector(".selected");// 取得类为 "button" 的第一个图像元素var img = document.body.querySelector("immg.button"); querySlectorAll()： &emsp;&emsp;querySlectorAll() 方法接受的参数与 querySelector() 方法一样，都是一个 CSS 选择符，但返回的是所有匹配的元素而不仅仅是一个元素。这个方法返回的是一个 NodeList 的实例。 12345678// 取得某 &lt;div&gt; 中所有的 &lt;em&gt; 元素（类似于 getElementsByTagName("em")）var ems = document.getElementById("myDiv").querySlectorAll("em");// 取得类为 "selected" 的所有元素var selecteds = document.querySelectorAll(".selected");// 取得所有 &lt;p&gt; 元素中的所有 &lt;strong&gt; 元素var strongs = document.querySelectorAll("p strong");]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解区块链]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F27%2FBlockchain%2F</url>
    <content type="text"><![CDATA[前言 区块链技术被认为是继蒸汽机、电力、互联网之后，下一代颠覆性的核心技术。 如果说蒸汽机释放了人们的生产力，电力解决了人们基本的生活需求，互联网彻底改变了信息传递的方式，那么区块链作为构造信任的机器，将可能彻底改变整个人类社会价值传递的方式。以前是靠信誉、靠百年老店、权威机构等，区块链利用技术建立了新的信任方式，这是可以被量化的，从技术的角度实现的，所以说区块链成为了下一个信任的基石。区块链最核心的革命特性是改变千百年来落后的信用机制。 那么如何简单通俗的理解 区块链 呢？ 1. 区块链的举例&emsp;&emsp;区块链的本质是一个分布式的公共账本，任何人都可对这个账本进行核查，但不存在单一的用户可以对它控制。在区块链系统中的参与者共同维持账本的更新：它只能按照严格的规则和共识进行修改。 &emsp;&emsp;举例：如果A借了B 100块钱，这个时候，A在人群中大喊“我是A，我借给了B 100块钱！”，B也在人群中大喊“我是B，A借给了我100块！”此时路人甲乙丙丁都听到了这些消息，因此所有人都在心中默默记下了“A借给了B100块钱”。这个系统中不需要银行，也不需要借贷协议和收据，严格来说，甚至不需要人与人长久的信任关系（比如B突然又改口说“我不欠A钱！”，这个时候人民群众就会站出来说“不对，我的小本本上记录了你某天借了A100块钱！”）。 &emsp;&emsp;这是一个去中心化的系统，整个系统中没有了权威的中心化代理，信息的可信度和准确性便会面临问题。 &emsp;&emsp;那么这时可能你已经发现了，在上述的模型中，所谓的“100块钱”已经不重要了。换句话说，任何东西都可以在这个模型中交换，甚至你可以凭空杜撰一个东西，只要大家承认，你就可以让你杜撰的东西流通。比如：我在人群中高喊一声“我创造了10个查克拉！”，我甚至不需要知道查克拉是什么，也不需要关心世界上是不是真的有查克拉，只要大家都听到，然后在自己的小本本上记下“LaiW3n有10个查克拉”，于是我就真的有100个查克拉了。从此以后，我便可以声称我给了某人1个查克拉，只要路人甲乙丙丁都收到并且承认了这一信息，那我就算完成了这次交易，哪怕世界上没有查克拉。又比如：“比特币”，区块链是比特币的底层技术，真正的区块链和比特币比上述的模型复杂太多，细节也丰富太多。 但是存在以下问题： &emsp;&emsp;假设过了很长一段时间，凭空创造的查克拉已经在这个系统中流通了起来，大家都开始认可了查克拉。但是这个系统中一共就只有10个查克拉，于是有人动了坏心思，他在人群中高呼“我有10个查克拉！”怎么办？大家是直接在本本上记下他有10个查克拉么，这样不是人人都可以伪造查克拉了么？ &emsp;&emsp;为了防止这种现象发生，决定在我创造查克拉的时候给我的查克拉打上标记（更准确地说，我是给我喊的那句“我创造了10个查克拉”打上标记，比如标记为001），这样以后在每一笔交易的时候，我在高喊“我给了某某1个查克拉！”的时候，会附加上额外的一句话：“这1个查克拉的来源是记为001的那条记录，我的这句话标记为002！”。我们再抽象一点，某人喊话的内容的格式就变成了：“这句话编号xxx，上一句话的编号是yyy，我给了某某1个查克拉！”，这样就解决了伪造的问题。其实上述模型就变成一个简化的中本聪第一版 比特币区块链协议。 &emsp;&emsp;看到这里基本已经能够生动形象又不涉及任何细节地解释区块链了。但是任然存在以下疑问： “凭啥？” &emsp;&emsp;“凭啥你喊一句话我就帮你记？我的小本本不要钱么？”。为了激励大家帮我传话和记账，我决定给第一个听到我喊话并且记录在小本本上的人一些奖励：第一个听到我喊话并记录下来的人，你就凭空得到了1个查克拉，这个查克拉是整个系统对你幸苦记账的报酬，而你记录了这句话之后，要马上告诉其它人你已经记录好了，让别人放弃继续记录这句话，并给你自己的记录编号让别人有据可查，然后你再把我的话加上你的记录编号一起喊出来，供下一个人记账。 当这个规则定下以后，这个系统中一定会出现一批人，他们开始竖着耳朵监听周围发出的声音，以抢占第一个记账的权利。比如概念 “比特币挖矿”。毕竟 1比特币=1K-nK美元。比特币挖矿机，就是用于赚取 比特币 的电脑，这类电脑一般有专业的挖矿芯片，多采用烧显卡的方式工作，耗电量较大。用户用个人计算机下载软件然后运行特定算法，与远方服务器通讯后可得到相应比特币，是获取比特币的方式之一。 “听谁的？” &emsp;&emsp;在这个系统中，如果我和另一个人C几乎同时地喊出一句：“为了艾泽拉斯！”。由于听众所处的位置不同，一定会有人先听到我说的那句话，而另外一些人则先听到C的那句话，如果我们规定只能有一个人说出这句话，那到底这句话是谁说的？ &emsp;&emsp;如果不加任何条件，那么上述的情况一定会这样发展：一部分人认为这句话是我说的，在听到这句话之后开始记账，之后他们所做的所有事情都是基于这个事实，并且随着这个信息一次次的传下去，这条信息链会越来越深；而另外一群认为是C先说这句话的人，也会按照这样的趋势发展。这样，原本是一条唯一的信息链，在我们喊出“为了艾泽拉斯”这句话之后，分叉了？ &emsp;&emsp;这会导致怎样的情况呢？按照我们的设想，应该每个人的小本本上记录的东西都是一样的，都是一条可以把所有信息串联起来的链条。但是在这一刻，他们小本本上记录的东西不一样了？以后还怎么确定交易和信息的真实性？ &emsp;&emsp;为了解决这个问题，又追加了新的规则，增加记录编码的难度，即比特币挖矿难度，保证记录的唯一性(保证节点之间的同步)。”不知道用唯一性是否准确？ 2. 区块链的应用&emsp;&emsp;区块链几乎可以应用到任何领域，在金融、物流、公共服务等领域都有大量案例。中国央行早在2016年就表态支持区块链。2016年11月，中国政府正式把区块链列入十三五规划纲要中。 &emsp;&emsp;比如贵州超过3000亿的脱贫脱贫攻坚基金，要通过300多个单位的运作，惠及493万贫困人口，如何确保扶贫资金募款，投资，使用管理等环节正确运作呢？区块链具有多方共识，交易溯源，不可篡改等技术特点，使它在确保信息可信、安全、可追溯等方面具有传统技术不可比拟的优势。以城市为单位，第一个发布区块链白皮书的就是贵阳市。 &emsp;&emsp;如果仔细观察，我们会发现马云最近两年在公共场所提及最多的概念便是信用体系。互联网在未来不会是创业主体，而是像空气一样成为我们生活的一部分。 &emsp;&emsp;蚂蚁金融便是马云最为看重的业务体系，在马云的构想下，未来人们的生活将无现金，并可以用信用兑换商品。这一实现，十分需要一种革命性的信用机制。这一机制在2016年的支付宝App里已经悄然 上线 – 蚂蚁区块链。 3. 从技术角度简单理解区块链(1) 区块链的本质 &emsp;&emsp;区块链是一种特殊的分布式数据库。 &emsp;&emsp;首先，区块链的主要作用是储存信息。任何需要保存的信息，都可以写入区块链，也可以从里面读取，所以它是数据库。 &emsp;&emsp;其次，任何人都可以架设服务器，加入区块链网络，成为一个节点。区块链的世界里面，没有中心节点(去中心化)，每个节点都是平等的，都保存着整个数据库。你可以向任何一个节点，写入/读取数据，因为所有节点最后都会同步，保证区块链一致。 (2) 区块链的最大特点 &emsp;&emsp;区块链没有管理员，它是彻底无中心的。其他的数据库都有管理员，但是区块链没有。如果有人想对区块链添加审核，也实现不了，因为它的设计目标就是防止出现居于中心地位的管理当局。 &emsp;&emsp;没有了管理员，人人都可以往里面写入数据，怎么才能保证数据是可信的呢，这就是区块链奇妙的地方。 (3) 区块 &emsp;&emsp;区块链由一个个相连的区块（block）组成。区块很像数据库的记录，每次写入数据，就是创建一个区块。 每个区块包含两个部分： 区块头（Head）：记录当前区块的元信息 区块体（Body）：实际数据 区块头包含了当前区块的多项元信息 生成时间 实际数据（即区块体）的 Hash 上一个区块的 Hash …… &emsp;&emsp;Hash 就是计算机可以对任意内容，计算出一个长度相同的特征值。区块链的 Hash 长度是256位，不管原始内容是什么，最后都会计算出一个256位的二进制数字。而且可以保证，只要原始内容不同，对应的 Hash 一定是不同的。 &emsp;&emsp;举例来说，字符串123的 Hash 是a8fdc205a9f19cc1c7507a60c4f01b13d11d7fd0（十六进制），转成二进制就是256位，而且只有123能得到这个 Hash。 (4) Hash 的不可修改性 &emsp;&emsp;区块与 Hash 是一一对应的，每个区块的 Hash 都是针对”区块头”（Head）计算的。 Hash = SHA256(区块头) &emsp;&emsp;区块头包含很多内容(包括上一个区块的Hash、当前区块体的Hash等，见上图)。这意味着，如果当前区块的内容变了，或者上一个区块的 Hash 变了，一定会引起当前区块的 Hash 改变。 &emsp;&emsp;如果有人修改了一个区块，该区块的 Hash 就变了。为了让后面的区块还能连到它，必须同时修改后面所有的区块，否则被改掉的区块就脱离区块链了。Hash 的计算很耗时，同时修改多个区块几乎不可能发生，除非有人掌握了全网51%以上的计算能力。 &emsp;&emsp;正是通过这种联动机制，区块链保证了自身的可靠性，数据一旦写入，就无法被篡改。这就像历史一样，发生了就是发生了，从此再无法改变。 (5) 采矿 &emsp;&emsp;由于必须保证节点之间的同步，所以新区块的添加速度不能太快。试想一下，你刚刚同步了一个区块，准备基于它生成下一个区块，但这时别的节点又有新区块生成，你不得不放弃做了一半的计算，再次去同步。因为每个区块的后面，只能跟着一个区块，你永远只能在最新区块的后面，生成下一个区块。所以，你别无选择，一听到信号，就必须立刻同步。 &emsp;&emsp;所以，区块链的发明者故意让添加新区块，变得很困难。他的设计是，平均每10分钟，全网才能生成一个新区块，一小时也就六个。 &emsp;&emsp;这种产出速度不是通过命令达成的，而是故意设置了海量的计算。也就是说，只有通过极其大量的计算，才能得到当前区块的有效 Hash，从而把新区块添加到区块链。由于计算量太大，所以快不起来。 &emsp;&emsp;这个过程就叫做采矿（mining），因为计算有效 Hash 的难度，好比在全世界的沙子里面，找到一粒符合条件的沙子。计算 Hash 的机器就叫做矿机，操作矿机的人就叫做矿工。 (6) 难度系数 &emsp;&emsp;你可能会有一个疑问，人们都说采矿很难，可是采矿不就是用计算机算出一个 Hash 吗，这正是计算机的强项啊，怎么会变得很难，迟迟算不出来呢？(比特币挖矿机，就是用于赚取比特币的电脑，一般有专业的挖矿芯片，多采用烧显卡的方式工作) &emsp;&emsp;原来不是任意一个 Hash 都可以，只有满足条件的 Hash 才会被区块链接受。这个条件特别苛刻，使得绝大部分 Hash 都不满足要求，必须重算。 &emsp;&emsp;区块头包含一个难度系数（difficulty）这个值决定了计算 Hash 的难度。举例来说，第100000个区块的难度系数是 14484.16236122。 &emsp;&emsp;区块链协议规定，使用一个常量除以难度系数，可以得到目标值（target）。显然，难度系数越大，目标值就越小。 &emsp;&emsp;Hash 的有效性跟目标值密切相关，只有小于目标值的 Hash 才是有效的，否则 Hash 无效，必须重算。由于目标值非常小，Hash 小于该值的机会极其渺茫，可能计算10亿次，才算中一次。这就是采矿如此之慢的根本原因。 &emsp;&emsp;区块头里面还有一个 Nonce 值，记录了 Hash 重算的次数。第 100000 个区块的 Nonce 值是 274148111，即计算了 2.74 亿次，才得到了一个有效的 Hash，该区块才能加入区块链。 (7) 难度系数的动态调节 &emsp;&emsp;就算采矿很难，但也没法保证，正好十分钟产出一个区块，有时一分钟就算出来了，有时几个小时可能也没结果。总体来看，随着硬件设备的提升，以及矿机的数量增长，计算速度一定会越来越快。 &emsp;&emsp;为了将产出速率恒定在十分钟，区块链发明者还设计了难度系数的动态调节机制。他规定，难度系数每两周（2016个区块）调整一次。如果这两周里面，区块的平均生成速度是9分钟，就意味着比法定速度快了10%，因此难度系数就要调高10%；如果平均生成速度是11分钟，就意味着比法定速度慢了10%，因此难度系数就要调低10%。 &emsp;&emsp;难度系数越调越高（目标值越来越小），导致了采矿越来越难。 (8)区块链的分叉 &emsp;&emsp;即使区块链是可靠的，现在还有一个问题没有解决：如果两个人同时向区块链写入数据，也就是说，同时有两个区块加入，因为它们都连着前一个区块，就形成了分叉。这时应该采纳哪一个区块呢？ &emsp;&emsp;现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。 &emsp;&emsp;现在的规则是，新节点总是采用最长的那条区块链。如果区块链有分叉，将看哪个分支在分叉点后面，先达到6个新区块（称为”六次确认”）。按照10分钟一个区块计算，一小时就可以确认。 &emsp;&emsp;为了保证数据的可靠性，区块链也有自己的代价。一是效率，数据写入区块链，最少要等待十分钟，所有节点都同步数，需要更多的时间；二是能耗，区块的生成需要矿工进行无数无意义的计算，这是非常耗费能源的。 感谢：公众号 Linux爱好者区块链是什么，如何简单易懂地介绍区块链？区块链，将如何重新定义世界 阅读原文]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VR 产业]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F26%2Fvrfirst%2F</url>
    <content type="text"><![CDATA[前言自2018年10月份“世界VR产业大会”在江西南昌召开后，我就越发觉得江西的发展不再沉默。 这可能是个机遇，是南昌的发展机遇，是江西省的发展机遇，更是落实到每个江西人的发展机遇，所以在2018年底考完研后更加对于创新创业有了更大胆的想法与动力。VR是未来科技的发展趋势，特别是随着人工智能、大数据的兴起，中国5G时代的领先与发展，使得虚拟现实，人机交互的升级更加突显未来科技既视感。目前的论坛已提到新零售、新制造，在影视内容、教育培训、文化旅游、新闻出版游戏（电竞）、动漫、投资、安防等行业都有进行研讨，而我关注的点在于体育产业与VR产业的结合，现在看来是还未涉及到的，不知道将来体育产业与VR产业会发生如何的碰撞。 然而我自己现在已在萌芽一个小想法 —— 拟态训练（自定义）。这是我个人目前对于体育产业与VR产业浅显的认知中能够设想到的一个结合物，该产物的目的有二：其一对于普通民众而言可以将科学的运动方式推广授之大众，其二则是对于专业运动员而言可以单独进行高水准的训练，是一种生理与心理的结合的高科技训练方式。这个难度可想而知是非常之大的，各方面的专业性得非常非常非常非常之强，可我深信这是未来科技的发展趋势，产品的拓展还是可以往其他行业延伸的，是具有弹性的。不过目前这些都是我的浅显认知得出的想法，也许以后在研究生阶段或工作思考的学习实践过程中会有在思想上的其他改变或者是更深的理解都说不定，不过我会在此行业一直奋力前行！ 下面我们来看看这两届 世界VR产业大会 的相关信息。 2018世界VR产业大会10月19日-21日，由工业和信息化部、江西省人民政府联合主办的2018世界VR产业大会（World Conference on VR Industry）在江西南昌成功举行。 2018世界VR产业大会 本届大会的主题是“VR让世界更精彩”，以互联网为核心的新一轮科技和产业革命蓄势待发, 人工智能、虚拟现实等新技术日新月异, 虚拟经济与实体经济的结合, 将给人们的生产方式和生活方式带来革命性变化我国已经把虚拟现实（VR）定位为超前发展的战略性新兴产业。 诺贝尔物理学奖得主乔治·斯穆特、阿里巴巴集团董事局主席马云以及来自国内外VR领域的领军人物、专家学者、企业高管、行业组织负责人以及国际组织代表共计2000多名嘉宾参会。据相关媒体报道，展会邀请到了国内外一些知名的VR/AR企业，例如百度、联想、华为、微软等等，其中，境外参展企业占总参展企业的18%左右。此外，VR/AR产品和应用展览会也将于大会期间对市民免费开放，展会现场将有158家企业展示其最新、最前沿的技术和产品。 2018世界VR产业大会现场 马云的精彩演讲现场实录各位朋友：大家上午好！ 在江西召开世界VR大会，我一开始还是很意外。我没有想到会在江西开世界非常前沿技术的大会，也没有想到，短短几年，江西在VR产业发展取得如此大的成绩，感慨江西在这个行业中不是依靠原有的资源，而是相信VR创造未来的资源。他的远见、决心、持久力让我感动。所以，江西今天已经在VR产业有一定的规模和影响力，我也相信今天的大会对世界VR产业与中国VR产业来讲，是一个里程碑式的大会。 但是，仔细想想也不意外，90年前，井冈山时期，江西由于这么一个地方，一个在大多数人都不相信的时候，选择相信未来。在大多数人怀疑的时候，拥抱了新的理念、新的思想，江西就是这样一个地方，江西拥抱新知识。我也相信今天的大会，标志着南昌正式向世界VR大会打响第一枪。 马云现场演讲 习总书记说井冈山精神就是坚定执着追理想，实事求是闯新路，艰苦奋斗攻难关，依靠群众求胜利，我觉得这四条在技术创新当中，同样有用，而且事实上如果分开了这四条，技术创新根本不可能。作为阿里巴巴的创始人，很多人只看到今天阿里巴巴取得的成绩，但没看到我们背后巨大的失败、巨大的挫折。我相信任何一个地区，任何一个行业要想取得成功，必须面向世界、面向全球，只有有理想、有远见、有人才、有执行力，才有可能实现自己的抱负。 过去几个月，我和刘书记见了三次，感叹江西的进取思想、对未来的担当。所以我们决定在很短的时间内，认真地研究、考察，把江西作为阿里巴巴创新与科技、产品和服务最重要的发展事业中心。 有人问我为什么是江西，我说为什么不是江西？宋朝、明朝以来，江西盛产文人。昨天晚上还听说，明朝的内阁，朝堂上有一半的官员是江西人。江西盛产读书人，名人辈出。江西景德镇是文化创意产业的鼻祖，没有创意创新，谁也想象不了今天江西能够创造出让全世界都来买的瓷器，China，瓷器在江西。除此以外，更重要的是江西有远见、有行动力。短短几个月，我们切身感受到江西的执行力，江西对老百姓的担当，对未来的担当。在几个月以内，江西已经形成了有移动政务、移动办事，刷手机坐公交，城市大脑迅速接轨，让我们对江西充满信心。 有人说江西没有VR人才，谈什么VR，我自己也这么觉得，世界上本来就没有什么VR人才，我们的世界并没有专家。所有的专家都是昨天的专家，未来的专家，今天的江西是在未来打造VR的专家。所以当年我们在贵州的时候说，贵州为什么可以发展大数据，贵州没有大数据人才。我说北京、上海、纽约、东京也没有大数据人才，这如果都有了，那还需要我们创业者干什么？一切条件都完美，就不需要创业者。如果钱能解决问题，银行可以做一切事情。这个世界因为有想象，因为有理想，因为你对未来有担当，你对未来敢于做执行力，敢于行动才有真正的未来。 所以，我相信每一次技术革命，大约都是50年，前20年是技术的变化，后30年才是应用的变革。未来世界上数据是重要的生产资料，计算是生产力，而互联网是生产关系，技术将给社会带来翻天覆地的变化，深入到社会的方方面面。我相信这些话过去十年无数人听过了很多遍，但是很少有人真正的去理解它，改变自己。所以技术将会改革传播的零售业、制造业，改变教育、医疗，改变我们认识和思考世界的方式。 我想，我们讲人工智能可能会取代我们很多工作，这不是可能，这是一定。所以我们讲改变教育，改变自己的思考方式，如果我们依然按照昨天的教育方式，按照昨天的思考方式，我想我们的孩子肯定做不了比科技更加重要的事情，不被机器所淘汰。 所以，因为技术的发展，人类如果能够到达过去很多到达不了的地方，看见过去看不到的东西，听到过去听不到的东西，而VR技术让人类又往前了，进入到不可能当中去，这是一项了不起的技术。刚才苗部长讲了VR技术对整个生产、制造、社会、音乐、人的生活会产生巨大的影响，我们是坚信不移。VR技术，物联网等，这都是技术革命的重要组成部分。 VR这个行业，20年以前，有些地方进行了深入的研究。我自己认为，我们对VR非常关注，在全世界都看到有这样和那样的公司，零星散落在世界各地，但是把一个地方打造成VR的创新创业中心，把VR的产业中心，甚至作为一个平台来打造，江西南昌是第一次。VR必须要到大数据、云计算、人工智能的创新以后，VR才属于真正未来的技术。所以20年以前是纯VR，现在的VR必须跟大数据、人工智能结合起来。不跟大数据、互联网、人工智能技术相结合，VR产品可能还是一个新奇、有趣的应用。就像摄像头，如果不跟互联网结合，那只是一个罚款工具。但是连上网以后，接上了计算能力，就可以用来解决交通拥堵的问题，只有和互联网、大数据、云计算结合，VR才能从一个玩具真正变成解决核心技术的内容。特别是改变教育、改变医疗，我们充满了期待。 虚拟现实千万不能真的变成一个虚的产业，VR行业要和实体经济紧密结合，也只有紧密结合实体经济，VR才有真正的未来。虚的技术一定要做实，而实的产业必须要学会虚。数据时代，无论是VR技术，还是AR，区块链等技术，这些技术再先进、再流行，风投资本再喜欢，但是如果不能和制造业、服务业相结合，不能推进转型升级，不能推进社会向更加绿色，更加可持续，更加普惠的发展，不能让人们的生活更加健康、更加快乐，这样的技术就变得毫无意义，也不可能有广阔的前景。 最近，风险投资的热潮正在退潮，我听说很多创业的公司估值少了70%，我觉得这剩下的30%才是真正符合自己的价值。阿里巴巴创业的时候，能融到500万美元，绝对已经是巨资了，今天融到1亿美金都觉得自己不好意思跟人家说。所以，今天风险投资热度退却，我觉得对整个产业应该是好事情。现在是见真金、真本事、真技术的时候。今天江西打造一个如此有远见、有担当、有未来、下决心真干的VR产业中心，我觉得对每一个有志于此类的企业家、创业者来讲都是利好消息。离开互联网的实体经济没有未来，我经常听人说实体制造业不行了，其实不是制造业不行，是落后的制造业不行。不是别人的制造业不行，是你的制造业不行。未来制造业不仅仅是制造业，而是和互联网完美结合。制造背后的服务和体验，是创造思想，是体验，是感受以及服务能力，这也是未来VR产业的核心竞争力，看不到背后的创造思想，创新的体验，精致的感受。 阿里巴巴投资了非常领先的一项VR技术，就在两个月以前，这个公司花了八年时间，才发布了他的第一个VR眼镜，而且这个产品离当时投资者的预期还是相当大。但是这很正常，很多时候看不清楚才是真正的未来，阿里巴巴今天大家都相信电子商务，但是19年以前的电子商务，跟今天完全不是这么一回事。10年以后的电子商务，跟今天也不是一回事，过去的19年，我们至少有过190次以上的电子商务的变革，1900次以上的失败，19000次以上的失业才有今天。所以我们一定要相信，我们在这一次，从VR的投资里深刻明白，技术的创新充满曲折和艰难。如果轻而易举就能成功，那一定不是什么了不起的技术。投入的时候，就要有挫折的准备，就要有失败的思想准备，技术创新就是要做好失败的准备来追求成功。 任何新生事物，就像新生儿一样，刚出生的时候其实都不好看，我自己觉得，有人讲孩子生下来像爹妈，我看起来都像老鼠，都很难看，但是养着养着，把心血花下去就很好看。所以这些新生事物，让我们对未来充满着想象，充满着希望，它因为有无限的可能性。所以我们希望给它时间，给它相信，给它以坚持，在人人都相信一个产业的时候，其实你已经没有机会了。在没有人相信的时候，你的坚持才是真正的尊贵。很多人是因为看见而相信，只有很少数的人是因为相信而看见。谈创新、谈技术其实很容易，真正做创新、促创新其实很难，创新一定要预防叶公好龙，特别是现在我们人人在做创新，创新一定会有挑战传统的思想、传统的产业、传统的行业、传统很多的既得利益群体，我们每个人要敢于为创新说话，为创新担当。也只有这样，创新才有机会升级。创新不仅仅是科学家、技术人员的挑战，也不仅仅是是技术的挑战，同时是政府运营的巨大挑战。我们都知道要把一个行业打掉是非常容易的事情，但是要把行业做完善、做持久非常之艰难。 江西拥抱VR产业，实际上是拥抱整个技术。我个人觉得，江西最宝贵的还不是VR产业本身，而是江西背后的变革，江西面向未来的思想。我一直相信换道超车，只有在另外一个道上，只有拼未来，不是拼我们昨天的资源，才能真正超越。到了江西以后，我明显感觉到人们的生活最近在发生很大的变化，行动在发生变化。我相信有思想引领，江西的未来一定发生深刻的变化，并且也一直相信互联网时代基础设施越薄弱的地方越容易成功，这跟当年革命一样，革命最薄弱的地方，往往有机会发展起来，我相信任何人都在讲我有什么的时候，他其实缺乏了他没有的东西，那就是创新的能力，对未来的担当。江西今天真正靠的不是传统的资源，靠的是创新创意，靠的是思想，靠的是对未来的担当，对人民的担当，对一切所有我们不敢相信，但是敢于去尝试这样的担当。所以谢谢大家！我相信今天的会议，对中国乃至世界VR所产生的重要和深远的影响，我为今天能够参加这样的大会深感骄傲。相信20年以后的江西，我们会为今天而兴奋，而骄傲，谢谢大家！ 诺贝尔物理学奖得主、美国科学院院士乔治·斯穆特：VR将改变多个行业乔治·斯穆特 10月19日，由工业和信息化部、江西省人民政府联合主办，中国电子信息产业发展 研究院、江西省工业和信息化委员会、南昌市人民政府、虚拟现实产业联盟承办的 2018世界VR产业大会在江西南昌隆重开幕。为期三天的本次大会以“VR让世界更精彩”为主题，汇聚了来自20多个国家和地区的1000多家企业，展示了全球虚拟现实 领域最新研究成果。诺贝尔物理学奖得主、美国科学院院士乔治·斯穆特在19日上午的主旨演讲中表示：“VR将改变三个行业——地产、游戏和旅游。可能还有两个会受到VR影响的，就是学习和教育，系列的研究表明基于VR的学习非常有效而且非常高效。当普通用户都能够负担得起，VR的内容渲染和深层应用更真实，VR将真正变成主流。” VR将改变多个行业 乔治·斯穆特说，VR在深远地改变我们的世界，VR、AR代表的是人、知识、体验以及内容之间的交互，可能有些界面过去和人并没有实现交互，现在通过一系列的系统来实现这样的交互。而且VR会影响很多行业，也会不断造就很多行业。 整个虚拟现实的崛起，即将彻底改变以下三个行业：第一是地产行业，这甚至是我没有想到的，过去很难想象，基于VR设计能够改变地产；第二是游戏；第三是旅游出行行业。还有两个会受到VR影响，就是学习和教育，在一系列的研究中我们发现基于VR的学习是非常有效、非常高效的，而且会影响很多的消费者。现在VR内容还处于“暖身”阶段，当普通用户都能够负担得起，在未来内容的渲染和深层应用体验更真实时，VR会真正变成主流。此外，VR也会影响消费领域，现在在线上下单，通过VR\AR能够非常真实、逼真地感受到要买的那款产品。在这些领域，VR都将大行其道。 乔治·斯穆特说，在这些应用之外，我有自己不同的想法。首先在制造业，VR\AR会渗透影响，未来自动化程度越来越高，工业4.0时代能够让产品更高效地做多批次、小型化产品，并且能够在客户和设计师之间建立起联系，用户告诉设计师喜欢什么样的产品。 在颠覆性技术中发挥VR作用 麦肯锡认为在未来经济中起到颠覆性作用的科技中，排名第一的是移动互联网，移动互联网越来越普及，随着5G时代的到来还将发生新的变化。移动互联网有巨大的潜力可以进一步释放，移动互联网结合VR技术，能够更好地管理个人健康，例如通过远程健康监测可以降低10%~20%的慢性疾病的治疗费用。 排名第二的是知识工作自动化，到2025年会有5.2到6.7万亿美元的商业潜力。在制造业实现自动化的同时，一些智力工作也开始自动化，如语音识别技术。知识工作自动化影响的人群将达到1.1~1.4亿人，在这类应用中，如谷歌开始研发的无人汽车、自动驾驶技术，亚马逊、阿里巴巴推出的无人超市。在这类应用中，AR都有用武之地，例如消费者在超市中可以使用AR技术进行购物；也可以利用AR提高安全性，用于能源监测。在是教育行业，虚拟现实已经切切实实在其中发挥作用。学生可以通过AR与虚拟的人工智能的教师进行对话，可以针对一个学生提供一对一的辅导。 排名第三的领域是物联网，现在越来越多的设备使用传感器。例如很多门铃是视频的，整个视频系统可以和敲门的人进行简单对话交流。这也可以通过AR系统来对接，以多媒体的方式进行控制，从而使信息可以更好地交换。 第四名是云计算。云计算可以提供更强大的计算能力，采用AR可以显示不同类型的信息，例如一个屏幕显示视频，另一屏幕显示相关的信息，这些不同信息汇集，其实可以应用在移动办公中。 AR和VR技术已经成为引人入胜的技术，我们看到，它可以用到很多领域，让我们感到非常的振奋。 信息来源：2018世界VR产业大会网 2019世界VR产业大会2019世界VR产业大会 大会背景习近平总书记在致2018世界VR产业大会的贺信中指出，新一轮科技革命和产业变革正在蓬勃发展，虚拟现实技术逐步走向成熟，拓展了人类感知能力，改变了产品形态和服务模式。中国正致力于实现高质量发展，推动新技术、新产品、新业态、新模式在各领域广泛应用。中国愿加强虚拟现实等领域国际交流合作，共享发展机遇，共享创新成果，努力开创人类社会更加智慧、更加美好的未来。 近年来，我国虚拟现实产业逐步走向成熟，消费市场和行业应用市场不断打开，产业链条更加完善。5G商用将大大提升虚拟现实体验，为虚拟现实技术在更广泛领域的应用开辟新天地。我国在硬件制造、内容应用开发以及业务体验推广等产业链各环节快速发展，正在成为全球虚拟现实产业创新创业活力最强、市场接受度最高、发展潜力最大的地区之一。 大会宗旨聚焦前沿技术，探讨发展之道，展示最新成果，推动应用普及，搭建交流平台，汇聚要素资源，让大会成为全世界了解中国虚拟现实产业发展的窗口和引领全球虚拟现实产业发展的风向标，吸引优秀企业和项目在江西落地，培育经济增长新动能。 大会目的贯彻落实习近平总书记贺信及视察江西时的重要讲话精神，把握5G商用元年的重大历史机遇，紧密结合当前5G赋能VR产业发展的特点，探讨5G新时代如何赋予VR更稳定的技术支撑、更广泛的应用场景、更丰富的体验效果。 大会主题VR让世界更精彩 —— VR+5G 开启感知新时代。 VR+5G 重大新闻 2023年南昌要成世界级VR中心：原文传送门 项目落地开花 南昌VR点燃发展动力引擎：原文传送门 了解更多：2019世界VR产业大会网 最后我自己是已经在官网报名了大会观众参与了四个论坛，还在审核阶段，希望能够通过这一次学习成长的机会让我慢慢融入到该行业领域中，让自己未来能够走得更长远，一望无垠才有无限可能！期待2019年的世界VR产业大会，也荣幸自己即将成为与会的一份子，更期盼自己将来不仅仅当作与会观众。。。 参与论坛 电子票 我相信：未来江西的发展是 VR + 5G + AI + 大数据 的结合引领着，愿江西发展不再沉默！]]></content>
      <categories>
        <category>VR</category>
      </categories>
      <tags>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git 协作开发]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F25%2Fcooperation%2F</url>
    <content type="text"><![CDATA[fork项目，参与开发，fork后会在你的主页建立一个同名仓库； git clone 你fork的仓库地址 到本地； 修改本地文件 commit，push； pr： 自己开始也是这样的，但是后面如果作者更新了，你这边还是原来的代码的话就跟不上进度，所以必须要同步其他人的进度； git remote add upstream： 你fork项目的原始地址（作用是保存项目地址通过 upstream 来代替，不需要每次都输入这个地址）； git pull upstream： 分支名（拉取项目的最新代码到本地，保持同步）； 编辑你自己的代码， commit， push； 如果你需要合并自己的commit记录，可以使用 git rebase -i head~3（最近3次的提交记录）； 按i进入插入模式然后可以根据提示编写commit，然后esc退出模式再按 :wq 退出保存； git push –force： 提交代码； 可以安安心心的 pr了，然后等着 merge 或者 rebase。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webpack]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F24%2Fwebpack%2F</url>
    <content type="text"><![CDATA[常用的webpack插件html-webpack-plugin 可以指定 template 模板文件，将会在 output 目录下，生成 html 文件，并引入打包后的 js.安装依赖:npm install –save-dev html-webpack-plugin 支持加载css文件通过使用不同的 style-loader 和 css-loader, 可以将 css 文件转换成 js 文件类型。安装依赖:npm install –save-dev style-loader css-loader 支持加载图片file-loader: 解决 css 等文件中的引入图片路径问题url-loader: 当图片小于 limit 的时候会把图片 Base64编码，大于 limit 参数的时候还是使用 file-loader 进行拷贝如果希望图片存放在单独的目录下，那么需要指定outputPath安装依赖:npm install –save-dev url-loader file-loader 支持编译less和sass有些前端同事可能习惯于使用 less 或者是 sass 编写 css，那么也需要在 webpack 中进行配置。安装对应的依赖:npm install –save-dev less less-loadernpm install –save-dev node-sass sass-loader 支持转义 ES6/ES7/JSXES6/ES7/JSX 转义需要 Babel 的依赖，支持装饰器。安装对应的依赖:npm install –save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react @babel/plugin-proposal-decorators @babel/plugin-proposal-object-rest-spread .压缩JS文件安装依赖:npm install –save-dev uglifyjs-webpack-pluginnpm install –save-dev optimize-css-assets-webpack-plugin 分离CSS(如果CSS文件较大的话)因为 css 的下载和 js 可以并行，当一个 HTML 文件很大的时候，可以把 css 单独提取出来加载npm install –save-dev mini-css-extract-plugin .压缩CSS文件安装依赖:npm install –save-dev optimize-css-assets-webpack-plugin 打包前先清空输出目录npm install –save-dev clean-webpack-plugin 配置 webpack-dev-serverwebpack-dev-server 提供了一个简单的 Web服务器和实时热更新的能力安装依赖:npm install –save-dev webpack-dev-server 详情查看：webpack 中文网]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 数据类型]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F23%2FjsType%2F</url>
    <content type="text"><![CDATA[JavaScript 是一种弱类型语言，下面是两是种常见的分类方式。 一、第一种分类方式（常用分法）分为9种类型：分别是 Undefined，Boolean，Object，Number，Null，String，Reference，List，Completion，其中Reference，List，Completion 三种类型仅共语言解析运行时使用，无法从程序中直接访问。 1、Undefined 类型： 是全局对象 window 的一个特殊属性，顾名思义就是未定义的意思；Undefined 类型只有一个值 Undefined，表示一个变量定义了但未赋值。 如：var a; alert(a); // 弹出undefined； 下面是几种常见的会出现undefined的情况： （1）获取一个对象的属性（原本属性和 protoType 扩展的属性）不存在时，返回 undefined； （2）当一个函数 function(){} 没有明确的返回值时，显示 undefined； 如：function way(){} alert(way()); // 弹出 undefined （3）JavaScript 中的参数有多个形参的话，若果调用参数的话，参数数量小于形参数量，那么其他的参数值就为 undefined。 2、Null类型： null 是 JavaScript 保留的关键字，null 类型也只有一个 null 值，表示为空或者不存在的对象引用： （1）JavaScript 中的if() 判断语句无论是 null 类型还是 undefined 类型他们的返回值都是 false，也就是说一个变量若是 null 或者 undefined 那么他就为 false。 12345678910if (null) &#123; alert("sdf");//进入不了&#125;if (undefined) &#123; alert("sdfsdf");//进入不了&#125;var a=12;if (a) &#123; alert("sdf"); //能进入&#125; 3、Number类型： 表示数值，包含了所有的数值类型，不像高级语言那么细分成 int，double，deciable，他的取值范围是：1.7976931348623157E+308 到 -1.7976931348623157E+308之间，就是1.797693134862315710 的308次方 到 -1.797693134862315710 的308次方之间；Number 类型有一个特殊的值 NaN，他是 Number 类型中一个非数值的值，就像无穷大，所以NaN不等于 NaN。 4、Object类型： 用来表示一个对象，像String， Array，new 一个对象等，当这个对象为空时，就是 null了；所以 alert(typeof(null)) 的弹出值为object。 5、String类型： string类型是 JavaScript 中的一个比较重要的类型，它用来表示一个字符串，我们在写脚本的时候需要处理很多的字符串，所以 JavaScript 库中也提供了很多字符串处理方法。 6、Boolean类型： 布尔类型大家都很熟悉，这里说几个他的特殊用法： （1）boolea类型和Number类型相结合时，true转化为1，false转化为0； 1234var a = true; alert(a+1);//弹出2var a = true; alert(a);//弹出true 上述六种类型也可以相互转化，基本上是数值和字符串和布尔值之间的转化： （1）Number类型转化为string类型，用tostring()； （2）String类型转化为Number，用Number()； 1234var str = "123";var num = 1;alert(str + num); // 弹出1231alert(Number(str) + num); // 弹出124 也可以使用全局函数 parseInt() 和 parseFloat() 来进行转换；parseInt() 和 parseFloat() 的区别是 Number() 转换是整个值，而 parseInt() 和 parseFloat() 则可以只转换开头的数字部分。 12345alert(Number("123asdf")); // 弹出NaNalert(Number("1.2.3")); // 弹出NaNalert(parseInt("123sdf")); // 弹出123alert(parseFloat("sdfsdf")); // 弹出NaNalert(parseInt("sdf345")); // 弹出NaN Number() 在转化的过程中布尔类型的 true 和 false 分别被转化为1和0其他的不能转化为数值的全部转化NaN。 123alert(Number(true));//弹出1alert(Number(false));//弹出0alert(Number(null));//弹出0 其他的若是不能转化为数值类型的，基本上全转化为 NaN。 扩展小知识： （1）判断一个变量是否是数值，用IsNan() 方法； （2）在 JavaScript 中 “==” 和 “===” 的区别: “==” 只要求值相等; “===” 要求值和类型都相等； （3）instanceof 只是用于判断 object 是否是 class类的一个实例，是的话返回 true,否则返回 false；alert(“a instanceof String”); 二、第二种分类方法（typeof()关键字）：分为：undefined，number，string，boolean，object，function 类型 例子 运行结果 Undefined var a1; alert(typeof(a1))；function way{} alert(way()); alert(typeof(way())) undefined number Var num1=12; alert(typeof(num1)); number string Var num2=”12”; alert(typeof(num2)); string boolean Var flag=true; alert(typeof(flag)); boolean object Var str=new string(); alert(typeof(str));Var a=null; alert(typeof(a)); object function alert(typeof(String)); function]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心得篇]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F22%2FThinking%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[懒加载]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F21%2Flazy-load%2F</url>
    <content type="text"><![CDATA[html 代码段： 123456789101112131415&lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt;&lt;/ul&gt;&lt;img class="imgLazyLoad" data-src="https://avatars0.githubusercontent.com/u/40397349?s=460&amp;v=4" /&gt;&lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt;&lt;/ul&gt; data-src属性上面保存着我们后面需要动态加载的图片地址。 JavaScript 代码段： 12345678910111213141516171819202122232425262728(function()&#123;//立即执行函数 let imgList = [],delay,time = 250,offset = 0; function _delay()&#123;//函数防抖 clearTimeout(delay); delay = setTimeout(() =&gt; &#123; _loadImg(); &#125;,time) &#125;; function _loadImg()&#123;//执行图片加载 for(let i = 0 ; i &lt; imgList.length; i++)&#123; if(_isShow(imgList[i]))&#123; imgList[i].src = imgList[i].getAttribute('data-src'); imgList.splice(i,1); &#125; &#125; &#125;; function _isShow(el)&#123;//判断img是否出现在可视窗口 let coords = el.getBoundingClientRect(); return (coords.left &gt;= 0 &amp;&amp; coords.left &gt;= 0 &amp;&amp; coords.top) &lt;= (document.documentElement.clientHeight || window.innerHeight) + parseInt(offset); &#125;; function imgLoad(selector)&#123;//获取所有需要实现懒加载图片对象引用并设置window监听事件scroll _selector = selector || '.imgLazyLoad'; let nodes = document.querySelectorAll(selector); imgList = Array.apply(null,nodes); window.addEventListener('scroll',_delay,false) &#125;; imgLoad('.imgLazyLoad')&#125;)()]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[节流]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F20%2Fthrottle%2F</url>
    <content type="text"><![CDATA[throttle 的中心思想在于：在某段时间内，不管你触发了多少次回调，我都只认第一次，并在计时结束时给予响应。 先给大家讲个小故事：现在有一个旅客刚下了飞机，需要用车，于是打电话叫了该机场唯一的一辆机场大巴来接。司机开到机场，心想来都来了，多接几个人一起走吧，这样这趟才跑得值——我等个十分钟看看。于是司机一边打开了计时器，一边招呼后面的客人陆陆续续上车。在这十分钟内，后面下飞机的乘客都只能乘这一辆大巴，十分钟过去后，不管后面还有多少没挤上车的乘客，这班车都必须发走。 在这个故事里，“司机” 就是我们的节流阀，他控制发车的时机；“乘客”就是因为我们频繁操作事件而不断涌入的回调任务，它需要接受“司机”的安排；而“计时器”，就是我们上文提到的以自由变量形式存在的时间信息，它是“司机”决定发车的依据；最后“发车”这个动作，就对应到回调函数的执行。 总结下来，所谓的“节流”，是通过在一段时间内无视后来产生的回调请求来实现的。只要一位客人叫了车，司机就会为他开启计时器，一定的时间内，后面需要乘车的客人都得排队上这一辆车，谁也无法叫到更多的车。 对应到实际的交互上是一样一样的：每当用户触发了一次 scroll 事件，我们就为这个触发操作开启计时器。一段时间内，后续所有的 scroll 事件都会被当作“一辆车的乘客”——它们无法触发新的 scroll 回调。直到“一段时间”到了，第一次触发的 scroll 事件对应的回调才会执行，而“一段时间内”触发的后续的 scroll 回调都会被节流阀无视掉。 理解了大致的思路，我们现在一起实现一个 throttle： // fn是我们要包装的回调函数事件，Interval是我们要传入的时间间隔function throttle(fn, Interval) {// 记录上一次调用的时间；let last = 0;return function() {// 保存上下文的thislet context = this// 保存传入的参数let args = arguments;// 保存调用时的时间;let now = + new Date;// 判断上一次调用时间和当前调用时间对比if (now - last &gt; Interval) {// 更新最后一次调用时间;last = now;fn.apply(context, args);}}}// 用throttle来包装scroll的回调let better_scroll = throttle(() =&gt; {console.log(‘触发了滚动事件’), 1000});document.addEventListener(‘scroll’, better_scroll);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防抖]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F20%2Fdebounce%2F</url>
    <content type="text"><![CDATA[防抖的中心思想在于：我会等你到底。在某段时间内，不管你触发了多少次回调，我都只认最后一次。 继续讲司机开车的故事。这次的司机比较有耐心。第一个乘客上车后，司机开始计时（比如说十分钟）。十分钟之内，如果又上来了一个乘客，司机会把计时器清零，重新开始等另一个十分钟（延迟了等待）。直到有这么一位乘客，从他上车开始，后续十分钟都没有新乘客上车，司机会认为确实没有人需要搭这趟车了，才会把车开走。 我们对比 throttle 来理解 debounce：在throttle的逻辑里，“第一个人说了算”，它只为第一个乘客计时，时间到了就执行回调。而 debounce 认为，“最后一个人说了算”，debounce 会为每一个新乘客设定新的定时器。 我们基于上面的理解，一起来写一个 debounce： // fn是我们要包装的回调函数事件，delay每次等待都执行时间function debounce(fn, delay) {// 定时器；let timer = null; 1234567891011121314return function() &#123; // 保存上下文的this let context = this // 保存传入的参数 let args = arguments; // 每次调用前都清空定时器 if (timer) &#123; clearTimeout(timer) &#125; // 去设立一个新的定时器 timer = setTimeout (function() &#123; fn.apply(context, args); &#125;, delay)&#125; }// 用throttle来包装scroll的回调let better_scroll = debounce(() =&gt; {console.log(‘触发了滚动事件’), 1000});document.addEventListener(‘scroll’, better_scroll);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言中的++ 你了解吗？]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F19%2Fself-increase%2F</url>
    <content type="text"><![CDATA[前言今天朋友问了我个C语言的问题，信誓旦旦给了答案后，在我的 Visual C++ 6.0 上运行的答案却不一，题目如下： 首先明白 ++在前和++在后的区别：++在前 先自加后运算，++在后 先运算后自加。该题我给出的答案是15，21，8，8，我的编译器给出的答案是15，22，8，8，另外有些地方又说答案是15，24，8，8（这下更是一脸懵B） 查阅资料后发现这是个问题，所以发篇博文收录一下，不过网上已经有很多总结归纳的不错的博文了，我这里就选择一篇供参考，让我们看看博友 lulubaby_ 比较nice的解释： 首先解释p的值吧。是不是很多在学习C语言的小伙伴觉得p应该等于18呢？ 第一种：p = 15 在vc环境下p的值为15，那么只可能有一种解释： p = 5 + 5 + 5 = 15 在 VC6.0环境 中，第一个子表达式i++求完值后，其它子表达式中出现的变量i的值还没有改变，依然是5。表达式(i++) + (i++) + (i++)的值为15（5+5+5），求完值后，变量i会执行自增操作3次，其值会变成8。所以最终的结果为15和8。 第二种：p = 18 在 gcc和dev c++环境 下p的值为18，不难理解： p = 5 + 6 + 7 = 18 由于”i++”是先加后自增，所以是从5开始边加边自增，最终的结果为18和8。 严格意义上来说，这个表达式不“合法”。严格地说C语言程序中不能出现类似的表达式，它是非法的，虽然它能通过编译系统的检查并也能输出一个结果。 再来解释下q值q的值为什么是22（TC环境下是24（8+8+8））？ 用VC中的debug反汇编：q=(++j)+(++j)+(++j);0040102F mov eax,dword ptr [ebp-4] //把ｊ的值传到寄存器EAX，dword ptr [ebp-4]存放的是变量ｊ00401032 add eax,1 //EAX加１00401035 mov dword ptr [ebp-4],eax //EAX的值传到变量ｊ，这两步实现第一个++j，此时ｊ＝６00401038 mov ecx,dword ptr [ebp-4] //把ｊ的值传到寄存器ECX0040103B add ecx,1 //ECX加１0040103E mov dword ptr [ebp-4],ecx //ECX的值传到变量ｊ，这两步实现第二个++j，此时ｊ＝７00401041 mov edx,dword ptr [ebp-4] //把变量ｊ传到EDX00401044 add edx,dword ptr [ebp-4] //再加上ｊ的值，这一步实现了第一个加号的加法运算，内存中ｊ变量的值仍是７00401047 mov eax,dword ptr [ebp-4] //把ｊ的值传到寄存器EAX0040104A add eax,1 //EAX加１0040104D mov dword ptr [ebp-4],eax //把EAX的值传送到变量ｊ中，此时，变量ｊ在内存中的值是８00401050 add edx,dword ptr [ebp-4] //EDX加上ｊ的值，EDX中存放的是前面的第一个加法运算的结果１４，最后EDX的值为２２00401053 mov dword ptr [ebp-8],edx //把运算结果传到内存中变量ｑ的地方，所以最后变量ｑ为２２ 可能有很多小白看不太懂上述的解释 q = 7 + 7 + 8 = 22 C语言的深水在这里就可以体现了，在C语言中，加法从左到右运算,先算前两个加数的和，再和第三个相加的过程中，他会先把前两个括号内的东西执行完成后，再执行括号外的加法，也就是（7+7）+8=22。如果是4个++j连续的话，结果就应该是 7+7+9+9=32 。 亲爱的你们懂了吗？ ps:php中，测试下述代码（结果是：18，21，8，8）： 12345678910&lt;?php $a = 5; $b = 5; $p = ($a++)+($a++)+($a++); $q = (++$b)+(++$b)+(++$b); echo $p; echo $q; echo $a; echo $b;?&gt; 得到的18和8我就不多说了，21也是比较符合我们正常思路的6+7+8。 而在python,go,以及ruby中，没有自增运算符，这样也就大大减少了这种因版本和编译器的差异导致运行结果不同的概率。 本文摘转自 lulubaby_ 博文 —— 原文传送门]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git rebase 与 git merge 的区别]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F18%2Fgit-01%2F</url>
    <content type="text"><![CDATA[前言初学git，在合并分支上必定会常用到 git merge 语法。今日接触到 git rebase，发现二者都有用于分支合并的功能，那接下来让我们探究一下二者的不同之处。 First：二者的区别主要区别在于git log上：是否保留分支的commit提交节点 。 Than：详情分析前提： 在一个git项目中我先创建并保存了两个文档：1.txt 和 2.txt 记作“1” 和 “2”； 创建分支branch1； 继续在主分支Master上创建并保存两个文档：3.txt 和 4.txt 记作“3” 和 “4”； 转到branch1分支上创建 5.txt 和 6.txt 记作“5” 和 “6”； 此时，我们的主分支Master上有1、2、3、4 四个文档，branch1分支上则是1、2、5、6 四个文档，接下来执行我们的合并操作。 git merge： 我们直接回到主分支Master上执行 git merge 命令，显示如下： 此时我们的 git log 上保留了分支branch1的 5 和 6 的commit提交，且又在主分支Master上自动创建了一个新的commit提交节点 “7”。 简单而言就是Master的1、2、3、4和合并的branch1的5、6的提交过程都被记录下来了，且自动在Master上自动生成第7个节点： git rebase： 我们在分支branch1上执行 git rebase 命令：会发现branch1合并了 Master 的 3、4 文档，所以现在branch1 就有了1、2、3、4、5、6所有文档，回到Master再合并一下：这时我们的 git log 上就得到一个简洁的项目历史，且未生成新的 merge commit（保留了分支上的提交信息成功与Master合并，但删去了提交历史记录）： 自我猜想： 学完rebase，我即刻猜想，若是在分支baranch1上直接merge合并主分支，得到所有文档后再回到主分支上执行merge会不会也能得到一条线，事实证明，这么想说明还是没有完全理解rebase的真正含义，先看结果吧… SO（敲黑板）今日学习： rebase 到底是什么？ rebase就是——变基， 变基， 变基 。 即：改变一条分支的 基点 ，使原分支从指定的节点（commit）延续。。 通俗点讲，变基操作其实就是保留了该 commit 作出的修改，但删丢弃了分支上一些现有的提交记录，删去了这些节点。 Last：二者比较 比较 merge rebase 优点 保留有价值的历史文档 删减就繁 缺点 分支杂乱冗余 无法体现时间线 所以，使用merge还是rebase还是得分情况考虑，具体项目具体分析： 如果项目庞大，需要一个简洁的线性历史树便于leader管理，推荐使用 git rebase 。 如果是小型项目，需要审查历史纪录来便于编写过程报告，则推荐使用 git merge 。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速看懂“商业模式”？ [收藏]]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F17%2FbusiModle%2F</url>
    <content type="text"><![CDATA[前言 什么是商业模式？商业模式中最重要的部分是什么？以及其对商业模式的看法 互联网公司的业务最重要的就是“流量”和“商业模式”。流量往往是商业模式产生的前提，因为有了流量才有客户愿意和项目合作。 但往往创业项目就比较悲催了，还是一个商业计划书的“画饼”阶段，哪里有什么流量，这个时候完全是靠商业模式撑着，甚至在初创型互联网之中，商业模式的构架能力甚至超过了流量（资源）的重要性。 ★ 而什么是商业模式呢？ 一、商业模式=盈利模式+服务模式+组织模式商业模式应该包括三个层次： 第一个层面回答项目如何赚钱，也就是所谓“盈利模式”；第二层面是回答靠什么样的方式去服务用户，那就是“服务模式”；第三个层面是如何聚集起自己的用户，怎么把规模搞大，也就是“组织模式”。从这三方面考察商业模式，这相当于是项目的“中心思想”。 如果是一个很成熟的产品，其产品逻辑和设计一定是服从于商业模式才是合格的，反之如果产品还没有成型，也可以根据商业模式来推导出产品的逻辑和一些功能设计的，基于商业模式的预测和推敲往往不会离谱，“万变不离其宗”。 盈利模式其实很好讲清楚，那就是公司账上的钱从哪里来作为判断依据，从企业客户里收来的就是to B，从终端消费者口袋里收上来的就是to C。 以“华为”举例说明： 任正非说“客户是公司创造财富的源头”，华为的客户有哪些？ 华为在做手机（to C）之前，他们的客户主要来自企业（那时候华为主要还是一家to B的公司）；现在全球社会面临5G升级，其客户扩大至一个个政府组织，也有所谓的“to G”；而华为最让美国人忌惮的是这家公司不走资本路线，不上市不融资，觉得不好操控是一个“异类”。 而大多数公司尤其是互联网公司的现金流来源需要资本市场融资，即所谓“to VC”模式。一般to VC公司的归宿是上市，上市之后风险投资人原始股才更值钱，在上市之后在二级市场则是to 股票市场投资人（有的是散户和韭菜）的模式，去年就有很多互联网公司上市了。 盈利模式最终还是要回归到消费者或者客户，也就是说，主流的盈利模式就两个：要么是to C，要么是to B。 “服务模式”就是：为客户或者消费者提供的是什么东西才“值钱”。 有的是产品（比如小米手机），有的是内容（比如得到的课程），有的是预期保障（比如平安的保险），有的是技术解决方案（比如微盟为中小企业提供小程序一站式解决方案，科大讯飞为企业提供的智能语音识别系统等），有的是搭建一个销售平台（天猫为实体品牌搭建线上销售平台）等等，这些涉及到具体的业务执行层面，你会发现，接管这部分为公司赚到钱的职能部门，就叫做“市场部”。 商业模式之中最难窥门道，也是最难模仿的其实是“组织模式”，这一点很多人在提及商业模式的时候甚至没有想过，接下来要花一些篇幅来讲，尤其是互联网公司的“组织模式”。 我们知道，传统企业的组织模式往往是金字塔式的，通过分区域制来搭建自己销售网络和渠道，主要负责铺货和回款，但这种组织模式所付出的管理成本和沟通成本巨大。互联网本身是跨区域的、扁平的，这就给传统企业的组织方式带来了巨大的冲击和变革。 不妨以教育行业为例：传统教育机构是设立分校，但是很多机构在三线以下城市很难吸引大学生去做培训老师，就连好未来、新东方都没有办法下沉到三四线城市。 而互联网教育平台比如K12机构中的掌门1对1、阿卡索、DaDa等基本都能够做到，也压根没有所谓的“下沉市场”和“下沉用户”这一说法，其实那些谈到“下沉市场”其实是站在传统企业的组织模式上思考这个问题的。 现在的互联网公司一般是 “强总部轻支部” 的，实际上与传统企业组织模式恰好相反，过去那种各地的销售人员加起来远远大于总部人员的情况，在互联网公司是难以现象的。互联网公司总部会有很多技术人员，但是支部基本上可以由市场上共享或者外包合作来解决，也可以理解为，除总部之外无自养之兵，若需要都是雇佣兵形式。 当然，互联网化组织模式之中也有“异类”，比如：京东和美团快递员和配送员就超过了总部人员，甚至占到了80%，不过要注意到的是这两家公司均是亏损大户。与其说这是他们组织模式的特色，不如说这是他们迫不得已，因为更轻、更高效的组织模式已经有其他家早做了。我相信，这两家的“外包化”、无人配送的趋势最终将不可避免。 互联网的组织模式有时候也被称作是 “平台模式”，关于“平台”的概念在很多领域都极端含糊，完全只能凭借情景来理解。从低人力成本的维度上看，平台模式往往是通过搭建一个线上交易平台，让各方参与到其中，不为这些参与者发工资，以严格的社区契约取代公司员工的纪律约束，让参与其中的人“自组织”形成起来。 一般这些平台如果不是跑现金流的其盈利模式，最终会走广告的流量变现模式，而最有想象空间的还是交易平台，类似滴滴出行就是这种模式。 程维并没有给滴滴平台上的司机们交工资和社保，这些司机都是个体创业者，他们之所以愿意在滴滴上跑活，前提是滴滴上有客流量、有单子接，滴滴则是在每一单中抽服务佣金。 美团也是采用这种每单抽佣的形式作为盈利模式，但是最高交易频次的外卖业务必须依赖养配送员的传统组织模式。所以，滴滴就做网约车一个项目，就比美团做那么多品类估值高的原因在这里，可见组织模式先进程度直接决定了平台的毛利水平。 我们再来看，阿里巴巴也是这样平台组织模式，马云基本不需要雇佣快递员，也没有做仓储，甚至没有像小米那样按照电商逻辑去选品制造产品。他做其实是 “自组织” 的活，让大家在平台内获得利益分配并且活跃下去，就可以像滚雪球一样越做越大，剩下的苦累脏活基本由其他电商项目去做了，这也为什么京东与阿里之间的市值基本上差十倍以上，其差距不是在于流量和GMV上，而是在“组织模式”上。 由于是阿里巴巴跑的平台级现金流业务，尽管流量和投资广度比不上腾讯，但是在盈利模式能上略超过腾讯一点点。 二、商业模式中的“组织模式”为何重要性优于“服务模式”和“盈利模式”？ 从宏观维度上看，盈利模式无非是to C/to B/to VC/to 散户或韭菜/to G这五大类。 也就是说，是羊毛出在羊身上，或者是从商户那里抽成，再或者是通过提供平台的方式提供服务，甚至有可能压根就赚不到钱，卖的多还赔得多。但做流量规模之后上市即所谓的“战略亏损”烧死对手打下整个市场再做利润。 大道理大家都懂，但为什么好多项目就是做不来呢？项目跑通的核心是服务模式和组织模式要共同支撑起具体项目的“盈利模式”。 我们以知识经济为例：实际上互联网内容产品的服务效率相对于传统实物电商销售形式是更高的，没有任何商品库存压力，核心拼的是用户留存、复购和消课情况。 不过服务产品很容易同质化，这个老师讲的这个课程比较火，很快一堆老师去讲了，最终比拼如何让一个课程让更多学员买单。有的根据网红老师的影响力，有的则是采用各种返佣和裂变模式来做，但很快各种裂变手段刷爆朋友圈了也陷入疲软了，其实也印证了服务模式的壁垒，其实并不是很高的。 目前让我看到组织模式创新眼前一亮的项目是樊登读书会，其内容产品主要是由樊登输出课程为主，并以开讲嘉宾老师录音课程为辅。 樊登看到了只有实现付费用户的裂变，才能实现这些内容产品的“边际效益”，因而推广和营销至关重要。樊登读书的组织模式是典型的“重总部轻支部”模式，整个APP的运营、技术加起来是200人，而樊登读书的推广大使主要是由书友在各地举办的书友会，不用发工资、自组织、相当于“荣誉会员”。 现在很多人读书并不是以前找不到书看渴求知识，而是求氛围、派遣孤独和无聊，线下社群组织者无非是多送几年的VIP会员，总部无需过多成本，但樊登读书未来最值钱也许就是这个线下社群所构建的 “海星模式” 或者说 “阿米巴模式”。当读书会成员在线下社群、朋友圈自发成为推手时，也就解决流量获客瓶颈问题，非常值得初创企业学习的用户增长模式。 有很多项目商业模式从逻辑上讲非常完美，流量很大、规模效益很足，但是最终就是挂在服务模式和组织模式成本过高。 我们不妨复盘共享单车行业的兴衰，把共享单车模式的与滴滴的“平台”组织模式对比，就可以发现：共享单车所突出“共享”概念其实在商业模式上从来没有真正落地过，单车是摩拜和ofo等自己投钱造的并且负责投放的，车辆运维的成本也是运营方全包的，当然这些钱都是VC给的。 即使ofo曾经单日线上订单量超过滴滴，但是仅仅单车的维修成本就足以让投资人赔的血本无归；其唯一的希望就是垄断市场但是没有成功。摩拜甩给美团之后几乎是负资产，连品牌撤下刷成“美团单车”了，因为与其最终要承担维修费用，不如留在街头做实物广告。可以说，共享单车从一开始就在商业模式的平台化组织模式上缺乏设计和推动而埋下了败局的隐患。 不过现在网约车也本身没有什么搞头了，既然已经有这么强势“自组织”平台摆在那里，就像一个磁场一样会吸附周围各种资源，就很难再做出另一个自组织平台了，那种不发工资的平台要活跃起来其实比发工资更难。 目前构建这个领域的商业模式的最佳时机已经过去了，就像现在在做一个阿里巴巴的电商模式一样不现实。既然人家生态已经很成熟了，就无法再复制了。共享单车项目做网约车明知不可为而为之，希望能够用补贴把司机再凝聚起来。 但忽视了网约车政策壁垒是需要一个个城市落地都要牌照，网约车在商业模式是与出租车牌照业务是相互竞争的，地方政府不可能让那么多家网约车平台存在，所以大家基本上看到美团打车做了两年多了，一线城市牌照都没有拿全。 “组织模式”壁垒高产生了一个后果，那就是：轻平台模式的确比所谓的“重服务”模式更具竞争优势，做重模式实际上是被迫的。 这也就是几年前O2O在很多领域内都没有跑通的重要原因；而做重模式又需要很多钱，必须要让投资人买单，所以胜出的只有极少数幸运儿，不得不说，类似京东、美团这样的公司在资本市场“钱荒”时也是不可复制的。 当然有人可能会提出反驳，既然互联网公司在线下设渠道和自营服务人员比较重，那为什么小米、华为以及很多智能家电产品会在不同城市去开专门店呢？ 道理很简单，这些硬件产品的盈利模式是一分钱一分货，其成本除了生产成本、营销成本以外，还包括了售后成本，尤其是电视之类大件还需要安装，而做线下店能以手机存量用户的粘性来拓展更多周边电器产品的销售，提升复购，顺便cover的售后成本。 以上不难看出：在互联网平台的商业模式之中，反而是组织模式重要性是强于服务模式，服务模式是强于盈利模式的。 前两个环节的基础打得牢，反过来盈利模式是水到渠成，在人人追逐钱的社会，对于钱不感兴趣的马云成为了中国首富，反思阿里巴巴的服务模式和组织模式在中国企业之中是不是最好的？就不奇怪了。 三、如何看待互联网平台商业模式之中的“平台税”？上述商业模式的阐述，有心的朋友就会发现：互联网公司对于商业模式最大的贡献其实是 “平台化” 组织模式，它最能够释放了互联网 指数型增长 和流量红利优势。 互联网最开始诞生的时候更多是在信息传播领域的“共享”，越往后发展越是资源、技术的共享，共享的前提是“让利”。 已经在越来越多的行业内可以清晰的看出，做成NO.1基本是“平台模式” 了。因为这种组织模式变革，可以调动所在行业指数级增长，而过去那种完全依赖自身品牌单打独斗的项目即使做得市场第一也是线性式增长，其市值也远远不及互联网公司高。 不过互联网公司做平台总得盈利，关于其盈利模式，“靠谱的阿星”发明了一个词——“平台税”，基本能够概括目前绝大部分平台的收入来源。 接下来，我们以一些知名的互联网平台进行举例说明： 在电商平台领域，阿里巴巴2019年整个财年收入3768.44亿元，净利润876亿元，市值4500多亿美金，是中国互联网公司中最赚钱的也是市值最高的公司。 阿里云的盈利模式基本上是to B，也就是从商户或者企业那里收钱，除了云计算业务以外，还包括其核心业务（电商业务）。 据知情人士表示：台抽佣为例，商户在淘宝是免交易抽金，但由于淘宝商城内每一个SKU中都有很多商家的产品，商户需在平台内买流量位（直通车或者钻展），这就构成了淘宝的收入；而天猫商城当然也有相关商家的流量收入，同时还有抽交易佣金以及技术服务费。阿里巴巴是一个大数据公司。 在O2O服务平台领域，以美团为例其交易佣金根据市场竞争状态在浮动，其中2019年Q1是13.87%，也就是此时用户说买一单100元外卖，美团提走13.87元。不过商家一般也会算，外卖价格定得比堂食贵就行了。 美团业务线比较多，不同的品类的佣金应该有不同。滴滴平台上的交易佣金也是每单都提，我是滴滴的深度用户，经常坐在副驾上跟司机聊，有的说抽20%，有的说抽25%，一般还根据交通情况进行来调节佣金调动司机。 在内容平台领域，以快手为例：很多网红主要收入来源就是开直播让用户送礼物打赏，快手平台与用户之间是五五分成，快手实际上是目前最大的直播平台；去年4月份当时抖音还没有上线直播功能的时候，“靠谱的阿星”写的一篇文章里说“无论是按照五五开、四六开还是三七开算，抖音肯定是不过错过做直播模式的”，现在抖音直播按照三七开算的，达人提30%的打赏收入。 再举一个例子：有很多自媒体大V入驻得到开课，得到就成了平台，对专栏买卖收入也是每一单会抽佣的。 一般平台越是成功，其抽佣也就越强势，网上也有一些人对“平台税”不满，其实这种“税是喂养平台的娘奶”。 一方面平台搭建了基础设施，就像过高速收费一样；另一方面是平台运行需要支付的带宽费、服务器费用、CDN网速加速等都是成本。 再加上，很多人在平台之所以能够成交是由于平台派单或是导流，而平台为了获取和留存这个用户本身也是花了一定的费用的。所以，平台抽佣无可厚非，这乃是平台与其参与者之间的游戏规则。 目前，电商平台的模式有很多，比如：C2C、B2C、B2b2C等等。严格来说均有“平台税”则是表现形式不同而已，也有的人把电商模式单独归结为一种与“游戏”、“广告”相区分的商业模式。“游戏模式”自从手游普及之后大家都明白了是怎么回事。 在上述三种主流互联网商业模式之中，电商模式对商业模式贡献最大，电商无论发展无论是网红电商、服务电商、团购、拼购等核心还是平台如何平衡用户端与商户端之间的关系。这两年电商模式又开始演变以大数据为渠道的C2M和新零售；还有以SaaS平台为无数个供应商作为小b提供线上平台，再由他们各自服务自己的用户的 S2b2c模式。 而S2b2c模式已经超出电商范畴，平台即S搭建了一个技术型基础设施，而小b入驻于平台中购买软件和系统的商户，这些商户之间又是去中心化的，单独与平台之间是相互协作的关系。 他们可以通过S提供工具去服务各自的用户，构建起自身的私域流量。由于一次采买的平台提供系统服务，不需要再和平台进行交易分佣而开始大行其道。实际上，目前微盟、小鹅通、房多多等都是采用这种模式来做to b端的技术解决方案。个人认为，S2b2c模式结合了平台化的组织模式优势，又减少了“平台税”的摩擦，应是未来商业模式的趋势之一。 我们再看看整个移动互联网流量最大的互联网公司腾讯，除了游戏模式以外，腾讯由于掌握了流量最重要的筹码而成为国内针对互联网行业的最大的投资机构。 微信是腾讯最大的流量平台，微信这个产品之所以能够成为移动互联网国民级应用和最普惠基础设施，原因在于 微信本身没有商业模式。所以，张小龙才说“微信一个工具，而不是一个平台”，很多微商以及部分借私域流量名义做微商的行为，实际上就是利用了微信本身不收“平台税”的特点，本身也可以理解为是在“逃平台税”。 2018年之后腾讯开启拥抱产业互联网，实际上腾讯是想做一个结合了各行各业类似S2b2c中平台赋能者的角色，除了作为自身to B领域的盈利方向外，还在为AI（人工智能）获取更多行业商业智能做前期准备。 结语每一个商业模式的梳理和研究，都需要对应的案例作为支撑，只有充分消化这些案例，才能总结出里头的商业模式。 学习商业模式最快的途径就是把自己作为一个神秘的顾客去体验一遍，消费一遍再结合产品、商业计划书以及上网一些通稿去理解。 一般商业模式不会成为PR的重点，除非是这个项目还处于起步阶段，需要更多投资人和行业人士理解才会做商业模式上的传播。 类似腾讯公关不会PR游戏收入，阿里公关也不会提收了多少佣金或者营销收入，比如：百度、头条他们对其广告销售体系的组织模式也不会向外公开，有时候只有等公司上市了之后才能看到一些数字，但对于不了解其商业模式的人来说，这些数字背后意义也没有多少人真正在意。 现在商业模式越来越务实，比如一些to C模式的平台可能从一开始就鼓励用户买VIP，先付钱再做服务，保证现金流之后再砸服务效果；在组织模式上未来平台会鼓励更多人在平台上创业而非打工，平台更少的人力成本而参与者更多的自由时间，两全其美。 商业模式是一个项目精髓所在，在一家公司比较小的时候能看得很清楚，甚至能根据商业模式作为做出预判，当这家做大了之后，就很难再看清楚他们的商业模式，大家也可以选择在一些优秀创业公司很小的时候一直关注甚至选择陪伴他们成长，体会会更加深刻。 本文收藏转自 李星（公众号“靠谱的阿星”，靠谱汇创始人，哲学硕士，科技媒体专栏作者）—— 人人都是产品经理 阅读原文]]></content>
      <categories>
        <category>产品经理</category>
      </categories>
      <tags>
        <tag>商业模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[乒乓圈 [原创]]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F16%2FTTcircle%2F</url>
    <content type="text"><![CDATA[银跃乒乓圈小程序 - 项目介绍文档旅梦开发团-发烧圈团队 1 项目背景&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;马克·罗在问与答网站上写道，“在中国有一个笑话，永远都不要说你擅长打乒乓球，因为你不知道你的朋友里是否有从省队退役下来的。”总所周知，乒乓球是国球，但在这互联网时代，市面上与乒乓球相关的线上可用产品却不过数几，大多也都只是涉及器材贩卖和乒乓培训方面，对于乒乓球兴趣的平台服务基本空白，这也就促使我们乒乓球爱好者对其产生兴趣，致力研究，打造一个专门关于乒乓球兴趣的大众自主服务平台。 2 项目简介&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;银球跃动，挥拍击扬，乒乒乓乓，兴趣所在。这是我们对打乒乓球的现实描述，大家都是通过同一兴趣走到一起，互相认识，互相切磋，以球会友。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;银跃乒乓圈以平台为思想，致力于打造乒乓球兴趣圈的自主服务，可以共享球馆，查询场地，一键约球，查看快讯，参与比赛，留言互动，以线下球友，线上圈友的形式，使用户在小程序内资源共享、双向交互，达到平台自主服务。 3 名词解释 序号 名词 描述 1 自主服务 我们打造的服务平台，搭建服务框架，用户之间的双向交互形成自主服务（例如，共享球馆—发布球馆，上传球馆信息；一键约球—用户线上匹配交流，线下约球等） 2 球圈 一个球馆代表着一个球圈 3 圈友 银跃乒乓圈用户统称圈友 4 乒乓段位 通过打卡，开快讯参与比赛等获得积分，累计积分越高段位越高，权限增加 5 同城圈 可查找同城已共享的球馆，查看球馆相关活动人员，共享发布球馆，一键约球 6 达人圈 段位积分升至达人的用户或者特邀用户可在达人圈进行优秀图文的发布 7 赛事圈 可查询并参与比赛，段位积分升至达人的用户或者特邀用户可发起比赛 8 快讯圈 可浏览收藏乒乓球相关的新闻快讯 4 可行性分析4.1 项目可行性&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;据国际乒联的数据，2018年中国有41.9%的人口都在电视上观看了乒乓球比赛。全年中，有5.39亿的观众专注于观看乒乓球，中国有1000万人经常参加乒乓球比赛，3亿人会打乒乓球。刘国梁曾发博给出数据，全国专业选手2000人+业余体校30000人，全国参与乒乓球一周两次以上，一次一小时以上的有8300多万人。现在各个地区也都发展起来各种乒乓球馆、球室、俱乐部，基本每个公园、小区、公司、学校等也都装备了乒乓球设施，可见乒乓球体育运动项目的人员基数庞大，硬件环境成熟可观。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在每一个地方都有乒乓圈，圈内人互称球友。乒乓圈小至县乡有一两个圈子，大至市、区有十多个甚至更多具有一定规模的圈子，加之各个高校有其圈子，小区有其圈子，甚至街道也有其街道圈，各个圈子相互交织，错综复杂。那么这个小程序的作用关键就在于对各个乒乓球圈的整合，球馆资源共享，让球友们交流起来更方便、更广泛，这无疑是给一些乒乓萌新爱好者带来了福音，也给一些足具规模的圈子有了更广阔的发展渠径。因此本项目开展的可行性非常高。 4.2 技术可行性（1）使用colorUI组件库，加强视觉交互，提高用户体验；（2）使用VUE组件化编程思想，提高代码的复用性；（3）JS处理各种业务逻辑，通过向后端接口请求数据或者对数据进行格式化，用函数式编程风格，对各个业务逻辑进行功能划分，编写基础业务方法，工具类方法进行抽离，独立成一个工具函数模块，利于代码规范统一；（4）整体布局与样式严格遵守微信UI规范微信官方提供多种API及组件工具，极大地加快开发效率，标签命名遵守BEM(Block Element Modifier)；（5）云开发：弱化后端及运维的概念，无需搭建服务器，降低开发成本，使用微信平台提供的api即可完成核心的业务开发，方便快捷：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.云函数：在云端运行的代码，微信私有协议天然鉴权，开发者只需编写自身业务逻辑代码；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.数据库：既可在小程序前端操作，也能在云函数中读写的 JSON 数据库，免费2G容；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C.存储：可在小程序前端上传/下载云端文件，在云开发控制台可视化管理，免费5G容量。 5 功能详述5.1 功能需求5.1.1模块1—tarbar首页5.1.1.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首页是最重要的模块，也是用户登录进来看到的第一个模块，所以首先在界面设计上花费了许多心思，起初的设计以圈的思想规划了几个圈，上面以常见的轮播图形式展示新闻如图5-1，进一步设计中，将圈形象化以乒乓球的形式展示出，背景以乒乓球桌的形式展示，让乒乓球爱好者感受到小程序风格的贴切如图5-2，但是在实际代码实现过程中，发现展示效果并不如原型图那么理想，轮播图以爬虫技术获取的中国乒协官网的新闻有些图片展示也并不美观，影响的首页的整体效果，于是又把快讯单独拉出来放了一个版块，和同城圈一样把快讯以圈的形式展示，加之整个背景使人感觉深沉，于是通过大量素材的查找和配色下，在原来蓝色的基调下使主体颜色浅化，处于紫色和蓝色之间的青紫色状态展出，最终确定了整个小程序独特的的主题风格如图5-3，但是图三的圈体现不出小程序的主打功能，于是我们将同城圈单独划出为一个大版块展出，其余三个 置下做出轮播的用户交互效果，实现图5-4的首页效果。以下是我们原型设计的成型过程： 图5-1 原型1&nbsp;&nbsp;图5-2 原型2&nbsp;&nbsp;图5-3 原型3&nbsp;&nbsp;图5-4 原型4 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由图容易看出：本产品首页的功能板块主要有：同城圈，达人圈，赛事圈，快讯圈，附带榜单和打卡签到功能，基本涵盖了乒乓球体育运动项目的方方面面，致力于全方位平台服务。 5.1.1.2 功能点 序号 功能名称 所属版块 功能简介 状态 优先级 1 共享球馆 同城圈 发布球馆表单，上传球馆信息 已完成 P0 2 一键约球 同城圈 用户之间的匹配约球交互 待开发 P0 3 城区选择 同城圈 可选择查看其他城区的球馆 待开发 P1 4 加入球圈 同城圈 加入球馆的活动成为圈内人 待完善 P1 5 参加比赛 赛事圈 可以参加已发起的赛事 待开发 P2 6 发起比赛 赛事圈 达到权限可发起比赛 待开发 P2 7 浏览快讯 快讯圈 关于乒乓球的新闻快讯 待完善 P3 8 精品收藏 快讯圈 收藏自己值得珍藏的快讯 待开发 P3 9 发表图文 达人圈 达人发表乒乓球优秀图文 待开发 P4 10 榜单 首页 查看同城积分排行榜 已完成 P5 11 签到 首页 签到增加相应积分积分 已完成 P5 12 提示 首页 乒乓球全局通告 已完成 P6 5.1.1.3 页面布局首页页面1&nbsp;&nbsp;首页页面2&nbsp;&nbsp;首页页面3首页页面4&nbsp;&nbsp;首页页面5&nbsp;&nbsp;首页页面6 5.1.2 模块2—tarbar圈友5.1.2.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此模块维系首页主题色调，银跃式简约阳光风格，背景用CSS制作气泡，象征着一个又一个大小不一的圈，也代表着积极运动阳光向上的理念。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此模块分为两个版块：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（1）显示自己已加入的球圈列表及其相关活动人员列表；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（2）显示圈友给自己的留言消息。 5.1.2.2 功能点 序号 功能名称 所属模块 功能简介 状态 优先级 1 球圈列表 圈友 列出所有已加入的球圈 已完成 P0 2 圈友信息 全局 列出求圈内圈友及其信息 已完成 P0 3 圈友留言 圈友 给圈友留言 已完成 P0 5.1.2.3 页面布局圈友页面1&nbsp;&nbsp;圈友页面2 5.1.3 模块3—tarbar我的5.1.3.1 设计及功能描述&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;乒乓圈小程序的个人仓库，对自己的信息做修改完善的模块。 5.1.3.2 功能点 序号 功能名称 所属模块 功能简介 状态 优先级 1 个人资料 我的 对个人资料的修改 已完成 P0 2 乒乓段位 我的 段位机制查看5.1.4 已完成 P1 3 我的积分 我的 积分机制擦查看5.1.4 已完成 P1 4 精选收藏 我的 快讯收藏的仓库 待开发 P2 5 我的赛事 我的 查看自己已参加的赛事 待开发 P2 6 意见反馈 我的 用户对乒乓圈小程序的反馈 待开发 P3 7 关于我们 我的 关于乒乓圈的简单介绍 待完善 P4 5.1.3.3 页面布局我的页面1&nbsp;&nbsp;我的页面2&nbsp;&nbsp;我的页面3 5.1.4 机制规则乒乓圈段位积分及其权限设置机制：（1）同城榜单按照段位积分排名，段位：新手1—10段，业余1—10段，达人1—10段；积分无上限，按积分排名（2）产品用户：特邀用户+普通体验/游客/用户（3）积分累计规则：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A.打卡第1日 — 1分,连续打卡2日 — 2分,连续打卡3日 — 3分,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;连续打卡4日 — 4分,连续打卡5日 — 5分,连续打卡6日 — 6分,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;连续打卡7日 — 8分,连续打卡7日+ — 10分,如果其中有一天&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;没有打卡就会清零,并重新开始计算 从2分开始。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.阅览新闻快讯+1积分，一天加分3次上限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C.同城一键约球+1积分，一天加分3次上限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D.加入一个球圈+1积分，一天加分1次上限（4）段位机制：A.初始：新人B.新手段位：新手1段(30积分)，新手2段(60积分)，新手3段(90积分)，新手4段(120积分)，新手5段(150积分)，新手6段(180积分)，新手7段(210积分)，新手8段(240积分)，新手9段(270积分)，新手10段(300积分)C.业余段位：业余1段(400积分)，业余2段(600积分)，业余3段(800积分)业余4段(1000积分)，业余5段(1200积分)，业余6段(1400积分)业余7段(1600积分)，业余8段(1800积分)，业余9段(2000积分)业余10段(2200积分)D.达人段位：达人1段：新晋达人(2500积分)，达人2段：达人1星(2800积分)达人3段：达人2星(3100积分)，达人4段：达人3星(3400积分)达人5段：达人4星(3700积分)，达人6段：达人5星(4000积分)达人7段：优秀达人(4500积分)，达人8段：魅力达人(5000积分)达人9段：口碑达人(6000积分)，达人10段：专业达人(8000积分)（5）段位权限：A.新手：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.打卡、查看榜单&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.阅览新闻快讯&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.同城圈一键约球&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.申请加圈&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.查看达人圈，点赞评论收藏关注&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f.赛事圈参加赛事(功能上线后)B.业余：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.拥有新手所有功能权限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.发起球圈C.达人：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a.拥有新手业余所有功能权限&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b.达人圈进行发文&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.赛事圈发起赛事(功能上线后)（6）掉分掉段设置：两周不登录，降200分，以此类推直至为0 6 设计未完待续，更需完善。。。 附上团队大佬为本项目发表的掘金优文 —— 微信小程序–乒乓圈 - 云开发]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[笔波文]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F15%2Fpoem-wenbo%2F</url>
    <content type="text"><![CDATA[亦凄亦美 寒夜遥望隔岸灯火 此情此景 指尖轻点千丈落水 非敌非友 孤鸟长鸣下掸心愿 愿生愿死 痴情相守泪散千年 文波亲笔]]></content>
      <categories>
        <category>诗集</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[亲献]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F14%2Fpoem-love%2F</url>
    <content type="text"><![CDATA[输入密码 ❤ 查看文章 Incorrect Password! No content to display! U2FsdGVkX1/CGqw4ZmP+lq0+t/mMKeI75s0sqpe2A2OrgyRdV+K2YxHJC6iLPqXwpB0gchhWBE8uHyHD6hqBKvHJ3yYjub4ynvV4HA9Gc3cMflG7OaocqAsFhmBx3mwBekjJk6ZCZvUygcSiOt8TGXmEz6kudCsRlNGQ0leo68BM1+U6kqphxWEYD/PcOs4TS9hBo3CSm67yEkX4hKFhvU5LHdCxHgcgTfCIUEEdtH+E6j+fKLch5kx9C4H2Xx6YpHKtUsi0NkQU1yEXi2NcH9QoGy6MwJY+3/xKtnFsrcqvRy8uXpe+JHKP2JQyJCXpJrfWDvHJCAWb42JuCLt8kFHywAr3VN7jWoUuIl3jcTUzWR35I0s0+MCTcyyhr3KUILHrkpqTBUpPMk58R/bMXZZ4gXlqLUzYegYB8I4spfGffC4eV6EBaXxwpnNnnIzwCvN85dErV+wraNJrYYLquH8Xrv9l253QNGOrRE9qWwpvXnVVYRH3k9bmR+ZJNFbfg8+d53uWIu59u9ac/fBWSklByroqTXEOYJst3B+a6CtyUpbMvH+MZ3HKRNbhGRJeGH4fJIEpnEnvqDprnRZVU2Mmfdx5NcOJR3n76cVJQfe0uuUe8wYjeXgUn+CrYyaGbMJJfnDI846Lnwg2NttQfciaZvSyZuShO+WrZ2NXee34SXtfoGyaigyS0FAKmzvMWYHocXJbJ0+iz38VfrWNNlcceoNCePwYS2QBQGWalIW9wSuxGHnZskY258aDX4mesL/hApnYJXt9TTbk6StW9ytQ5Cdq6AZmWMFAp9IGCDrDrfTlY3p7hVE8z4sXj5YeJiPiQaFzTD6Eny9Zjh45Nz9pm7W9VSSj923TWKMP/Omw+uP5PEOXw0DpfJHCbdpAgFXdXO37+S2mUJTqGDTjMKhMdVA2+gHuK5u81YSGTNaVTgzvJjI+qjUjNmwEAGewggAA/MDaNTi0D3M4T6qwHs4yFhA1TMTlLiJJI66NJ8WlJFmAjvhrabOwbsEud0b3w3zOdzYmOpREPCGXg/R+3NFD5J9lW8pdfgLAm4KSERRCDOmaBKUKL8wNYy4au3jxm7hb5W+At6ZKT1uejVfRVugl6OlZKD98UpsC+vfBlhvPhQv6kH0grnqEy79nX3qfSwD0u7Lh9bzoZCF0YYOcQotHLpzSaqeR+YXPjyhTNG51FRlEqqWKGXTqy9sySwLbLoCnYchy+Hd45f/O3biwGd1jvaxs14DwuwecV3BlRQr3rI0J4Z3gvwsLbF+/epDdTjABdljg/jElionD6uq8pP90syJY07DJtMWuMf/7An88zJmovvHrn4dE0/xKSWmrNs1EGT/FTkqT27l5LS+Ulx5KSdvF96R7p8DRxQBnm7YR2VU5eko/oEwqAhhRdINVwlpNMFy0ha9xw/RwyQqaYYn+lp4i2/PqpFvkn5qGRXuuUKT4Txlm+MEOADBLtDFI5yy5sePofrrRCbKVg52v9Nva1IF6fsJbBAjFRm9FCUP8BWk3wWpkmA+FmB1LIdrosZGq5hUKyjRrVtAB/FP5ne8JZ9qq8mszwzBs7hvXIjjEarAX68nR1xTtCy1xNAEyCHdeSXY//xva7SrMAsgjPA==]]></content>
      <categories>
        <category>诗集</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[友情链接]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F13%2Ffriends%2F</url>
    <content type="text"><![CDATA[旅梦开发团自频道 叶志祥老师 - 慕楚教育 技术胖 阮一峰 张鑫旭 司徒正美 小猿大圣 Phodal 酷壳 36氪 人人都是产品经理 UI：uigradients、trianglify.io 工具类：xiaopiu.com]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于转载]]></title>
    <url>%2FJietingHuang.github.io%2F2019%2F08%2F13%2Fcopyright%2F</url>
    <content type="text"><![CDATA[首先感谢hexo以及Yearn主题作者hufangyun小猿大圣让我迅速搭建起自己喜欢的个人博客，以此认真记录下自己的学习旅程，希望以后我能在自己的学习道路上越走越远，如我在首页所说：“路漫漫其修远兮，吾将上下而求索 —— 学而无止境。” 刚建立博客，虽然还未发表什么有价值性的文章，但我始终尊重和支持原创，也同是为了促进自己的学习，若有转载或摘文，必定注明出处。所以也希望走过路过的朋友看到此文也能这么做，创建文明共享网络。]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
</search>
